// Generated by the V compiler


var $global = (new Function("return this"))();
function $ref(value) { if (value instanceof $ref) { return value; } this.val = value; } 
$ref.prototype.valueOf = function() { return this.val; } 
const $process = {
  arch: "js",
  platform: "browser",
  cwd: function() { return "" }
}
const $os = {
  endianess: "LE",
}
function checkDefine(key) {
	if (globalThis.hasOwnProperty(key)) { return !!globalThis[key]; } return false;
}
function BreakException() {}
function ContinueException() {}
function ReturnException(val) { this.val = val; }
function Array_rune_arr_eq(a,b) {
	if (a.arr.length != b.arr.length) {
		return new bool(false);
	}
	for (let i = 0; i < a.len; ++i) {
		if (!vEq(a.arr.get(new int(i)),b.arr.get(new int(i)))) {
			return new bool(false);
		}
	}
	return new bool(true);
}

function Array_int_contains(a,v) {
	for (let i = 0; i < a.len; ++i) {
		if (vEq(a.arr.get(new int(i)),v)) {
			return new bool(true);
		}
	}
	return new bool(false);
}

function compare_RepIndex_by_idx(a,b) {
	if (a.val.idx.valueOf() < b.val.idx.valueOf()) return -1;
	else return 1;
}

function time__Duration_alias_eq(a,b) {
	return new bool(vEq(a,b));
}

function Array_string_contains(a,v) {
	for (let i = 0; i < a.len; ++i) {
		if (a.arr.get(new int(i)).str ==  v.str) {
			return new bool(true);
		}
	}
	return new bool(false);
}

function Array_os__ProcessState_contains(a,v) {
	for (let i = 0; i < a.len; ++i) {
		if (vEq(a.arr.get(new int(i)),v)) {
			return new bool(true);
		}
	}
	return new bool(false);
}

function compare_iui__Component_by_z_index(a,b) {
	if (a.z_index.valueOf() < b.z_index.valueOf()) return -1;
	else return 1;
}

function compare_iui__Component_by_z_index_reverse(a,b) {
	if (b.z_index.valueOf() < a.z_index.valueOf()) return -1;
	else return 1;
}

function time__FormatTime_str(it) { /* gen_str_for_enum */
	switch(it) {
		case time__FormatTime.hhmm12: return new string("hhmm12");
		case time__FormatTime.hhmm24: return new string("hhmm24");
		case time__FormatTime.hhmmss12: return new string("hhmmss12");
		case time__FormatTime.hhmmss24: return new string("hhmmss24");
		case time__FormatTime.hhmmss24_milli: return new string("hhmmss24_milli");
		case time__FormatTime.hhmmss24_micro: return new string("hhmmss24_micro");
		case time__FormatTime.no_time: return new string("no_time");
		default: return new string("unknown enum value");
	}
}
function time__FormatDate_str(it) { /* gen_str_for_enum */
	switch(it) {
		case time__FormatDate.ddmmyy: return new string("ddmmyy");
		case time__FormatDate.ddmmyyyy: return new string("ddmmyyyy");
		case time__FormatDate.mmddyy: return new string("mmddyy");
		case time__FormatDate.mmddyyyy: return new string("mmddyyyy");
		case time__FormatDate.mmmd: return new string("mmmd");
		case time__FormatDate.mmmdd: return new string("mmmdd");
		case time__FormatDate.mmmddyy: return new string("mmmddyy");
		case time__FormatDate.mmmddyyyy: return new string("mmmddyyyy");
		case time__FormatDate.no_date: return new string("no_date");
		case time__FormatDate.yyyymmdd: return new string("yyyymmdd");
		case time__FormatDate.yymmdd: return new string("yymmdd");
		default: return new string("unknown enum value");
	}
}
function os__dir_str() { return new string("fn (string) string");}
function os__Signal_str(it) { /* gen_str_for_enum */
	switch(it) {
		case os__Signal.hup: return new string("hup");
		case os__Signal.int: return new string("int");
		case os__Signal.quit: return new string("quit");
		case os__Signal.ill: return new string("ill");
		case os__Signal.trap: return new string("trap");
		case os__Signal.abrt: return new string("abrt");
		case os__Signal.bus: return new string("bus");
		case os__Signal.fpe: return new string("fpe");
		case os__Signal.kill: return new string("kill");
		case os__Signal.usr1: return new string("usr1");
		case os__Signal.segv: return new string("segv");
		case os__Signal.usr2: return new string("usr2");
		case os__Signal.pipe: return new string("pipe");
		case os__Signal.alrm: return new string("alrm");
		case os__Signal.term: return new string("term");
		case os__Signal.stkflt: return new string("stkflt");
		case os__Signal.chld: return new string("chld");
		case os__Signal.cont: return new string("cont");
		case os__Signal.stop: return new string("stop");
		case os__Signal.tstp: return new string("tstp");
		case os__Signal.ttin: return new string("ttin");
		case os__Signal.ttou: return new string("ttou");
		case os__Signal.urg: return new string("urg");
		case os__Signal.xcpu: return new string("xcpu");
		case os__Signal.xfsz: return new string("xfsz");
		case os__Signal.vtalrm: return new string("vtalrm");
		case os__Signal.prof: return new string("prof");
		case os__Signal.winch: return new string("winch");
		case os__Signal.poll: return new string("poll");
		case os__Signal.pwr: return new string("pwr");
		case os__Signal.sys: return new string("sys");
		default: return new string("unknown enum value");
	}
}
function gg__KeyCode_str(it) { /* gen_str_for_enum */
	switch(it) {
		case gg__KeyCode.invalid: return new string("invalid");
		case gg__KeyCode.space: return new string("space");
		case gg__KeyCode.apostrophe: return new string("apostrophe");
		case gg__KeyCode.comma: return new string("comma");
		case gg__KeyCode.minus: return new string("minus");
		case gg__KeyCode.period: return new string("period");
		case gg__KeyCode.slash: return new string("slash");
		case gg__KeyCode._0: return new string("_0");
		case gg__KeyCode._1: return new string("_1");
		case gg__KeyCode._2: return new string("_2");
		case gg__KeyCode._3: return new string("_3");
		case gg__KeyCode._4: return new string("_4");
		case gg__KeyCode._5: return new string("_5");
		case gg__KeyCode._6: return new string("_6");
		case gg__KeyCode._7: return new string("_7");
		case gg__KeyCode._8: return new string("_8");
		case gg__KeyCode._9: return new string("_9");
		case gg__KeyCode.semicolon: return new string("semicolon");
		case gg__KeyCode.equal: return new string("equal");
		case gg__KeyCode.a: return new string("a");
		case gg__KeyCode.b: return new string("b");
		case gg__KeyCode.c: return new string("c");
		case gg__KeyCode.d: return new string("d");
		case gg__KeyCode.e: return new string("e");
		case gg__KeyCode.f: return new string("f");
		case gg__KeyCode.g: return new string("g");
		case gg__KeyCode.h: return new string("h");
		case gg__KeyCode.i: return new string("i");
		case gg__KeyCode.j: return new string("j");
		case gg__KeyCode.k: return new string("k");
		case gg__KeyCode.l: return new string("l");
		case gg__KeyCode.m: return new string("m");
		case gg__KeyCode.n: return new string("n");
		case gg__KeyCode.o: return new string("o");
		case gg__KeyCode.p: return new string("p");
		case gg__KeyCode.q: return new string("q");
		case gg__KeyCode.r: return new string("r");
		case gg__KeyCode.s: return new string("s");
		case gg__KeyCode.t: return new string("t");
		case gg__KeyCode.u: return new string("u");
		case gg__KeyCode.v: return new string("v");
		case gg__KeyCode.w: return new string("w");
		case gg__KeyCode.x: return new string("x");
		case gg__KeyCode.y: return new string("y");
		case gg__KeyCode.z: return new string("z");
		case gg__KeyCode.left_bracket: return new string("left_bracket");
		case gg__KeyCode.backslash: return new string("backslash");
		case gg__KeyCode.right_bracket: return new string("right_bracket");
		case gg__KeyCode.grave_accent: return new string("grave_accent");
		case gg__KeyCode.world_1: return new string("world_1");
		case gg__KeyCode.world_2: return new string("world_2");
		case gg__KeyCode.escape: return new string("escape");
		case gg__KeyCode.enter: return new string("enter");
		case gg__KeyCode.tab: return new string("tab");
		case gg__KeyCode.backspace: return new string("backspace");
		case gg__KeyCode.insert: return new string("insert");
		case gg__KeyCode.delete: return new string("delete");
		case gg__KeyCode.right: return new string("right");
		case gg__KeyCode.left: return new string("left");
		case gg__KeyCode.down: return new string("down");
		case gg__KeyCode.up: return new string("up");
		case gg__KeyCode.page_up: return new string("page_up");
		case gg__KeyCode.page_down: return new string("page_down");
		case gg__KeyCode.home: return new string("home");
		case gg__KeyCode.end: return new string("end");
		case gg__KeyCode.caps_lock: return new string("caps_lock");
		case gg__KeyCode.scroll_lock: return new string("scroll_lock");
		case gg__KeyCode.num_lock: return new string("num_lock");
		case gg__KeyCode.print_screen: return new string("print_screen");
		case gg__KeyCode.pause: return new string("pause");
		case gg__KeyCode.f1: return new string("f1");
		case gg__KeyCode.f2: return new string("f2");
		case gg__KeyCode.f3: return new string("f3");
		case gg__KeyCode.f4: return new string("f4");
		case gg__KeyCode.f5: return new string("f5");
		case gg__KeyCode.f6: return new string("f6");
		case gg__KeyCode.f7: return new string("f7");
		case gg__KeyCode.f8: return new string("f8");
		case gg__KeyCode.f9: return new string("f9");
		case gg__KeyCode.f10: return new string("f10");
		case gg__KeyCode.f11: return new string("f11");
		case gg__KeyCode.f12: return new string("f12");
		case gg__KeyCode.f13: return new string("f13");
		case gg__KeyCode.f14: return new string("f14");
		case gg__KeyCode.f15: return new string("f15");
		case gg__KeyCode.f16: return new string("f16");
		case gg__KeyCode.f17: return new string("f17");
		case gg__KeyCode.f18: return new string("f18");
		case gg__KeyCode.f19: return new string("f19");
		case gg__KeyCode.f20: return new string("f20");
		case gg__KeyCode.f21: return new string("f21");
		case gg__KeyCode.f22: return new string("f22");
		case gg__KeyCode.f23: return new string("f23");
		case gg__KeyCode.f24: return new string("f24");
		case gg__KeyCode.f25: return new string("f25");
		case gg__KeyCode.kp_0: return new string("kp_0");
		case gg__KeyCode.kp_1: return new string("kp_1");
		case gg__KeyCode.kp_2: return new string("kp_2");
		case gg__KeyCode.kp_3: return new string("kp_3");
		case gg__KeyCode.kp_4: return new string("kp_4");
		case gg__KeyCode.kp_5: return new string("kp_5");
		case gg__KeyCode.kp_6: return new string("kp_6");
		case gg__KeyCode.kp_7: return new string("kp_7");
		case gg__KeyCode.kp_8: return new string("kp_8");
		case gg__KeyCode.kp_9: return new string("kp_9");
		case gg__KeyCode.kp_decimal: return new string("kp_decimal");
		case gg__KeyCode.kp_divide: return new string("kp_divide");
		case gg__KeyCode.kp_multiply: return new string("kp_multiply");
		case gg__KeyCode.kp_subtract: return new string("kp_subtract");
		case gg__KeyCode.kp_add: return new string("kp_add");
		case gg__KeyCode.kp_enter: return new string("kp_enter");
		case gg__KeyCode.kp_equal: return new string("kp_equal");
		case gg__KeyCode.left_shift: return new string("left_shift");
		case gg__KeyCode.left_control: return new string("left_control");
		case gg__KeyCode.left_alt: return new string("left_alt");
		case gg__KeyCode.left_super: return new string("left_super");
		case gg__KeyCode.right_shift: return new string("right_shift");
		case gg__KeyCode.right_control: return new string("right_control");
		case gg__KeyCode.right_alt: return new string("right_alt");
		case gg__KeyCode.right_super: return new string("right_super");
		case gg__KeyCode.menu: return new string("menu");
		default: return new string("unknown enum value");
	}
}
function anon_fn_js__eventtarget_js__event_$copy (x) { return x; }
function anon_fn_js__window_js__devicemotionevent__interface_$copy (x) { return x; }
function anon_fn_js__window_js__deviceorientationevent__interface_$copy (x) { return x; }
// V_COMMIT_HASH 25d8faa
// V_CURRENT_COMMIT_HASH 5551cb2

let wasmExportObject;
const loadRoutine = async () => {
}
// https://www.npmjs.com/package/fast-deep-equal - 3/3/2021
const envHasBigInt64Array = typeof BigInt64Array !== 'undefined';
function vEq(a, b) {
	if (a === b) return true;

	if (a && b && typeof a == 'object' && typeof b == 'object') {
		if (a.constructor !== b.constructor) return false;
		// we want to convert all V types to JS for comparison.
		if ('$toJS' in a)
			a = a.$toJS();

		if ('$toJS' in b)
			b = b.$toJS();

		var length, i, keys;
		if (Array.isArray(a)) {
			length = a.length;
			if (length != b.length) return false;
			for (i = length; i-- !== 0;)
				if (!vEq(a[i], b[i])) return false;
			return true;
		}

		if (typeof Map != 'undefined') {
			if ((a instanceof Map) && (b instanceof Map)) {
				if (a.size !== b.size) return false;
				for (i of a.entries())
					if (!b.has(i[0])) return false;
				for (i of a.entries())
					if (!vEq(i[1], b.get(i[0]))) return false;
				return true;
			}

			if ((a instanceof Set) && (b instanceof Set)) {
				if (a.size !== b.size) return false;
				for (i of a.entries())
					if (!b.has(i[0])) return false;
				return true;
			}
		}
		if (typeof ArrayBuffer != 'undefined') {
			if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {
				length = a.length;
				if (length != b.length) return false;
				for (i = length; i-- !== 0;)
					if (a[i] !== b[i]) return false;
				return true;
			}
		}

		if (typeof RegExp != 'undefined') {
			if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;
		}
		if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();
		if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();

		keys = Object.keys(a);
		length = keys.length;
		if (length !== Object.keys(b).length) return false;

		for (i = length; i-- !== 0;)
			if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;

		for (i = length; i-- !== 0;) {
			var key = keys[i];

			if (!vEq(a[key], b[key])) return false;
		}

		return true;
	}

	// true if both NaN, false otherwise
	return a!==a && b!==b;
};

function $sortComparator(a, b)
{
a = a.$toJS();
b = b.$toJS();
if (a > b) return 1;
if (a < b) return -1;
return 0;


}

/** @namespace strings */
function strings__Builder(val) { return val;  }
/**
 * @function
 * @param {int} initial_size
 * @returns {strings__Builder}
*/
function strings__new_builder(initial_size) {
	try {
		return new array(new array_buffer({arr: [], len: new int(0), cap: new int(0)}));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [deprecated] */
/**
 * @function
 * @deprecated
 * @param {byte} data
 * @returns {void}
*/
function strings__Builder_write_b(b, data) {
b = new $ref(b)
	try {
		array_push(b.valueOf(),data,false);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {byte} data
 * @returns {void}
*/
function strings__Builder_write_byte(b, data) {
b = new $ref(b)
	try {
		array_push(b.valueOf(),data,false);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {Array_byte} data
 * @returns {int}
*/
function strings__Builder_write(b, data) {
b = new $ref(b)
	try {
		if ((new bool(data.len.valueOf() == new int(0).valueOf())).valueOf()) {
			const _tmp1 = new Option({});
			_tmp1.state = new byte(0);_tmp1.data = new int(0)
			return _tmp1;}
		array_push(b.valueOf(),data.arr.arr,true);
		const _tmp2 = new Option({});
		_tmp2.state = new byte(0);_tmp2.data = data.len
		return _tmp2;} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} n
 * @returns {byte}
*/
function strings__Builder_byte_at(b, n) {
b = new $ref(b)
	try {
		{
			return b.valueOf().arr.get(new int(n.valueOf()));
		}
		
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} s
 * @returns {void}
*/
function strings__Builder_write_string(b, s) {
b = new $ref(b)
	try {
		if ((new bool(s.len.valueOf() == new int(0).valueOf())).valueOf()) {
			return;
		}
		for (const c of s.str.split('').map(c => new byte(c))) {
			try { 
				array_push(b.valueOf(),c,false);
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} s
 * @returns {void}
*/
function strings__Builder_writeln(b, s) {
b = new $ref(b)
	try {
		if ((new bool(s.len.valueOf() > new int(0).valueOf())).valueOf()) {
			strings__Builder_write_string(b.valueOf(),s);
		}
		array_push(b.valueOf(),new int(10),false);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function strings__Builder_str(b) {
b = new $ref(b)
	try {
		/** @type {string} */
		const s = new string(new string(""));
		for (const c of b.val.arr.arr)
		s.str += String.fromCharCode(+c)
		array_trim(b.valueOf(),new int(0));
		return s;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} n
 * @returns {string}
*/
function strings__Builder_cut_last(b, n) {
b = new $ref(b)
	try {
		/** @type {int} */
		const cut_pos = new int(new int( b.val.len.valueOf() - n.valueOf()));
		/** @type {strings__Builder} */
		const x = array_slice(b.valueOf(),cut_pos, b.valueOf().len);
		/** @type {string} */
		const res = new string(array_bytestr(x,));
		array_trim(b.valueOf(),cut_pos);
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} pos
 * @returns {void}
*/
function strings__Builder_go_back_to(b, pos) {
b = new $ref(b)
	try {
		array_trim(b.valueOf(),pos);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} n
 * @returns {void}
*/
function strings__Builder_go_back(b, n) {
b = new $ref(b)
	try {
		array_trim(b.valueOf(),new int( b.val.len.valueOf() - n.valueOf()));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} pos
 * @returns {string}
*/
function strings__Builder_cut_to(b, pos) {
b = new $ref(b)
	try {
		if ((new bool(pos.valueOf() > b.val.len.valueOf())).valueOf()) {
			return new string("");
		}
		return strings__Builder_cut_last(b.valueOf(),new int( b.val.len.valueOf() - pos.valueOf()));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {Array_rune} runes
 * @returns {void}
*/
function strings__Builder_write_runes(b, runes) {
b = new $ref(b)
	try {
		for (const r of runes) {
			try { 
				/** @type {string} */
				const res = new string(rune_str(r));
				res.str = String.fromCharCode(r.val)
				array_push(b.valueOf(),string_bytes(res,).arr.arr,true);
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} n
 * @returns {string}
*/
function strings__Builder_after(b, n) {
b = new $ref(b)
	try {
		if ((new bool(n.valueOf() >= b.val.len.valueOf())).valueOf()) {
			return new string("");
		}
		/** @type {array} */
		const x = array_slice(b.valueOf(),n, b.val.len);
		return array_bytestr(x,);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} n
 * @returns {string}
*/
function strings__Builder_last_n(b, n) {
b = new $ref(b)
	try {
		if ((new bool(n.valueOf() >= b.val.len.valueOf())).valueOf()) {
			return new string("");
		}
		/** @type {array} */
		const x = array_slice(b.valueOf(),new int( b.val.len.valueOf() - n.valueOf()), b.val.len);
		return array_bytestr(x,);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace strings */
/**
 * @function
 * @param {string} a
 * @param {string} b
 * @returns {int}
*/
function strings__levenshtein_distance(a, b) {
	try {
		/** @type {Array_int} */
		let f = array_repeat(new array(new array_buffer({arr: [new int(new int(0))], len: new int(1), cap: new int(1)})),new int( b.len.valueOf() + new int(1).valueOf()));
		for (let j = new int(0); j < f.len; j = new int(j + 1)) {
			try { 
				/** @type {int} */
				f.arr.set(new int(j.valueOf()),new int(j));
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		for (const ca of a.str.split('').map(c => new byte(c))) {
			try { 
				/** @type {int} */
				let j = new int(new int(1));
				/** @type {int} */
				let fj1 = new int(f.arr.get(new int(new int(0).valueOf())));
				f.arr.get(new int(new int(0).valueOf())).val ++;
				for (const cb of b.str.split('').map(c => new byte(c))) {
					try { 
						/** @type {int} */
						let mn = new int(((new bool(new int( f.arr.get(new int(j.valueOf())).valueOf() + new int(1).valueOf()).valueOf() <= new int( f.arr.get(new int(new int( j.valueOf() - new int(1).valueOf()).valueOf())).valueOf() + new int(1).valueOf()).valueOf())).valueOf() ? new int( f.arr.get(new int(j.valueOf())).valueOf() + new int(1).valueOf()) : new int( f.arr.get(new int(new int( j.valueOf() - new int(1).valueOf()).valueOf())).valueOf() + new int(1).valueOf())));
						if ((new bool(cb.valueOf() != ca.valueOf())).valueOf()) {
							/** @type {int} */
							mn = new int(((new bool(mn.valueOf() <= new int( fj1.valueOf() + new int(1).valueOf()).valueOf())).valueOf() ? mn : new int( fj1.valueOf() + new int(1).valueOf())));
						} else {
							/** @type {int} */
							mn = new int(((new bool(mn.valueOf() <= fj1.valueOf())).valueOf() ? mn : fj1));
						}
						/** @type {int} */
						fj1 = new int(f.arr.get(new int(j.valueOf())));
						/** @type {int} */
						f.arr.set(new int(j.valueOf()),new int(mn));
						j.val ++;
					} catch (e) {
					 if (e instanceof BreakException) { break; }
					 else if (e instanceof ContinueException) { continue; }
					 else { throw e; } }
				}
				
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return f.arr.get(new int(new int( f.len.valueOf() - new int(1).valueOf()).valueOf()));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} a
 * @param {string} b
 * @returns {f32}
*/
function strings__levenshtein_distance_percentage(a, b) {
	try {
		/** @type {int} */
		const d = new int(strings__levenshtein_distance(a, b));
		/** @type {int} */
		const l = new int(((new bool(a.len.valueOf() >= b.len.valueOf())).valueOf() ? a.len : b.len));
		return new f32( (new f32( new f32(1.00).valueOf() - new f32( new f32(d).valueOf() / new f32(l).valueOf()).valueOf())).valueOf() * new f32(100.00).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} s1
 * @param {string} s2
 * @returns {f32}
*/
function strings__dice_coefficient(s1, s2) {
	try {
		if ((new bool( new bool(s1.len.valueOf() == new int(0).valueOf()).valueOf() || new bool(s2.len.valueOf() == new int(0).valueOf()).valueOf())).valueOf()) {
			return new f32(0.0);
		}
		if ((new bool(s1.valueOf() == s2.valueOf())).valueOf()) {
			return new f32(1.0);
		}
		if ((new bool( new bool(s1.len.valueOf() < new int(2).valueOf()).valueOf() || new bool(s2.len.valueOf() < new int(2).valueOf()).valueOf())).valueOf()) {
			return new f32(0.0);
		}
		/** @type {string} */
		const a = new string(((new bool(s1.len.valueOf() > s2.len.valueOf())).valueOf() ? s1 : s2));
		/** @type {string} */
		const b = new string(((new bool(a.valueOf() == s1.valueOf())).valueOf() ? s2 : s1));
		/** @type {Map_string_int} */
		let first_bigrams = new map(
			{});
		for (let i = new int(0); i < new int( a.len.valueOf() - new int(1).valueOf()); i = new int(i + 1)) {
			try { 
				/** @type {string} */
				const bigram = new string(string_slice(a,i, new int_literal( i.valueOf() + new int(2).valueOf())));
				/** @type {int} */
				const q = new int(((first_bigrams.has(bigram.$toJS())).valueOf() ? new int( first_bigrams.get(bigram.$toJS()).valueOf() + new int(1).valueOf()) : new int(1)));
				/** @type {int} */
				first_bigrams.length++;
				first_bigrams.map[bigram.$toJS()] = new int(q);
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		/** @type {int} */
		let intersection_size = new int(new int(0));
		for (let i = new int(0); i < new int( b.len.valueOf() - new int(1).valueOf()); i = new int(i + 1)) {
			try { 
				/** @type {string} */
				const bigram = new string(string_slice(b,i, new int_literal( i.valueOf() + new int(2).valueOf())));
				/** @type {int} */
				const count = new int(((first_bigrams.has(bigram.$toJS())).valueOf() ? first_bigrams.get(bigram.$toJS()) : new int(0)));
				if ((new bool(count.valueOf() > new int(0).valueOf())).valueOf()) {
					/** @type {int} */
					first_bigrams.length++;
					first_bigrams.map[bigram.$toJS()] = new int(new int( count.valueOf() - new int(1).valueOf()));
					intersection_size.val ++;
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return new f32( (new f32( new f32(2.0).valueOf() * new f32(intersection_size).valueOf())).valueOf() / (new f32( new f32( new f32(a.len).valueOf() + new f32(b.len).valueOf()).valueOf() - new int(2).valueOf())).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace strings */
/**
 * @function
 * @param {byte} c
 * @param {int} n
 * @returns {string}
*/
function strings__repeat(c, n) {
	try {
		if ((new bool(n.valueOf() <= new int(0).valueOf())).valueOf()) {
			return new string("");
		}
		/** @type {Array_byte} */
		const arr = array_repeat(new array(new array_buffer({arr: [new byte(c)], len: new int(1), cap: new int(1)})),n);
		return array_bytestr(arr,);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} s
 * @param {int} n
 * @returns {string}
*/
function strings__repeat_string(s, n) {
	try {
		/** @type {string} */
		const res = new string(new string(""));
		res.str = s.str.repeat(n.valueOf())
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace strings */
/**
 * @function
 * @param {string} input
 * @param {byte} start
 * @param {byte} end
 * @returns {string}
*/
function strings__find_between_pair_byte(input, start, end) {
	try {
		/** @type {int} */
		let marks = new int(new int(0));
		/** @type {int} */
		let start_index = new int(new int(-1));
		for (const [i, b] of Array.from(input.str.split('').entries(), ([i, b]) => [i, new byte(b)])) {
			try { 
				if ((new bool(b.valueOf() == start.valueOf())).valueOf()) {
					if ((new bool(start_index.valueOf() == new int(-1).valueOf())).valueOf()) {
						/** @type {int} */
						start_index = new int(new int( i.valueOf() + new int(1).valueOf()));
					}
					marks.val ++;
					continue;
				}
				if ((new bool(start_index.valueOf() > new int(0).valueOf())).valueOf()) {
					if ((new bool(b.valueOf() == end.valueOf())).valueOf()) {
						marks.val --;
						if ((new bool(marks.valueOf() == new int(0).valueOf())).valueOf()) {
							return string_slice(input,start_index, i);
						}
					}
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return new string("");
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} input
 * @param {rune} start
 * @param {rune} end
 * @returns {string}
*/
function strings__find_between_pair_rune(input, start, end) {
	try {
		/** @type {int} */
		let marks = new int(new int(0));
		/** @type {int} */
		let start_index = new int(new int(-1));
		/** @type {Array_rune} */
		const runes = string_runes(input,);
		for (const [i, r] of runes.entries()) {
			try { 
				if ((new bool(r.valueOf() == start.valueOf())).valueOf()) {
					if ((new bool(start_index.valueOf() == new int(-1).valueOf())).valueOf()) {
						/** @type {int} */
						start_index = new int(new int( i.valueOf() + new int(1).valueOf()));
					}
					marks.val ++;
					continue;
				}
				if ((new bool(start_index.valueOf() > new int(0).valueOf())).valueOf()) {
					if ((new bool(r.valueOf() == end.valueOf())).valueOf()) {
						marks.val --;
						if ((new bool(marks.valueOf() == new int(0).valueOf())).valueOf()) {
							return Array_rune_string(array_slice(runes,start_index, i),);
						}
					}
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return new string("");
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} input
 * @param {string} start
 * @param {string} end
 * @returns {string}
*/
function strings__find_between_pair_string(input, start, end) {
	try {
		/** @type {int} */
		let start_index = new int(new int(-1));
		/** @type {int} */
		let marks = new int(new int(0));
		/** @type {Array_rune} */
		const start_runes = string_runes(start,);
		/** @type {Array_rune} */
		const end_runes = string_runes(end,);
		/** @type {Array_rune} */
		const runes = string_runes(input,);
		/** @type {int} */
		let i = new int(new int(0));
		for (; +new bool(i.valueOf() < runes.len.valueOf()); i.val ++) {
			try { 
				let start_slice = array_slice(runes,i, new int( i.valueOf() + start_runes.len.valueOf())); if ((new bool(Array_rune_arr_eq(start_slice, start_runes))).valueOf()) {
					i = new int(new int( new int( i.valueOf() + start_runes.len.valueOf()).valueOf() - new int(1).valueOf())); if ((new bool(start_index.valueOf() < new int(0).valueOf())).valueOf()) {
						start_index = new int(new int( i.valueOf() + new int(1).valueOf())); }
					marks.val ++;
					continue;
				}
				if ((new bool(start_index.valueOf() > new int(0).valueOf())).valueOf()) {
					let end_slice = array_slice(runes,i, new int( i.valueOf() + end_runes.len.valueOf())); if ((new bool(Array_rune_arr_eq(end_slice, end_runes))).valueOf()) {
						marks.val --;
						if ((new bool(marks.valueOf() == new int(0).valueOf())).valueOf()) {
							return Array_rune_string(array_slice(runes,start_index, i),);
						}
						i = new int(new int( new int( i.valueOf() + end_runes.len.valueOf()).valueOf() - new int(1).valueOf())); continue;
					}
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return new string("");
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace builtin */
	function i8(val) { if (val === undefined) { val = new Number(0); }this.val = Math.floor(Number(val) & 0xffffffff)  }
	i8.prototype = {
		val: new Number(0),
		valueOf() { return Number(this.val)   },
		toString() { return this.valueOf().toString() },
		$toJS() { return +this }, 
	};

	function i8__eq(self,other) { return new bool(self.valueOf() === other.valueOf()); } 
	function i16(val) { if (val === undefined) { val = new Number(0); }this.val = Math.floor(Number(val) & 0xffffffff)  }
	i16.prototype = {
		val: new Number(0),
		valueOf() { return Number(this.val)   },
		toString() { return this.valueOf().toString() },
		$toJS() { return +this }, 
	};

	function i16__eq(self,other) { return new bool(self.valueOf() === other.valueOf()); } 
	function int(val) { if (val === undefined) { val = new Number(0); }this.val = Math.floor(Number(val) & 0xffffffff)  }
	int.prototype = {
		val: new Number(0),
		valueOf() { return Number(this.val)   },
		toString() { return this.valueOf().toString() },
		$toJS() { return +this }, 
	};

	function int__eq(self,other) { return new bool(self.valueOf() === other.valueOf()); } 
	function i64(val) { if (val === undefined) { val = BigInt(0); }this.val = BigInt.asIntN(64,BigInt(val)) }
	i64.prototype = {
		val: BigInt(0),
		valueOf() { return this.val   },
		toString() { return this.val.toString() },
		$toJS() { return this.val }, 
	};

	function i64__eq(self,other) { return new bool(self.valueOf() === other.valueOf()); } 
	function byte(val) { if (val === undefined) { val = new Number(0); }if (typeof(val) == "string") { this.val = val.charCodeAt() } else if (val instanceof string) { this.val = val.str.charCodeAt(); } else { this.val =  Math.round(Number(val)) } }
	byte.prototype = {
		val: new Number(0),
		valueOf() { return this.val | 0   },
		toString() { return new string(this.val + "") },
		$toJS() { return +this }, 
	};

	function byte__eq(self,other) { return new bool(self.valueOf() === other.valueOf()); } 
	function u16(val) { if (val === undefined) { val = new Number(0); }this.val = Math.floor(Number(val) & 0xffffffff)  }
	u16.prototype = {
		val: new Number(0),
		valueOf() { return Number(this.val)   },
		toString() { return this.valueOf().toString() },
		$toJS() { return +this }, 
	};

	function u16__eq(self,other) { return new bool(self.valueOf() === other.valueOf()); } 
	function u32(val) { if (val === undefined) { val = new Number(0); }this.val = Math.floor(Number(val) & 0xffffffff)  }
	u32.prototype = {
		val: new Number(0),
		valueOf() { return Number(this.val)   },
		toString() { return this.valueOf().toString() },
		$toJS() { return +this }, 
	};

	function u32__eq(self,other) { return new bool(self.valueOf() === other.valueOf()); } 
	function u64(val) { if (val === undefined) { val = BigInt(0); }this.val = BigInt.asUintN(64,BigInt(val)) }
	u64.prototype = {
		val: BigInt(0),
		valueOf() { return this.val   },
		toString() { return this.val.toString() },
		$toJS() { return this.val }, 
	};

	function u64__eq(self,other) { return new bool(self.valueOf() === other.valueOf()); } 
	function f32(val) { if (val === undefined) { val = new Number(0); }this.val = Number(val) }
	f32.prototype = {
		val: new Number(0),
		valueOf() { return this.val   },
		toString() { return this.val.toString() },
		$toJS() { return +this }, 
	};

	function f32__eq(self,other) { return self.val === other.val; } 
	function f64(val) { if (val === undefined) { val = new Number(0); }this.val = Number(val) }
	f64.prototype = {
		val: new Number(0),
		valueOf() { return this.val   },
		toString() { return this.val.toString() },
		$toJS() { return +this }, 
	};

	function f64__eq(self,other) { return self.val === other.val; } 
	function int_literal(val) { if (val === undefined) { val = new Number(0); }this.val = Math.floor(Number(val) & 0xffffffff)  }
	int_literal.prototype = {
		val: new Number(0),
		valueOf() { return Number(this.val)   },
		toString() { return this.valueOf().toString() },
		$toJS() { return +this }, 
	};

	function int_literal__eq(self,other) { return new bool(self.valueOf() === other.valueOf()); } 
	function float_literal(val) { if (val === undefined) { val = new Number(0); }this.val = Number(val) }
	float_literal.prototype = {
		val: new Number(0),
		valueOf() { return this.val   },
		toString() { return this.val.toString() },
		$toJS() { return +this }, 
	};

	function float_literal__eq(self,other) { return self.val === other.val; } 
	function bool(val) { if (val === undefined) { val = new Boolean(false); }this.val = val instanceof bool ? val.val : +val !== 0 }
	bool.prototype = {
		val: new Boolean(false),
		valueOf() { return this.val   },
		toString() { return this.val.toString() },
		$toJS() { return +this != 0 }, 
	};

	function bool__eq(self,other) { return new bool(self.val === other.valueOf()); } 
	function string(str) { if (str === undefined) { str = new String(""); }this.str = str.toString(); this.len = this.str.length }
	string.prototype = {
		str: new String(""),
		valueOf() { return this.str   },
		toString() { return this.str },
		$toJS() { return this.str }, 
	};

	function string__eq(self,other) { return new bool(self.str === other.str); } 
	function map(map) { if (map === undefined) { map = new map({}); }this.map = map; this.length = 0; }
	map.prototype = {
		map: new map({}),
		valueOf() { return this   },
		toString() { return this.map.toString() },
		$toJS() { return this.map }, 
	};

	function map__eq(self,other) { return new bool(vEq(self, other)); } 
	function array(arr) { if (arr === undefined) { arr = new array_buffer({}); }this.arr = arr
if (arr.index_start.val != 0 || arr.has_slice.val) { v_makeSlice(this); }  }
	array.prototype = {
		arr: new array_buffer({}),
		valueOf() { return this   },
		toString() { return JSON.stringify(this.arr.map(it => it.valueOf())) },
		$toJS() { return this.arr }, 
	};

	function array__eq(self,other) { return new bool(vEq(self, other)); } 
	function rune(val) { if (val === undefined) { val = new Number(0); }val = val.valueOf(); if (typeof val == "string") {this.val = val.charCodeAt();}  else if (val instanceof string) { this.val = val.str.charCodeAt(); } else { this.val =  val | 0 } }
	rune.prototype = {
		val: new Number(0),
		valueOf() { return this.val | 0   },
		toString() { return new string(this.val + "") },
		$toJS() { return +this }, 
	};

	function rune__eq(self,other) { return new bool(self.valueOf() === other.valueOf()); } 
	function any(any) { if (any === undefined) { any = null; }this.val = any }
	any.prototype = {
		any: null,
		valueOf() { return this.val   },
		toString() { return "&" + this.val },
		$toJS() { return this.val.$toJS() }, 
	};

	function any__eq(self,other) { return new bool(self == other); } 
	function voidptr(val) { if (val === undefined) { val = null; }this.val = val; }
	voidptr.prototype = {
		val: null,
		valueOf() { return this   },
		toString() { return "voidptr(" + this.val + ")" },
		$toJS() { return this.val }, 
	};

	function voidptr__eq(self,other) { return this.val === other.val; } 
Object.defineProperty(array.prototype,"len", { get: function() {return new int(this.arr.arr.length);}, set: function(l) { this.arr.arr.length = l.valueOf(); } }); 
Object.defineProperty(map.prototype,"len", { get: function() {return new int(this.length);}, set: function(l) { } }); 
Object.defineProperty(array.prototype,"length", { get: function() {return new int(this.arr.arr.length);}, set: function(l) { this.arr.arr.length = l.valueOf(); } }); 
/**
 * @constructor
 * @param {{arr?: Array, index_start?: int, len?: int, cap?: int, has_slice?: bool}} init
*/
function array_buffer({ arr = undefined, index_start = new int(0), len = new int(0), cap = new int(0), has_slice = new bool(false) }) {
	this.arr = arr
	this.index_start = index_start
	this.len = len
	this.cap = cap
	this.has_slice = has_slice
};
array_buffer.prototype = {
	...Object.prototype,
	...Any.prototype,
	toString() {
		return `array_buffer { arr: ${this["arr"].toString()} , index_start: ${this["index_start"].toString()} , len: ${this["len"].toString()} , cap: ${this["cap"].toString()} , has_slice: ${this["has_slice"].toString()} }`
	},
	/** @type {Array} */
	arr: undefined,
	/** @type {int} */
	index_start: new int(0),
	/** @type {int} */
	len: new int(0),
	/** @type {int} */
	cap: new int(0),
	/** @type {bool} */
	has_slice: new bool(false),
	$toJS() { return this; }
	};

/**
 * @function
 * @returns {void}
*/
function array_buffer_make_copy(a) {
a = new $ref(a)
	try {
		if ((new bool( new bool(a.val.index_start.valueOf() != new int(0).valueOf()).valueOf() || a.val.has_slice.valueOf())).valueOf()) {
			/** @type {Array} */
			let new_arr = makeEmtpyJSArray();
			for (let i = new int(0); i < a.val.len; i = new int(i + 1)) {
				try { 
					new_arr.push(a.val.get(i))
					/** @type {int} */
					let x = new int(i);
					/** @type {int} */
					x = new int(x);
				} catch (e) {
				 if (e instanceof BreakException) { break; }
				 else if (e instanceof ContinueException) { continue; }
				 else { throw e; } }
			}
			
			/** @type {Array} */
			new_arr = new_arr;
			a.val.arr = new_arr
			a.val.index_start = new int(0)
			a.val.has_slice = new bool(false)
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

array_buffer.prototype.make_copy = function() { return array_buffer_make_copy(this) }
/**
 * @function
 * @param {int} ix
 * @returns {voidptr}
*/
function array_buffer_get(a, ix) {
	try {
		/** @type {voidptr} */
		let res = new voidptr(new int(0));
		res = a.arr[a.index_start.val + ix.val];
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} ix
 * @param {voidptr} val
 * @returns {void}
*/
function array_buffer_set(a, ix, val) {
a = new $ref(a)
	try {
		a.val.arr[a.val.index_start.valueOf() + ix.valueOf()] = val;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

array_buffer.prototype.get = function(ix) { return array_buffer_get(this,ix);}
array_buffer.prototype.set = function(ix,val) { array_buffer_set(this,ix,val); }
/**
 * @function
 * @param {array} arr
 * @param {anon_fn_voidptr_voidptr__int} comparator
 * @returns {void}
*/
function v_sort(arr, comparator) {
arr = new $ref(arr)
	try {
		/** @type {bool} */
		let need_iter = new bool(new bool(true));
		while (+need_iter) {
			try { 
				/** @type {bool} */
				need_iter = new bool(new bool(false));
				for (let i = new int(new int(1)); +new bool(i.valueOf() < arr.val.len.valueOf()); i.val ++) {
					try { 
						if ((new bool(comparator(arr.valueOf().arr.get(new int(i.valueOf())), arr.valueOf().arr.get(new int(new int( i.valueOf() - new int(1).valueOf()).valueOf()))).valueOf() != new int(1).valueOf())).valueOf()) {
							let tmp = arr.valueOf().arr.get(new int(i.valueOf())); arr.valueOf().arr.set(new int(i.valueOf()),arr.valueOf().arr.get(new int(new int( i.valueOf() - new int(1).valueOf()).valueOf()))); arr.valueOf().arr.set(new int(new int( i.valueOf() - new int(1).valueOf()).valueOf()),tmp); need_iter = new bool(new bool(true)); }
					} catch (e) {
					 if (e instanceof BreakException) { break; }
					 else if (e instanceof ContinueException) { continue; }
					 else { throw e; } }
				}
				
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} index
 * @returns {void}
*/
function array_trim(a, index) {
a = new $ref(a)
	try {
		if ((new bool(index.valueOf() < a.val.len.valueOf())).valueOf()) {
			/** @type {int} */
			a.val.len = new int(index);
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

function flatIntoArray(target, source, sourceLength, targetIndex, depth) {
"use strict";

for (var sourceIndex = 0; sourceIndex < sourceLength; ++sourceIndex) {
if (sourceIndex in source) {
var element = source[sourceIndex];
if (depth > 0 && Array.isArray(element))
targetIndex = flatIntoArray(target, element, element.length, targetIndex, depth - 1);
else {
target[targetIndex] = element;
++targetIndex;
}
}
}
return targetIndex;
}
function flatArray(target,depth) {
var array = target
var length = array.length;
var depthNum = 1;

if (depth !== undefined)
depthNum = +depth

var result = []

flatIntoArray(result, array, length, 0, depthNum);
return result;
}
/* [unsafe] */
/**
 * @function
 * @param {int} count
 * @param {int} depth
 * @returns {array}
*/
function array_repeat_to_depth(a, count, depth) {
	try {
		if ((new bool(count.valueOf() < new int(0).valueOf())).valueOf()) {
			builtin__panic (new string(`array.repeat: count is negative: ${int_str(count)}`));
		}
		/** @type {array} */
		let arr = empty_array();
		if ((new bool(a.len.valueOf() > new int(0).valueOf())).valueOf()) {
			for (let _tmp3 = new int(0); _tmp3 < count; _tmp3 = new int(_tmp3 + 1)) {
				try { 
					for (let i = new int(0); i < a.len; i = new int(i + 1)) {
						try { 
							if ((new bool(depth.valueOf() > new int(0).valueOf())).valueOf()) {
							} else {
								array_push(arr,array_buffer_get(a.arr,i));
							}
						} catch (e) {
						 if (e instanceof BreakException) { break; }
						 else if (e instanceof ContinueException) { continue; }
						 else { throw e; } }
					}
					
				} catch (e) {
				 if (e instanceof BreakException) { break; }
				 else if (e instanceof ContinueException) { continue; }
				 else { throw e; } }
			}
			
		}
		return arr;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {voidptr}
*/
function array_last(a) {
	try {
		/** @type {voidptr} */
		let res = new voidptr(new int(0));
		res = a.arr.get(new int(a.len-1));
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} ix
 * @returns {voidptr}
*/
function array_get(a, ix) {
	try {
		/** @type {voidptr} */
		let result = new voidptr(new int(0));
		result = a.arr.get(ix)
		return result;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} count
 * @returns {array}
*/
function array_repeat(a, count) {
	try {
		{
			return array_repeat_to_depth(a,count, new int(0));
		}
		
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

function makeEmptyArray() { return new array(new array_buffer({ arr: [], len: new int(0), index_start: new int(0), cap: new int(0) })); }
function makeEmtpyJSArray() { return new Array(); }
/**
 * @function
 * @returns {array}
*/
function empty_array() {
	try {
		return makeEmptyArray();
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} i
 * @returns {void}
*/
function array_set_len(a, i) {
a = new $ref(a)
	try {
		a.arr.arr.length=i
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {voidptr} compare
 * @returns {void}
*/
function array_sort_with_compare(a, compare) {
a = new $ref(a)
	try {
		v_sort(a, compare);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {voidptr} compare
 * @returns {void}
*/
function array_sort_with_compare_old(a, compare) {
a = new $ref(a)
	try {
		a.val.arr.arr.sort(compare)
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function array_sort(a) {
a = new $ref(a)
	try {
		a.val.arr.arr.sort($sortComparator)
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} v
 * @returns {int}
*/
function array_index(a, v) {
	try {
		for (let i = new int(0); i < a.len; i = new int(i + 1)) {
			try { 
				if (a.arr.get(i).toString() == v.toString())
				{
					return i;
				}
				
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return new int(-1);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} start
 * @param {int} end
 * @returns {array}
*/
function array_slice(a, start, end) {
	try {
		/** @type {array} */
		let result = a;
		let slice = a.arr.arr.slice(start,end)
		result = new array(new array_buffer({arr: a.arr.arr, len: new int(slice.length),cap: new int(slice.length),index_start: new int(start),has_slice: new bool(true)}))
		a.arr.has_slice = true
		return result;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} i
 * @param {voidptr} val
 * @returns {void}
*/
function array_insert(a, i, val) {
a = new $ref(a)
	try {
		a.val.arr.make_copy()
		a.val.arr.arr.splice(i,0,val)
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} i
 * @param {voidptr} val
 * @param {int} size
 * @returns {void}
*/
function array_insert_many(a, i, val, size) {
a = new $ref(a)
	try {
		a.val.arr.arr.splice(i,0,...val.arr.slice(0,+size))
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {voidptr} val
 * @returns {void}
*/
function array_push(a, val) {
a = new $ref(a)
	try {
		a.val.arr.make_copy()
		if (arguments[2] && arguments[2].valueOf()) {a.val.arr.arr.push(...val)} else {
		a.val.arr.arr.push(val)
		}
		a.val.arr.len.val += 1
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {array} arr
 * @param {anon_fn_voidptr__bool} callback
 * @returns {array}
*/
function v_filter(arr, callback) {
	try {
		/** @type {array} */
		let filtered = empty_array();
		for (let i = new int(new int(0)); +new bool(i.valueOf() < arr.arr.len.valueOf()); i.val ++) {
			try { 
				if ((callback(array_buffer_get(arr.arr,i))).valueOf()) {
					array_push(filtered,array_buffer_get(arr.arr,i));
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return filtered;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {array} arr
 * @param {anon_fn_voidptr__voidptr} callback
 * @returns {array}
*/
function v_map(arr, callback) {
	try {
		/** @type {array} */
		let maped = empty_array();
		for (let i = new int(new int(0)); +new bool(i.valueOf() < arr.arr.len.valueOf()); i.val ++) {
			try { 
				array_push(maped,callback(array_buffer_get(arr.arr,i)));
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return maped;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @constructor
 * @param {{ix?: int, end?: int, arr?: Array}} init
*/
function array_iterator({ ix = new int(0), end = new int(0), arr = undefined }) {
	this.ix = ix
	this.end = end
	this.arr = arr
};
array_iterator.prototype = {
	...Object.prototype,
	...Any.prototype,
	toString() {
		return `array_iterator { ix: ${this["ix"].toString()} , end: ${this["end"].toString()} , arr: ${this["arr"].toString()} }`
	},
	/** @type {int} */
	ix: new int(0),
	/** @type {int} */
	end: new int(0),
	/** @type {Array} */
	arr: undefined,
	$toJS() { return this; }
	};

array_iterator.prototype.next = function () {
if (this.ix.val < this.end.val) {
this.ix.val++;
return {done: false, value: this.arr.arr.get(new int(this.ix.val-1))}
} else {
return {done: true, value: undefined}
}
}
array_iterator.prototype[Symbol.iterator] = function () { return this; }
array.prototype[Symbol.iterator] = function () { return new array_iterator({ix: new int(0),end: new int(this.arr.len),arr: this}); }
array.prototype.entries = function () { let result = []; for (let key = this.arr.index_start.val;key < this.arr.len.val;key++) { result.push([new int(key), this.arr.get(new int(key))]); } return result[Symbol.iterator](); }
array.prototype.map = function(callback) { return v_map(this,callback); }
array.prototype.filter = function(callback) { return v_filter(this,callback); }
Object.defineProperty(array.prototype,'cap',{ get: function () { return this.len; } })
array.prototype.any = function (value) {
let val ;if (typeof value == 'function') { val = function (x) { return value(x); } } else { val = function (x) { return vEq(x,value); } }
for (let i = 0;i < this.arr.arr.length;i++)
if (val(this.arr.get(i)))
return true;

return false;
}
array.prototype.all = function (value) {
let val ;if (typeof value == 'function') { val = function (x) { return value(x); } } else { val = function (x) { return vEq(x,value); } }
for (let i = 0;i < this.arr.arr.length;i++)
if (!val(this.arr.get(i)))
return false;

return true;
}


function v_makeSlice(array) { Object.defineProperty(array,'len', {get: function() { return this.arr.len; }, set: function(l) { this.arr.len = l; }}) }
/**
 * @function
 * @param {int} i
 * @returns {void}
*/
function array_delete(a, i) {
a = new $ref(a)
	try {
		array_delete_many(a.valueOf(),i, new int(1));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {array} dst
 * @param {array} src
 * @param {int} count
 * @returns {void}
*/
function arr_copy(dst, src, count) {
dst = new $ref(dst)
	try {
		for (let i = new int(new int(0)); +new bool(i.valueOf() < count.valueOf()); i.val ++) {
			try { 
				array_buffer_set(dst.val.arr,i, array_buffer_get(src.arr,i));
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} i
 * @param {int} size
 * @returns {void}
*/
function array_delete_many(a, i, size) {
a = new $ref(a)
	try {
		a.val.arr.make_copy()
		a.val.arr.arr.splice(i.valueOf(),size.valueOf())
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {voidptr} val
 * @returns {void}
*/
function array_prepend(a, val) {
a = new $ref(a)
	try {
		array_insert(a.valueOf(),new int(0), val);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [unsafe] */
/**
 * @function
 * @param {voidptr} val
 * @param {int} size
 * @returns {void}
*/
function array_prepend_many(a, val, size) {
a = new $ref(a)
	try {
		array_insert_many(a.valueOf(),new int(0), val, size);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {array}
*/
function array_reverse(a) {
	try {
		/** @type {array} */
		let res = empty_array();
		res.arr.arr = Array.from(a.arr).reverse()
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function array_reverse_in_place(a) {
a = new $ref(a)
	try {
		a.val.arr.arr.reverse()
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

array.prototype.$includes = function (elem) { return this.arr.arr.find(function(e) { return vEq(elem,e); }) !== undefined;}
/**
 * @function
 * @returns {void}
*/
function array_clear(a) {
a = new $ref(a)
	try {
		a.val.arr.make_copy()
		a.val.arr.arr.clear()
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {anon_fn_int_int__int} iter
 * @param {int} accum_start
 * @returns {int}
*/
function array_reduce(a, iter, accum_start) {
	try {
		/** @type {int} */
		let accum_ = new int(accum_start);
		for (let i = new int(0); i < a.len; i = new int(i + 1)) {
			try { 
				/** @type {int} */
				accum_ = new int(iter(accum_, array_get(a,i)));
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return accum_;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {voidptr}
*/
function array_pop(a) {
a = new $ref(a)
	try {
		/** @type {voidptr} */
		let res = new voidptr(new int(0));
		a.val.arr.make_copy()
		res = a.val.arr.arr.pop()
		a.val.arr.len.val -= 1
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {voidptr}
*/
function array_first(a) {
	try {
		/** @type {voidptr} */
		let res = new voidptr(new int(0));
		res = a.arr.get(new int(0))
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

array.prototype.toString = function () {
let res = "["
for (let i = 0; i < this.arr.arr.length;i++) {
res += this.arr.get(i).toString();
if (i != this.arr.arr.length-1)
res += ', '
}
res += ']'
return res;

}
/**
 * @function
 * @param {voidptr} key
 * @returns {bool}
*/
function array_contains(a, key) {
	try {
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function array_delete_last(a) {
a = new $ref(a)
	try {
		a.val.arr.arr.pop();
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [unsafe] */
/**
 * @function
 * @returns {void}
*/
function array_free(a) {
a = new $ref(a)
	try {
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function array_bytestr(a) {
	try {
		/** @type {string} */
		const res = new string(new string(""));
		for (let i = 0;i < a.arr.len.valueOf();i++) res.str += String.fromCharCode(a.arr.get(new int(i)))
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function Array_string_str(a) {
	try {
		/** @type {strings__Builder} */
		let sb = strings__new_builder(new int( a.len.valueOf() * new int(3).valueOf()));
		strings__Builder_write_string(sb,new string("["));
		for (let i = new int(0); i < a.len; i = new int(i + 1)) {
			try { 
				/** @type {string} */
				const val = new string(a.arr.get(new int(i.valueOf())));
				strings__Builder_write_string(sb,new string("'"));
				strings__Builder_write_string(sb,val);
				strings__Builder_write_string(sb,new string("'"));
				if ((new bool(i.valueOf() < new int( a.len.valueOf() - new int(1).valueOf()).valueOf())).valueOf()) {
					strings__Builder_write_string(sb,new string(", "));
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		strings__Builder_write_string(sb,new string("]"));
		/** @type {string} */
		const res = new string(strings__Builder_str(new $ref(sb)));
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {Array}
*/
function array_to_js_array(a) {
	try {
		/** @type {Array} */
		const tmp = Array.prototype.constructor();
		for (let i = new int(0); i < a.len; i = new int(i + 1)) {
			try { 
				tmp.push(array_buffer_get(a.arr,i));
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return tmp;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {Array}
*/
function array_to_number_array(a) {
	try {
		/** @type {Array} */
		const tmp = Array.prototype.constructor();
		for (let i = new int(0); i < a.len; i = new int(i + 1)) {
			try { 
				/** @type {voidptr} */
				const elem = array_buffer_get(a.arr,i);
				const _tmp4 = elem;
				tmp.push(Number(elem.valueOf()));
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return tmp;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {Array_byte} arr
 * @returns {Uint8Array}
*/
function uint8_array(arr) {
	try {
		let tmp = new Array();
		for (const elem of arr) {
			try { 
				const _tmp5 = elem;
				tmp.push(elem.val)
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		/** @type {Uint8Array} */
		let uint_arr = new Uint8Array();
		uint_arr = new Uint8Array(tmp)
		return uint_arr;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {Array_u16} arr
 * @returns {Uint16Array}
*/
function uint16_array(arr) {
	try {
		let tmp = new Array();
		for (const elem of arr) {
			try { 
				const _tmp6 = elem;
				tmp.push(elem.val)
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		/** @type {Uint16Array} */
		let uint_arr = new Uint16Array();
		uint_arr = new Uint16Array(tmp)
		return uint_arr;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {Array_u32} arr
 * @returns {Uint32Array}
*/
function uint32_array(arr) {
	try {
		let tmp = new Array();
		for (const elem of arr) {
			try { 
				const _tmp7 = elem;
				tmp.push(elem.val)
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		/** @type {Uint32Array} */
		let uint_arr = new Uint32Array();
		uint_arr = new Uint32Array(tmp)
		return uint_arr;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {Array_i8} arr
 * @returns {Int8Array}
*/
function int8_array(arr) {
	try {
		let tmp = new Array();
		for (const elem of arr) {
			try { 
				const _tmp8 = elem;
				tmp.push(elem.val)
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		/** @type {Int8Array} */
		let int_arr = new Int8Array();
		int_arr = new Int8Array(tmp)
		return int_arr;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {Array_i16} arr
 * @returns {Int16Array}
*/
function int16_array(arr) {
	try {
		let tmp = new Array();
		for (const elem of arr) {
			try { 
				const _tmp9 = elem;
				tmp.push(elem.val)
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		/** @type {Int16Array} */
		let int_arr = new Int16Array();
		int_arr = new Int16Array(tmp)
		return int_arr;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {Array_int} arr
 * @returns {Int32Array}
*/
function int32_array(arr) {
	try {
		let tmp = new Array();
		for (const elem of arr) {
			try { 
				const _tmp10 = elem;
				tmp.push(elem.val)
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		/** @type {Int32Array} */
		let int_arr = new Int32Array();
		int_arr = new Int32Array(tmp)
		return int_arr;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {Array_i64} arr
 * @returns {BigInt64Array}
*/
function int64_array(arr) {
	try {
		let tmp = new Array();
		for (const elem of arr) {
			try { 
				const _tmp11 = elem;
				tmp.push(elem.val)
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		/** @type {BigInt64Array} */
		let int_arr = new BigInt64Array();
		int_arr = new BigInt64Array(tmp)
		return int_arr;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {Array_u64} arr
 * @returns {BigUint64Array}
*/
function uint64_array(arr) {
	try {
		let tmp = new Array();
		for (const elem of arr) {
			try { 
				const _tmp12 = elem;
				tmp.push(elem.val)
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		/** @type {BigUint64Array} */
		let int_arr = new BigUint64Array();
		int_arr = new BigUint64Array(tmp)
		return int_arr;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {Array_f32} arr
 * @returns {Float32Array}
*/
function float32_array(arr) {
	try {
		let tmp = new Array();
		for (const elem of arr) {
			try { 
				const _tmp13 = elem;
				tmp.push(elem.val)
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		/** @type {Float32Array} */
		let float_arr = new Float32Array();
		float_arr = new Float32Array(tmp)
		return float_arr;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {Array_f64} arr
 * @returns {Float64Array}
*/
function float64_array(arr) {
	try {
		let tmp = new Array();
		for (const elem of arr) {
			try { 
				const _tmp14 = elem;
				tmp.push(elem.val)
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		/** @type {Float64Array} */
		let float_arr = new Float64Array();
		float_arr = new Float64Array(tmp)
		return float_arr;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace builtin */
/* [noreturn] */
/**
 * @function
 * @param {any} s
 * @returns {void}
*/
function js_throw(s) {
	try {
		throw s
		while (true) {
			try { 
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

let globalPrint;
if (false)
{
globalPrint = globalThis.print
}
/**
 * @function
 * @param {string} s
 * @returns {void}
*/
function builtin__println(s) {
	try {
		if (false)
		{
		globalPrint(s.str)
		}
		else
		{
		console.log(s.str)
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} s
 * @returns {void}
*/
function builtin__print(s) {
	try {
		if (false)
		{
		$process.stdout.write(s.str)
		}
		else
		{
		builtin__panic (new string("Cannot `print` in a browser, use `println` instead"));
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} s
 * @returns {void}
*/
function builtin__eprintln(s) {
	try {
		if (false)
		{
		globalPrint(s.str)
		}
		else
		{
		console.error(s.str)
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} s
 * @returns {void}
*/
function builtin__eprint(s) {
	try {
		if (false)
		{
		$process.stderr.write(s.str)
		}
		else
		{
		builtin__panic (new string("Cannot `eprint` in a browser, use `println` instead"));
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [noreturn] */
/**
 * @function
 * @param {int} c
 * @returns {void}
*/
function builtin__exit(c) {
	try {
		process.exit(c);
		js_throw(new string(`exit(${int_str(c)})`));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {voidptr} data
 * @param {Option} option
 * @returns {void}
*/
function opt_ok(data, option) {
	try {
		option.state = 0
		option.err = none__
		option.data = data
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} opt
 * @returns {string}
*/
function unwrap(opt) {
	try {
		/** @type {Option} */
		let o = new Option({});
		o = opt
		if ((new bool(o.state.valueOf() != new int(0).valueOf())).valueOf()) {
			js_throw(o.err);
		}
		/** @type {string} */
		let res = new string(new string(""));
		res = opt.data
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function js_stacktrace() {
	try {
		/** @type {string} */
		const stacktrace = new string(new string(""));
		let err = new TypeError();
		err.name = 'stacktrace: '
		stacktrace.str = err.stack
		return stacktrace;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function print_backtrace() {
	try {
		builtin__println (js_stacktrace());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {voidptr} val
 * @returns {bool}
*/
function builtin__isnil(val) {
	try {
		/** @type {bool} */
		const res = new bool(new bool(false));
		if (typeof val == 'function') { res.val = false; } else {
		val = val instanceof voidptr ? val.valueOf().val : val;
		res.val = val === null || val === undefined || val === false || val === 0 || val === BigInt(0) || (val instanceof int ? val.val == 0 : false)
		}
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function float_literal_str(f) {
	try {
		/** @type {string} */
		const res = new string(new string(""));
		res.str += f.valueOf()
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace builtin */
/**
 * @function
 * @returns {void}
*/
function any_toString(a) {
	try {
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [noreturn] */
/**
 * @function
 * @param {string} s
 * @returns {void}
*/
function builtin__panic(s) {
	try {
		builtin__eprintln (new string(`V panic: ${s}\n${js_stacktrace()}`));
		builtin__exit(new int(1));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @interface IError
 * @typedef IError
 * @property {() => string} msg
 * @property {() => int} code
 */

function IError (arg) { return new $ref(arg); }
/**
 * @function
 * @returns {string}
*/
function IError_str(err) {
	try {
		let _tmp15 = undefined;
		if (err.val instanceof None__) {
			_tmp15 = new string("none");
			
		}
		else if (err.val instanceof Error) {
			_tmp15 = Error_msg(err.valueOf(),);
			
		}
		else if (err.val instanceof MessageError) {
			_tmp15 = MessageError_msg(err.valueOf(),);
			
		}
		
		else {
			/** @type {bool} */
			const old_error_style = new bool(new bool(new voidptr(new $ref(err.msg)).valueOf() != new voidptr(new $ref(err.code)).valueOf()));
			_tmp15 = ((old_error_style).valueOf() ? new string(`${IError_type_name(err,)}: ${err.msg}`) : new string(`${IError_type_name(err,)}: ${err.msg()}`))
		}
		return _tmp15;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @constructor
 * @param {{}} init
*/
function Error({  }) {
};
Error.prototype = {
	...Object.prototype,
	...Any.prototype,
	toString() {
		return `Error {}`
	},
	$toJS() { return this; }
	};

/**
 * @function
 * @returns {string}
*/
function Error_msg(err) {
	try {
		return new string("");
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {int}
*/
function Error_code(err) {
	try {
		return new int(0);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @constructor
 * @param {{msg?: string, code?: int}} init
*/
function MessageError({ msg = new string(""), code = new int(0) }) {
	this.msg = msg
	this.code = code
};
MessageError.prototype = {
	...Object.prototype,
	...Any.prototype,
	toString() {
		return `MessageError { msg: "${this["msg"].toString()}", code: ${this["code"].toString()} }`
	},
	/** @type {string} */
	msg: new string(""),
	/** @type {int} */
	code: new int(0),
	$toJS() { return this; }
	};

/**
 * @function
 * @returns {string}
*/
function MessageError_msg(err) {
	try {
		return err.msg;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {int}
*/
function MessageError_code(err) {
	try {
		return err.code;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @constant {IError} */
let none__ = undefined;

/**
 * @constructor
 * @param {{}} init
*/
function None__({  }) {
};
None__.prototype = {
	...Error.prototype,
	...Object.prototype,
	...Any.prototype,
	toString() {
		return `None__ {}`
	},
	$toJS() { return this; }
	};

/**
 * @function
 * @returns {string}
*/
function None___str(_) {
	try {
		return new string("none");
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @constructor
 * @param {{state?: byte, err?: IError}} init
*/
function Option({ state = new byte(0), err = none__ }) {
	this.state = state
	this.err = err
};
Option.prototype = {
	...Object.prototype,
	...Any.prototype,
	toString() {
		return `Option { state: ${this["state"].toString()} , err: ${this["err"].toString()} }`
	},
	/** @type {byte} */
	state: new byte(0),
	/** @type {IError} */
	err: undefined,
	$toJS() { return this; }
	};

/**
 * @function
 * @returns {string}
*/
function Option_str(o) {
	try {
		if ((new bool(o.state.valueOf() == new int(0).valueOf())).valueOf()) {
			return new string("Option{ ok }");
		}
		if ((new bool(o.state.valueOf() == new int(1).valueOf())).valueOf()) {
			return new string("Option{ none }");
		}
		return new string(`Option{ error: "${IError_str(o.err)}" }`);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} x
 * @returns {void}
*/
function trace_error(x) {
	try {
		builtin__eprintln (new string(`> ${"trace_error"} | ${x}`));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {string} message
 * @returns {IError}
*/
function error(message) {
	try {
		return new $ref((function() {
			let _tmp16 = new MessageError({});
			_tmp16.msg = message;
			return _tmp16;
		})()
		);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {string} message
 * @param {int} code
 * @returns {IError}
*/
function error_with_code(message, code) {
	try {
		return new $ref((function() {
			let _tmp17 = new MessageError({});
			_tmp17.msg = message;
			_tmp17.code = code;
			return _tmp17;
		})()
		);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [unsafe] */
/**
 * @function
 * @param {voidptr} ptr
 * @returns {void}
*/
function free(ptr) {
	try {
		const _tmp18 = ptr;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace builtin */
/**
 * @function
 * @returns {bool}
*/
function byte_is_space(b) {
	try {
		/** @type {bool} */
		let result = new bool(new bool(false));
		result.val = /^\s*$/.test(String.fromCharCode(b))
		return result;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function byte_str(c) {
	try {
		/** @type {string} */
		const res = new string(new string(""));
		res.str = c.val.toString()
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function byte_ascii_str(c) {
	try {
		/** @type {string} */
		const res = new string(new string(""));
		res.str = String.fromCharCode(c.val)
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} count
 * @returns {string}
*/
function byte_repeat(c, count) {
	try {
		/** @type {string} */
		let res = new string(new string(""));
		for (let _tmp19 = new int(0); _tmp19 < count; _tmp19 = new int(_tmp19 + 1)) {
			try { 
				/** @type {string} */
				res.str = res + new string(byte_ascii_str(c,));
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @returns {bool}
*/
function byte_is_digit(c) {
	try {
		return new bool( new bool(c.valueOf() >= new byte('0').valueOf()).valueOf() && new bool(c.valueOf() <= new byte('9').valueOf()).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @returns {bool}
*/
function byte_is_hex_digit(c) {
	try {
		return new bool( new bool( (new bool( new bool(c.valueOf() >= new byte('0').valueOf()).valueOf() && new bool(c.valueOf() <= new byte('9').valueOf()).valueOf())).valueOf() || (new bool( new bool(c.valueOf() >= new byte('a').valueOf()).valueOf() && new bool(c.valueOf() <= new byte('f').valueOf()).valueOf())).valueOf()).valueOf() || (new bool( new bool(c.valueOf() >= new byte('A').valueOf()).valueOf() && new bool(c.valueOf() <= new byte('F').valueOf()).valueOf())).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @returns {bool}
*/
function byte_is_oct_digit(c) {
	try {
		return new bool( new bool(c.valueOf() >= new byte('0').valueOf()).valueOf() && new bool(c.valueOf() <= new byte('7').valueOf()).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @returns {bool}
*/
function byte_is_bin_digit(c) {
	try {
		return new bool( new bool(c.valueOf() == new byte('0').valueOf()).valueOf() || new bool(c.valueOf() == new byte('1').valueOf()).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @returns {bool}
*/
function byte_is_letter(c) {
	try {
		return new bool( (new bool( new bool(c.valueOf() >= new byte('a').valueOf()).valueOf() && new bool(c.valueOf() <= new byte('z').valueOf()).valueOf())).valueOf() || (new bool( new bool(c.valueOf() >= new byte('A').valueOf()).valueOf() && new bool(c.valueOf() <= new byte('Z').valueOf()).valueOf())).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @returns {bool}
*/
function byte_is_alnum(c) {
	try {
		return new bool( new bool( (new bool( new bool(c.valueOf() >= new byte('a').valueOf()).valueOf() && new bool(c.valueOf() <= new byte('z').valueOf()).valueOf())).valueOf() || (new bool( new bool(c.valueOf() >= new byte('A').valueOf()).valueOf() && new bool(c.valueOf() <= new byte('Z').valueOf()).valueOf())).valueOf()).valueOf() || (new bool( new bool(c.valueOf() >= new byte('0').valueOf()).valueOf() && new bool(c.valueOf() <= new byte('9').valueOf()).valueOf())).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @returns {bool}
*/
function byte_is_capital(c) {
	try {
		return new bool( new bool(c.valueOf() >= new byte('A').valueOf()).valueOf() && new bool(c.valueOf() <= new byte('Z').valueOf()).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function byte_str_escaped(b) {
	try {
		/** @type {string} */
		let str = new string(new string(""));
		
		if (vEq(b,new int(0))) {
			/** @type {string} */
			str = new string(new string((function() { let s = String(); 
			s += String.fromCharCode(96);
			s += String.fromCharCode(92);
			s += String.fromCharCode(48);
			s += String.fromCharCode(96);
			return s; })()
			));
		}
		else if (vEq(b,new int(7))) {
			/** @type {string} */
			str = new string(new string((function() { let s = String(); 
			s += String.fromCharCode(96);
			s += String.fromCharCode(92);
			s += String.fromCharCode(97);
			s += String.fromCharCode(96);
			return s; })()
			));
		}
		else if (vEq(b,new int(8))) {
			/** @type {string} */
			str = new string(new string((function() { let s = String(); 
			s += String.fromCharCode(96);
			s += String.fromCharCode(92);
			s += String.fromCharCode(98);
			s += String.fromCharCode(96);
			return s; })()
			));
		}
		else if (vEq(b,new int(9))) {
			/** @type {string} */
			str = new string(new string((function() { let s = String(); 
			s += String.fromCharCode(96);
			s += String.fromCharCode(92);
			s += String.fromCharCode(116);
			s += String.fromCharCode(96);
			return s; })()
			));
		}
		else if (vEq(b,new int(10))) {
			/** @type {string} */
			str = new string(new string((function() { let s = String(); 
			s += String.fromCharCode(96);
			s += String.fromCharCode(92);
			s += String.fromCharCode(110);
			s += String.fromCharCode(96);
			return s; })()
			));
		}
		else if (vEq(b,new int(11))) {
			/** @type {string} */
			str = new string(new string((function() { let s = String(); 
			s += String.fromCharCode(96);
			s += String.fromCharCode(92);
			s += String.fromCharCode(118);
			s += String.fromCharCode(96);
			return s; })()
			));
		}
		else if (vEq(b,new int(12))) {
			/** @type {string} */
			str = new string(new string((function() { let s = String(); 
			s += String.fromCharCode(96);
			s += String.fromCharCode(92);
			s += String.fromCharCode(102);
			s += String.fromCharCode(96);
			return s; })()
			));
		}
		else if (vEq(b,new int(13))) {
			/** @type {string} */
			str = new string(new string((function() { let s = String(); 
			s += String.fromCharCode(96);
			s += String.fromCharCode(92);
			s += String.fromCharCode(114);
			s += String.fromCharCode(96);
			return s; })()
			));
		}
		else if (vEq(b,new int(27))) {
			/** @type {string} */
			str = new string(new string((function() { let s = String(); 
			s += String.fromCharCode(96);
			s += String.fromCharCode(92);
			s += String.fromCharCode(101);
			s += String.fromCharCode(96);
			return s; })()
			));
		}
		else if ((b >= new int(32) && b <= new int(126))) {
			/** @type {string} */
			str = new string(byte_ascii_str(b,));
		}
		else {
			/** @type {string} */
			str = new string(new string( new string("0x").valueOf() + byte_hex(b,).valueOf()));
		};
		return str;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace builtin */
/**
 * @function
 * @returns {string}
*/
function f32_str(x) {
	try {
		/** @type {string} */
		const res = new string(new string(""));
		res.str = x.val + ''
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function f64_str(x) {
	try {
		/** @type {string} */
		const res = new string(new string(""));
		res.str = x.val + ''
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace builtin */
/**
 * @function
 * @returns {string}
*/
function i8_str(i) {
	try {
		/** @type {string} */
		let res = new string(new string(""));
		res.str = i.val.toString()
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function i16_str(i) {
	try {
		/** @type {string} */
		let res = new string(new string(""));
		res.str = i.val.toString()
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function u16_str(i) {
	try {
		/** @type {string} */
		let res = new string(new string(""));
		res.str = i.val.toString()
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function int_str(i) {
	try {
		/** @type {string} */
		let res = new string(new string(""));
		res = new string( i+'' )
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function i64_str(i) {
	try {
		/** @type {string} */
		let res = new string(new string(""));
		res = new string( i + '')
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function u32_str(i) {
	try {
		/** @type {string} */
		let res = new string(new string(""));
		res = new string( i + '')
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function u64_str(i) {
	try {
		/** @type {string} */
		let res = new string(new string(""));
		res = new string( i + '')
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function bool_str(i) {
	try {
		/** @type {string} */
		let res = new string(new string(""));
		res = new string( i + '')
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function any_str(i) {
	try {
		/** @type {string} */
		let res = new string(new string(""));
		res = new string( i.toString() )
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function int_literal_str(i) {
	try {
		/** @type {string} */
		const res = new string(new string(""));
		res.str = i.val.toString()
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function u64_hex(x) {
	try {
		/** @type {string} */
		const res = new string(new string(""));
		res.str = x.val.toString(16)
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function u64_hex_full(x) {
	try {
		/** @type {string} */
		const res = new string(new string(""));
		res.str = x.val.toString(16)
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function i64_hex(x) {
	try {
		/** @type {string} */
		const res = new string(new string(""));
		res.str = x.val.toString(16)
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function u32_hex(x) {
	try {
		/** @type {string} */
		const res = new string(new string(""));
		res.str = x.val.toString(16)
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function u16_hex(x) {
	try {
		/** @type {string} */
		const res = new string(new string(""));
		res.str = x.val.toString(16)
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function i8_hex(x) {
	try {
		/** @type {string} */
		const res = new string(new string(""));
		res.str = x.val.toString(16)
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function i16_hex(x) {
	try {
		/** @type {string} */
		const res = new string(new string(""));
		res.str = x.val.toString(16)
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function int_hex(x) {
	try {
		/** @type {string} */
		const res = new string(new string(""));
		res.str = x.val.toString(16)
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function int_literal_hex(x) {
	try {
		/** @type {string} */
		const res = new string(new string(""));
		res.str = x.val.toString(16)
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function byte_hex(x) {
	try {
		/** @type {string} */
		const res = new string(new string(""));
		res.str = x.val.toString(16)
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function Array_byte_hex(b) {
	try {
		/** @type {string} */
		let hex = new string(new string(""));
		for (const i of b) {
			try { 
				/** @type {byte} */
				let z = new byte(i);
				/** @type {byte} */
				z = new byte(z);
				let n0 = i.val >> 4
				hex.str += n0 < 10 ? String.fromCharCode(n0) : String.fromCharCode(n0 + 87)
				let n1 = i.val & 0xF
				hex.str += n1 < 10 ? String.fromCharCode(n1) : String.fromCharCode(n1 + 87)
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return hex;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function int_hex2(i) {
	try {
		return new string( new string("0x").valueOf() + int_hex(i,).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function i8_hex2(i) {
	try {
		return new string( new string("0x").valueOf() + i8_hex(i,).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function i16_hex2(i) {
	try {
		return new string( new string("0x").valueOf() + i16_hex(i,).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function i64_hex2(i) {
	try {
		return new string( new string("0x").valueOf() + i64_hex(i,).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function byte_hex2(i) {
	try {
		return new string( new string("0x").valueOf() + byte_hex(i,).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function u16_hex2(i) {
	try {
		return new string( new string("0x").valueOf() + u16_hex(i,).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function u32_hex2(i) {
	try {
		return new string( new string("0x").valueOf() + u32_hex(i,).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function u64_hex2(i) {
	try {
		return new string( new string("0x").valueOf() + u64_hex(i,).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace builtin */
function Any(val) { return val; }
/**
 * @function
 * @param {Any} x
 * @returns {bool}
*/
function js_is_null(x) {
	try {
		/** @type {bool} */
		const res = new bool(new bool(false));
		res.val = x === null
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {Any} x
 * @returns {bool}
*/
function js_is_undefined(x) {
	try {
		/** @type {bool} */
		const res = new bool(new bool(false));
		res.val = x === undefined
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {Any}
*/
function js_null() {
	try {
		/** @type {Any} */
		let obj = new Any();
		obj = null;
		return obj;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {Any}
*/
function js_undefined() {
	try {
		/** @type {Any} */
		let obj = new Any();
		obj = undefined;
		return obj;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {Array_JS__String} arr
 * @returns {int}
*/
function native_str_arr_len(arr) {
	try {
		/** @type {int} */
		const len = new int(new int(0));
		len = arr.length
		return len;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace builtin */
/** @namespace builtin */
/**
 * @function
 * @returns {node_process}
*/
function js_node_process() {
	try {
		return process
		return {};
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace builtin */
/**
 * @function
 * @param {Any} key
 * @param {Any} val
 * @returns {void}
*/
function map_internal_set(m, key, val) {
m = new $ref(m)
	try {
		if ('$toJS' in key) key = key.$toJS();
		if (!(key in m.val.map)) m.val.length++;
		m.val.map[key] = val
		const _tmp20 = key;
		const _tmp21 = val;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {Any} key
 * @returns {Any}
*/
function map_internal_get(m, key) {
m = new $ref(m)
	try {
		/** @type {Any} */
		let val = new voidptr(new int(0));
		if (typeof key != "string" && '$toJS' in key) key = key.$toJS();
		val =  m.val.map[key]
		const _tmp22 = key;
		return val;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

map.prototype.get = function (key) { return map_internal_get(this,key); }
map.prototype.set = function(key,val) { map_internal_set(this,key,val); }
map.prototype.has = function (key) { if (typeof key != "string" && '$toJS' in key) { key = key.$toJS() } return key in this.map; }
/* [unsafe] */
/**
 * @function
 * @param {Any} key
 * @returns {void}
*/
function map_delete(m, key) {
m = new $ref(m)
	try {
		let k = '$toJS' in key ? key.$toJS() : key;
		if (delete m.val.map[k]) { m.val.length--; };
		const _tmp23 = key;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function map_free(m) {
m = new $ref(m)
	try {
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

map.prototype.toString = function () {
function fmtKey(key) { return typeof key == 'string' ? '\'' + key + '\'' : key}
let res = '{'
for (const entry of this) {
res += fmtKey(entry[0]) + ': ' + entry[0];
}
res += '}'
return res;
}
map.prototype.getOrSet = function (key, init) { if (this.map.has(key)) { return this.map.get(key); } else { this.map.set(key,init); return init; } }
/** @namespace builtin */
/**
 * @constructor
 * @param {{promise?: Promise}} init
*/
function _v_Promise({ promise }) {
	this.promise = promise
};
_v_Promise.prototype = {
	toString() {
		return `_v_Promise { promise: ${this["promise"].toString()} }`
	},
	/** @type {Promise} */
	$toJS() { return this; }
	};

/**
 * @function
 * @param {anon_fn_js__any} on_fullfilled
 * @param {anon_fn_js__any} on_rejected
 * @returns {void}
*/
function Promise_T_JS__Any_then_T_Any(p, on_fullfilled, on_rejected) {
	try {
		p.promise.then(on_fullfilled, on_rejected);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {anon_fn_js__any} callback
 * @returns {Promise_T_JS__Any}
*/
function Promise_T_JS__Any_catch_T_Any(p, callback) {
	try {
		/** @type {Promise} */
		const promise = p.promise.v_catch(callback);
		return (function() {
			let _tmp24 = new _v_Promise({});
			_tmp24.promise = promise;
			return _tmp24;
		})()
		;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {Any} error
 * @returns {Promise_T_JS__Any}
*/
function promise_reject(error) {
	try {
		/** @type {Promise} */
		const promise = Promise.reject(error);
		return (function() {
			let _tmp25 = new _v_Promise({});
			_tmp25.promise = promise;
			return _tmp25;
		})()
		;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace builtin */
/**
 * @function
 * @returns {string}
*/
function Array_rune_string(ra) {
	try {
		/** @type {strings__Builder} */
		let sb = strings__new_builder(ra.len);
		strings__Builder_write_runes(sb,ra);
		/** @type {string} */
		const res = new string(strings__Builder_str(new $ref(sb)));
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} count
 * @returns {string}
*/
function rune_repeat(c, count) {
	try {
		if ((new bool(count.valueOf() < new int(0).valueOf())).valueOf()) {
			builtin__panic (new string(`rune.repeat: count is negative: ${int_str(count)}`));
		} else if ((new bool(count.valueOf() == new int(0).valueOf())).valueOf()) {
			return new string("");
		} else if ((new bool(count.valueOf() == new int(1).valueOf())).valueOf()) {
			return rune_str(c);
		}
		/** @type {string} */
		const res = new string(new string(""));
		res.str = String.fromCharCode(Number(c.val))
		return string_repeat(res,count);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function rune_str(c) {
	try {
		/** @type {string} */
		const res = new string(new string(""));
		res.str = String.fromCharCode(Number(c.val))
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace builtin */
/**
 * @function
 * @returns {Array_rune}
*/
function string_runes(s) {
	try {
		/** @type {Array_rune} */
		let runes = new array(new array_buffer({arr: [], len: new int(0), cap: new int(0)}));
		for (let i = new int(new int(0)); +new bool(i.valueOf() < s.len.valueOf()); i.val ++) {
			try { 
				let r = new rune(new byte('0')); r = new rune(s.str[i.val].charCodeAt())
				array_push(runes,r,false);
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return runes;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} a
 * @param {int} b
 * @returns {string}
*/
function string_slice(s, a, b) {
	try {
		return new string(s.str.slice(Number(a.$toJS()), Number(b.$toJS())));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} start
 * @param {int} end
 * @returns {string}
*/
function string_substr(s, start, end) {
	try {
		return string_slice(s,start, end);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} start
 * @param {int} end
 * @returns {string}
*/
function string_substr_ni(s, start, end) {
	try {
		return string_slice(s,start, end);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} dot
 * @returns {string}
*/
function string_after(s, dot) {
	try {
		return new string(s.str.slice(Number(new int( new int(s.str.lastIndexOf(dot.str)).valueOf() + new int(1).valueOf()).$toJS()), s.str.length));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {byte} dot
 * @returns {string}
*/
function string_after_char(s, dot) {
	try {
		return s;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} dot
 * @returns {string}
*/
function string_all_after(s, dot) {
	try {
		/** @type {int} */
		const pos = new int(((new bool(dot.len.valueOf() == new int(0).valueOf())).valueOf() ? new int(-1) : new int(s.str.indexOf(dot.str))));
		if ((new bool(pos.valueOf() == new int(-1).valueOf())).valueOf()) {
			return string_clone(s,);
		}
		return string_slice(s,new int( pos.valueOf() + dot.len.valueOf()), s.len);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} dot
 * @returns {string}
*/
function string_all_after_last(s, dot) {
	try {
		/** @type {int} */
		const pos = new int(((new bool(dot.len.valueOf() == new int(0).valueOf())).valueOf() ? new int(-1) : new int(s.str.lastIndexOf(dot.str))));
		if ((new bool(pos.valueOf() == new int(-1).valueOf())).valueOf()) {
			return string_clone(s,);
		}
		return string_slice(s,new int( pos.valueOf() + dot.len.valueOf()), s.len);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} dot
 * @returns {string}
*/
function string_all_before(s, dot) {
	try {
		/** @type {int} */
		const pos = new int(((new bool(dot.len.valueOf() == new int(0).valueOf())).valueOf() ? new int(-1) : new int(s.str.indexOf(dot.str))));
		if ((new bool(pos.valueOf() == new int(-1).valueOf())).valueOf()) {
			return string_clone(s,);
		}
		return string_slice(s,new int(0), pos);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} dot
 * @returns {string}
*/
function string_all_before_last(s, dot) {
	try {
		/** @type {int} */
		const pos = new int(((new bool(dot.len.valueOf() == new int(0).valueOf())).valueOf() ? new int(-1) : new int(s.str.lastIndexOf(dot.str))));
		if ((new bool(pos.valueOf() == new int(-1).valueOf())).valueOf()) {
			return string_clone(s,);
		}
		return string_slice(s,new int(0), pos);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {bool}
*/
function string_bool(s) {
	try {
		return new bool(s.valueOf() == new string("true").valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} dot
 * @returns {Array_string}
*/
function string_split(s, dot) {
	try {
		/** @type {Array} */
		const tmparr = s.str.split(dot.str).map((function () { 
		return function (it) {
			/** @type {string} */
			const res = new string(new string(""));
			res.str = it
			return res;
		}})()
		);
		const _tmp26 = tmparr;
		/** @type {Array_string} */
		let arr = new array(new array_buffer({arr: [], len: new int(0), cap: new int(0)}));
		arr = new array(new array_buffer({arr: tmparr,index_start: new int(0),len: new int(tmparr.length)}))
		return arr;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {Array_byte}
*/
function string_bytes(s) {
	try {
		/** @type {string} */
		const sep = new string(new string(""));
		/** @type {Array} */
		const tmparr = s.str.split(sep.str).map((function () { 
		return function (it) {
			return new Any(new byte(it.charCodeAt(Number(new int(0).$toJS()))));
		}})()
		);
		const _tmp27 = tmparr;
		/** @type {Array_byte} */
		let arr = new array(new array_buffer({arr: [], len: new int(0), cap: new int(0)}));
		arr = new array(new array_buffer({arr: tmparr,index_start: new int(0),len: new int(tmparr.length)}))
		return arr;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function string_capitalize(s) {
	try {
		/** @type {string} */
		const part = new string(new string(s.str.slice(Number(new int(1).$toJS()), s.str.length)));
		return new string(s.str.charAt(Number(new int(0).$toJS())).toUpperCase().concat(part.str));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function string_clone(s) {
	try {
		return new string(s.str);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} substr
 * @returns {bool}
*/
function string_contains(s, substr) {
	try {
		return new bool(s.str.includes(substr.str));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} chars
 * @returns {bool}
*/
function string_contains_any(s, chars) {
	try {
		/** @type {string} */
		const sep = new string(new string(""));
		/** @type {Array} */
		const res = chars.str.split(sep.str);
		for (let i = new int(0); i < new int(res.length); i = new int(i + 1)) {
			try { 
				if ((new bool(s.str.includes(res.at(Number(i.$toJS()))))).valueOf()) {
					return new bool(true);
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return new bool(false);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {Array_string} chars
 * @returns {bool}
*/
function string_contains_any_substr(s, chars) {
	try {
		if ((new bool(chars.len.valueOf() == new int(0).valueOf())).valueOf()) {
			return new bool(true);
		}
		for (const x of chars) {
			try { 
				if ((new bool(s.str.includes(x.str))).valueOf()) {
					return new bool(true);
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return new bool(false);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} substr
 * @returns {int}
*/
function string_count(s, substr) {
	try {
		/** @type {Array} */
		const arr = s.str.split(substr.str);
		/** @type {int} */
		const len = new int(new int(arr.length));
		if ((new bool(len.valueOf() == new int(0).valueOf())).valueOf()) {
			return new int(0);
		} else {
			return new int( len.valueOf() - new int(1).valueOf());
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} p
 * @returns {bool}
*/
function string_ends_with(s, p) {
	try {
		/** @type {bool} */
		let res = new bool(new bool(false));
		res.val = s.str.endsWith(p.str)
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} p
 * @returns {bool}
*/
function string_starts_with(s, p) {
	try {
		return new bool(s.str.startsWith(p.str));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {Array_string}
*/
function string_fields(s) {
	try {
		/** @type {Array_string} */
		let res = new array(new array_buffer({arr: [], len: new int(0), cap: new int(0)}));
		/** @type {int} */
		let word_start = new int(new int(0));
		/** @type {int} */
		let word_len = new int(new int(0));
		/** @type {bool} */
		let is_in_word = new bool(new bool(false));
		/** @type {bool} */
		let is_space = new bool(new bool(false));
		for (const [i, c] of Array.from(s.str.split('').entries(), ([i, c]) => [i, new byte(c)])) {
			try { 
				/** @type {bool} */
				is_space = new bool((Array_int_contains(new array(new array_buffer({arr: [new int(new int(32)), new int(new int(9)), new int(new int(10))], len: new int(3), cap: new int(3)})),c)));
				if ((!is_space.val ).valueOf()) {
					word_len.val ++;
				}
				if ((new bool( !is_in_word.val .valueOf() && !is_space.val .valueOf())).valueOf()) {
					/** @type {int} */
					word_start = new int(i);
					/** @type {bool} */
					is_in_word = new bool(new bool(true));
					continue;
				}
				if ((new bool( is_space.valueOf() && is_in_word.valueOf())).valueOf()) {
					array_push(res,string_slice(s,word_start, new int( word_start.valueOf() + word_len.valueOf())),false);
					/** @type {bool} */
					is_in_word = new bool(new bool(false));
					/** @type {int} */
					word_len = new int(new int(0));
					/** @type {int} */
					word_start = new int(new int(0));
					continue;
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		if ((new bool( is_in_word.valueOf() && new bool(word_len.valueOf() > new int(0).valueOf()).valueOf())).valueOf()) {
			array_push(res,string_slice(s,word_start, s.len),false);
		}
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} start
 * @param {string} end
 * @returns {string}
*/
function string_find_between(s, start, end) {
	try {
		return new string(s.str.slice(Number(new int( new int(s.str.indexOf(start.str)).valueOf() + new int(1).valueOf()).$toJS()), s.str.indexOf(end.str)));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function string_free(s) {
s = new $ref(s)
	try {
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {int}
*/
function string_hash(s) {
	try {
		/** @type {u32} */
		let h = new u32(new int(0));
		if ((new bool( new bool(h.valueOf() == new int(0).valueOf()).valueOf() && new bool(s.len.valueOf() > new int(0).valueOf()).valueOf())).valueOf()) {
			for (const c of s.str.split('').map(c => new byte(c))) {
				try { 
					/** @type {u32} */
					h = new u32(new u32( new u32( h.valueOf() * new int(31).valueOf()).valueOf() + new u32(c).valueOf()));
				} catch (e) {
				 if (e instanceof BreakException) { break; }
				 else if (e instanceof ContinueException) { continue; }
				 else { throw e; } }
			}
			
		}
		return new int(h);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {int}
*/
function string_int(s) {
	try {
		return new int(parseInt(s.str));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {i64}
*/
function string_i64(s) {
	try {
		return new i64(parseInt(s.str));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {i8}
*/
function string_i8(s) {
	try {
		return new i8(parseInt(s.str));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {i16}
*/
function string_i16(s) {
	try {
		return new i16(parseInt(s.str));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {f32}
*/
function string_f32(s) {
	try {
		return new f32(parseFloat(s.str));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {f64}
*/
function string_f64(s) {
	try {
		return new f64(parseFloat(s.str));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {u16}
*/
function string_u16(s) {
	try {
		return new u16(parseInt(s.str));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {u32}
*/
function string_u32(s) {
	try {
		return new u32(parseInt(s.str));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {u64}
*/
function string_u64(s) {
	try {
		return new u64(parseInt(s.str));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {u64}
*/
function string_byte(s) {
	try {
		/** @type {byte} */
		const res = new byte(new int(0));
		res.val = byte(JS.parseInt(s.str))
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} cutset
 * @returns {string}
*/
function string_trim_right(s, cutset) {
	try {
		if ((new bool( new bool(s.len.valueOf() < new int(1).valueOf()).valueOf() || new bool(cutset.len.valueOf() < new int(1).valueOf()).valueOf())).valueOf()) {
			return string_clone(s,);
		}
		/** @type {int} */
		let pos = new int(new int( s.len.valueOf() - new int(1).valueOf()));
		while (+new bool(pos.valueOf() >= new int(0).valueOf())) {
			try { 
				/** @type {bool} */
				let found = new bool(new bool(false));
				for (const cs of cutset.str.split('').map(c => new byte(c))) {
					try { 
						if ((new bool(new byte(s.str.charCodeAt(pos)).valueOf() == cs.valueOf())).valueOf()) {
							/** @type {bool} */
							found = new bool(new bool(true));
						}
					} catch (e) {
					 if (e instanceof BreakException) { break; }
					 else if (e instanceof ContinueException) { continue; }
					 else { throw e; } }
				}
				
				if ((!found.val ).valueOf()) {
					break;
				}
				pos.val --;
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		if ((new bool(pos.valueOf() < new int(0).valueOf())).valueOf()) {
			return new string("");
		}
		return string_slice(s,new int(0), new int( pos.valueOf() + new int(1).valueOf()));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [direct_array_access] */
/**
 * @function
 * @param {string} cutset
 * @returns {string}
*/
function string_trim_left(s, cutset) {
	try {
		if ((new bool( new bool(s.len.valueOf() < new int(1).valueOf()).valueOf() || new bool(cutset.len.valueOf() < new int(1).valueOf()).valueOf())).valueOf()) {
			return string_clone(s,);
		}
		/** @type {int} */
		let pos = new int(new int(0));
		while (+new bool(pos.valueOf() < s.len.valueOf())) {
			try { 
				/** @type {bool} */
				let found = new bool(new bool(false));
				for (const cs of cutset.str.split('').map(c => new byte(c))) {
					try { 
						if ((new bool(new byte(s.str.charCodeAt(pos)).valueOf() == cs.valueOf())).valueOf()) {
							/** @type {bool} */
							found = new bool(new bool(true));
							break;
						}
					} catch (e) {
					 if (e instanceof BreakException) { break; }
					 else if (e instanceof ContinueException) { continue; }
					 else { throw e; } }
				}
				
				if ((!found.val ).valueOf()) {
					break;
				}
				pos.val ++;
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return string_slice(s,pos, s.len);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} str
 * @returns {string}
*/
function string_trim_string_left(s, str) {
	try {
		if ((string_starts_with(s,str)).valueOf()) {
			return string_slice(s,str.len, s.len);
		}
		return string_clone(s,);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} str
 * @returns {string}
*/
function string_trim_string_right(s, str) {
	try {
		if ((string_ends_with(s,str)).valueOf()) {
			return string_slice(s,new int(0), new int( s.len.valueOf() - str.len.valueOf()));
		}
		return string_clone(s,);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [deprecated] */
/* [deprecated_after] */
/**
 * @function
 * @deprecated
 * @param {string} str
 * @returns {string}
*/
function string_trim_prefix(s, str) {
	try {
		return string_trim_string_left(s,str);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [deprecated] */
/* [deprecated_after] */
/**
 * @function
 * @deprecated
 * @param {string} str
 * @returns {string}
*/
function string_trim_suffix(s, str) {
	try {
		return string_trim_string_right(s,str);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} a
 * @param {string} b
 * @returns {int}
*/
function compare_strings(a, b) {
a = new $ref(a)
b = new $ref(b)
	try {
		if ((new bool(a.valueOf().valueOf() < b.valueOf().valueOf())).valueOf()) {
			return new int(-1);
		}
		if ((new bool(a.valueOf().valueOf() > b.valueOf().valueOf())).valueOf()) {
			return new int(1);
		}
		return new int(0);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} a
 * @param {string} b
 * @returns {int}
*/
function compare_strings_reverse(a, b) {
a = new $ref(a)
b = new $ref(b)
	try {
		if ((new bool(a.valueOf().valueOf() < b.valueOf().valueOf())).valueOf()) {
			return new int(1);
		}
		if ((new bool(a.valueOf().valueOf() > b.valueOf().valueOf())).valueOf()) {
			return new int(-1);
		}
		return new int(0);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} a
 * @param {string} b
 * @returns {int}
*/
function compare_strings_by_len(a, b) {
a = new $ref(a)
b = new $ref(b)
	try {
		if ((new bool(a.val.len.valueOf() < b.val.len.valueOf())).valueOf()) {
			return new int(-1);
		}
		if ((new bool(a.val.len.valueOf() > b.val.len.valueOf())).valueOf()) {
			return new int(1);
		}
		return new int(0);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} a
 * @param {string} b
 * @returns {int}
*/
function compare_lower_strings(a, b) {
a = new $ref(a)
b = new $ref(b)
	try {
		/** @type {string} */
		const aa = new string(string_to_lower(a.valueOf(),));
		/** @type {string} */
		const bb = new string(string_to_lower(b.valueOf(),));
		return compare_strings(new $ref(aa), new $ref(bb));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} idx
 * @returns {byte}
*/
function string_at(s, idx) {
	try {
		/** @type {byte} */
		let result = new byte(new int(0));
		result = new byte(s.str.charCodeAt(result))
		return result;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function string_to_lower(s) {
	try {
		/** @type {string} */
		let result = new string(new string(""));
		let str = s.str.toLowerCase()
		result = new string(str)
		return result;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} old_sub
 * @param {string} new_sub
 * @returns {string}
*/
function string_replace(s, old_sub, new_sub) {
	try {
		/** @type {string} */
		let result = new string(new string(""));
		result = new string( s.str.replaceAll(old_sub.str, new_sub.str) )
		return result;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function string_to_upper(s) {
	try {
		/** @type {string} */
		let result = new string(new string(""));
		let str = s.str.toUpperCase()
		result = new string(str)
		return result;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function Array_string_sort(s) {
s = new $ref(s)
	try {
		array_sort_with_compare(s.valueOf(),compare_strings);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function Array_string_sort_ignore_case(s) {
s = new $ref(s)
	try {
		array_sort_with_compare(s.valueOf(),compare_lower_strings);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function Array_string_sort_by_len(s) {
s = new $ref(s)
	try {
		array_sort_with_compare(s.valueOf(),compare_strings_by_len);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function string_str(s) {
	try {
		return string_clone(s,);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} count
 * @returns {string}
*/
function string_repeat(s, count) {
	try {
		/** @type {string} */
		let result = new string(new string(""));
		result = new string(s.str.repeat(count))
		return result;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

function string_iterator(string) { this.stringIteratorFieldIndex = 0; this.stringIteratorIteratedString = string.str; }
string_iterator.prototype.next = function next() {
var done = true;
var value = undefined;
var position = this.stringIteratorFieldIndex;
if (position !== -1) {
var string = this.stringIteratorIteratedString;
var length = string.length >>> 0;
if (position >= length) {
this.stringIteratorFieldIndex = -1;
} else {
done = false;
var first = string.charCodeAt(position);
if (first < 0xD800 || first > 0xDBFF || position + 1 === length)
value = new byte(string[position]);
else {
value = new byte(string[position]+string[position+1])
}
this.stringIteratorFieldIndex = position + value.length;
}
}
return {
value, done
}
}
string.prototype[Symbol.iterator] = function () { return new string_iterator(this) }
/**
 * @function
 * @returns {string}
*/
function string_strip_margin(s) {
	try {
		return string_strip_margin_custom(s,new byte('|'));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [direct_array_access] */
/**
 * @function
 * @param {byte} del
 * @returns {string}
*/
function string_strip_margin_custom(s, del) {
	try {
		/** @type {byte} */
		let sep = new byte(del);
		if ((byte_is_space(sep,)).valueOf()) {
			builtin__eprintln (new string("Warning: `strip_margin` cannot use white-space as a delimiter"));
			builtin__eprintln (new string("    Defaulting to `|`"));
			/** @type {byte} */
			sep = new byte(new byte('|'));
		}
		/** @type {Array_byte} */
		let ret = new array(new array_buffer({arr: [], len: new int(0), cap: new int(0)}));
		ret = new array()
		/** @type {int} */
		let count = new int(new int(0));
		for (let i = new int(new int(0)); +new bool(i.valueOf() < s.len.valueOf()); i.val ++) {
			try { 
				if (((Array_int_contains(new array(new array_buffer({arr: [new int(new int(10)), new int(new int(13))], len: new int(2), cap: new int(2)})),new byte(s.str.charCodeAt(i))))).valueOf()) {
					{
						ret.arr.set(new int(count.valueOf()),new byte(new byte(s.str.charCodeAt(i)))); }
					
					count.val ++;
					if ((new bool( new bool( new bool(new byte(s.str.charCodeAt(i)).valueOf() == new int(13).valueOf()).valueOf() && new bool(i.valueOf() < new int( s.len.valueOf() - new int(1).valueOf()).valueOf()).valueOf()).valueOf() && new bool(new byte(s.str.charCodeAt(new int( i.valueOf() + new int(1).valueOf()))).valueOf() == new int(10).valueOf()).valueOf())).valueOf()) {
						{
							ret.arr.set(new int(count.valueOf()),new byte(new byte(s.str.charCodeAt(new int( i.valueOf() + new int(1).valueOf()))))); }
						
						count.val ++;
						i.val ++;
					}
					while (+new bool(new byte(s.str.charCodeAt(i)).valueOf() != sep.valueOf())) {
						try { 
							i.val ++;
							if ((new bool(i.valueOf() >= s.len.valueOf())).valueOf()) {
								break;
							}
						} catch (e) {
						 if (e instanceof BreakException) { break; }
						 else if (e instanceof ContinueException) { continue; }
						 else { throw e; } }
					}
					
				} else {
					{
						ret.arr.set(new int(count.valueOf()),new byte(new byte(s.str.charCodeAt(i)))); }
					
					count.val ++;
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		/** @type {string} */
		let result = new string(new string(""));
		for (let x of ret.arr) result.str += String.fromCharCode(x.val)
		return result;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [direct_array_access] */
/**
 * @function
 * @param {string} delim
 * @param {int} nth
 * @returns {Array_string}
*/
function string_split_nth(s, delim, nth) {
	try {
		/** @type {Array_string} */
		let res = new array(new array_buffer({arr: [], len: new int(0), cap: new int(0)}));
		/** @type {int} */
		let i = new int(new int(0));
		
		if (vEq(delim.len,new int(0))) {
			/** @type {int} */
			i = new int(new int(1));
			for (const ch of s.str.split('').map(c => new byte(c))) {
				try { 
					if ((new bool( new bool(nth.valueOf() > new int(0).valueOf()).valueOf() && new bool(i.valueOf() >= nth.valueOf()).valueOf())).valueOf()) {
						array_push(res,string_slice(s,i, s.len),false);
						break;
					}
					array_push(res,byte_str(ch),false);
					i.val ++;
				} catch (e) {
				 if (e instanceof BreakException) { break; }
				 else if (e instanceof ContinueException) { continue; }
				 else { throw e; } }
			}
			
			return res;
		}
		else if (vEq(delim.len,new int(1))) {
			/** @type {int} */
			let start = new int(new int(0));
			/** @type {byte} */
			const delim_byte = new byte(new byte(delim.str.charCodeAt(new int(0))));
			while (+new bool(i.valueOf() < s.len.valueOf())) {
				try { 
					if ((new bool(new byte(s.str.charCodeAt(i)).valueOf() == delim_byte.valueOf())).valueOf()) {
						/** @type {bool} */
						const was_last = new bool(new bool( new bool(nth.valueOf() > new int(0).valueOf()).valueOf() && new bool(res.len.valueOf() == new int( nth.valueOf() - new int(1).valueOf()).valueOf()).valueOf()));
						if ((was_last).valueOf()) {
							break;
						}
						/** @type {string} */
						const val = new string(string_slice(s,start, i));
						array_push(res,val,false);
						/** @type {int} */
						start = new int(new int( i.valueOf() + delim.len.valueOf()));
						/** @type {int} */
						i = new int(start);
					} else {
						i.val ++;
					}
				} catch (e) {
				 if (e instanceof BreakException) { break; }
				 else if (e instanceof ContinueException) { continue; }
				 else { throw e; } }
			}
			
			if ((new bool( new bool(nth.valueOf() < new int(1).valueOf()).valueOf() || new bool(res.len.valueOf() < nth.valueOf()).valueOf())).valueOf()) {
				array_push(res,string_slice(s,start, s.len),false);
			}
			return res;
		}
		else {
			/** @type {int} */
			let start = new int(new int(0));
			while (+new bool(i.valueOf() <= s.len.valueOf())) {
				try { 
					/** @type {bool} */
					const is_delim = new bool(new bool( new bool(new int( i.valueOf() + delim.len.valueOf()).valueOf() <= s.len.valueOf()).valueOf() && new bool(string_slice(s,i, new int( i.valueOf() + delim.len.valueOf())).valueOf() == delim.valueOf()).valueOf()));
					if ((is_delim).valueOf()) {
						/** @type {bool} */
						const was_last = new bool(new bool( new bool(nth.valueOf() > new int(0).valueOf()).valueOf() && new bool(res.len.valueOf() == new int( nth.valueOf() - new int(1).valueOf()).valueOf()).valueOf()));
						if ((was_last).valueOf()) {
							break;
						}
						/** @type {string} */
						const val = new string(string_slice(s,start, i));
						array_push(res,val,false);
						/** @type {int} */
						start = new int(new int( i.valueOf() + delim.len.valueOf()));
						/** @type {int} */
						i = new int(start);
					} else {
						i.val ++;
					}
				} catch (e) {
				 if (e instanceof BreakException) { break; }
				 else if (e instanceof ContinueException) { continue; }
				 else { throw e; } }
			}
			
			if ((new bool( new bool(nth.valueOf() < new int(1).valueOf()).valueOf() || new bool(res.len.valueOf() < nth.valueOf()).valueOf())).valueOf()) {
				array_push(res,string_slice(s,start, s.len),false);
			}
			return res;
		};
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @constructor
 * @param {{idx?: int, val_idx?: int}} init
*/
function RepIndex({ idx = new int(0), val_idx = new int(0) }) {
	this.idx = idx
	this.val_idx = val_idx
};
RepIndex.prototype = {
	...Object.prototype,
	...Any.prototype,
	toString() {
		return `RepIndex { idx: ${this["idx"].toString()} , val_idx: ${this["val_idx"].toString()} }`
	},
	/** @type {int} */
	idx: new int(0),
	/** @type {int} */
	val_idx: new int(0),
	$toJS() { return this; }
	};

/* [direct_array_access] */
/**
 * @function
 * @param {Array_string} vals
 * @returns {string}
*/
function string_replace_each(s, vals) {
	try {
		if ((new bool( new bool(s.len.valueOf() == new int(0).valueOf()).valueOf() || new bool(vals.len.valueOf() == new int(0).valueOf()).valueOf())).valueOf()) {
			return string_clone(s,);
		}
		if ((new bool(new int( vals.len.valueOf() % new int(2).valueOf()).valueOf() != new int(0).valueOf())).valueOf()) {
			builtin__eprintln (new string("string.replace_each(): odd number of strings"));
			return string_clone(s,);
		}
		/** @type {Array_RepIndex} */
		let idxs = new array(new array_buffer({arr: [], len: new int(0), cap: new int(0)}));
		/** @type {int} */
		let idx = new int(new int(0));
		/** @type {int} */
		let new_len = new int(s.len);
		/** @type {string} */
		const s_ = new string(string_clone(s,));
		function setCharAt(str,index,chr) {
		if(index > str.length-1) return str;
		return str.substring(0,index) + chr + str.substring(index+1);
		}
		for (let rep_i = new int(new int(0)); +new bool(rep_i.valueOf() < vals.len.valueOf()); rep_i = new int(new int( rep_i.valueOf() + new int(2).valueOf()))) {
			try { 
				let rep = new string(vals.arr.get(new int(rep_i.valueOf()))); let with_ = new string(vals.arr.get(new int(new int( rep_i.valueOf() + new int(1).valueOf()).valueOf()))); with_ = new string(with_); while (true) {
					try { 
						idx = new int(string_index_after(s_,rep, idx)); if ((new bool(idx.valueOf() == new int(-1).valueOf())).valueOf()) {
							break;
						}
						for (let i = new int(0); i < rep.len; i = new int(i + 1)) {
							try { 
								/** @type {int} */
								let j_ = new int(i);
								/** @type {int} */
								j_ = new int(j_);
								s_.str = setCharAt(s_.str,idx + i, String.fromCharCode(127))
							} catch (e) {
							 if (e instanceof BreakException) { break; }
							 else if (e instanceof ContinueException) { continue; }
							 else { throw e; } }
						}
						
						/** @type {RepIndex} */
						const rep_idx = (function() {
							let _tmp28 = new RepIndex({});
							_tmp28.idx = new int(0);
							_tmp28.val_idx = new int(0);
							return _tmp28;
						})()
						;
						rep_idx.idx = idx.val
						rep_idx.val_idx = new int(rep_i.val)
						array_push(idxs,rep_idx,false);
						/** @type {int} */
						idx.val = Math.floor(idx + new int(rep.len));
						/** @type {int} */
						new_len.val = Math.floor(new_len + new int(new int( with_.len.valueOf() - rep.len.valueOf())));
					} catch (e) {
					 if (e instanceof BreakException) { break; }
					 else if (e instanceof ContinueException) { continue; }
					 else { throw e; } }
				}
				
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		if ((new bool(idxs.len.valueOf() == new int(0).valueOf())).valueOf()) {
			return string_clone(s,);
		}
v_sort(idxs,compare_RepIndex_by_idx);
		/** @type {string} */
		let b = new string(new string(""));
		for (let i = 0; i < new_len.val;i++) b.str += String.fromCharCode(127)
		/** @type {int} */
		new_len = new int(new_len);
		/** @type {int} */
		let idx_pos = new int(new int(0));
		/** @type {RepIndex} */
		let cur_idx = idxs.arr.get(new int(idx_pos.valueOf()));
		/** @type {int} */
		let b_i = new int(new int(0));
		for (let i = new int(new int(0)); +new bool(i.valueOf() < s.len.valueOf()); i.val ++) {
			try { 
				if ((new bool(i.valueOf() == cur_idx.idx.valueOf())).valueOf()) {
					let rep = new string(vals.arr.get(new int(cur_idx.val_idx.valueOf()))); let with_ = new string(vals.arr.get(new int(new int( cur_idx.val_idx.valueOf() + new int(1).valueOf()).valueOf()))); for (let j = new int(0); j < with_.len; j = new int(j + 1)) {
						try { 
							/** @type {int} */
							let j_ = new int(j);
							/** @type {int} */
							j_ = new int(j_);
							b.str = setCharAt(b.str,b_i, with_.str[j])
							b_i.val ++;
						} catch (e) {
						 if (e instanceof BreakException) { break; }
						 else if (e instanceof ContinueException) { continue; }
						 else { throw e; } }
					}
					
					/** @type {int} */
					i.val = Math.floor(i + new int(new int( rep.len.valueOf() - new int(1).valueOf())));
					idx_pos.val ++;
					if ((new bool(idx_pos.valueOf() < idxs.len.valueOf())).valueOf()) {
						/** @type {RepIndex} */
						cur_idx = idxs.arr.get(new int(idx_pos.valueOf()));
					}
				} else {
					b.str = setCharAt(b.str,b_i,s.str[i]) //b.str[b_i] = s.str[i]
					b_i.val ++;
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return b;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} p
 * @returns {int}
*/
function string_last_index_(s, p) {
	try {
		if ((new bool( new bool(p.len.valueOf() > s.len.valueOf()).valueOf() || new bool(p.len.valueOf() == new int(0).valueOf()).valueOf())).valueOf()) {
			return new int(-1);
		}
		/** @type {int} */
		let i = new int(new int( s.len.valueOf() - p.len.valueOf()));
		while (+new bool(i.valueOf() >= new int(0).valueOf())) {
			try { 
				/** @type {int} */
				let j = new int(new int(0));
				while (+new bool( new bool(j.valueOf() < p.len.valueOf()).valueOf() && new bool(new byte(s.str.charCodeAt(new int( i.valueOf() + j.valueOf()))).valueOf() == new byte(p.str.charCodeAt(j)).valueOf()).valueOf())) {
					try { 
						j.val ++;
					} catch (e) {
					 if (e instanceof BreakException) { break; }
					 else if (e instanceof ContinueException) { continue; }
					 else { throw e; } }
				}
				
				if ((new bool(j.valueOf() == p.len.valueOf())).valueOf()) {
					return i;
				}
				i.val --;
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return new int(-1);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} p
 * @returns {int}
*/
function string_last_index(s, p) {
	try {
		/** @type {int} */
		const idx = new int(string_last_index_(s,p));
		if ((new bool(idx.valueOf() == new int(-1).valueOf())).valueOf()) {
			return new Option({ state:  new byte(2),err: none__});
		}
		const _tmp29 = new Option({});
		_tmp29.state = new byte(0);_tmp29.data = idx
		return _tmp29;} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function string_trim_space(s) {
	try {
		/** @type {string} */
		const res = new string(new string(""));
		res.str = s.str.trim()
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} p
 * @param {int} start
 * @returns {int}
*/
function string_index_after(s, p, start) {
	try {
		if ((new bool(p.len.valueOf() > s.len.valueOf())).valueOf()) {
			return new int(-1);
		}
		/** @type {int} */
		let strt = new int(start);
		if ((new bool(start.valueOf() < new int(0).valueOf())).valueOf()) {
			/** @type {int} */
			strt = new int(new int(0));
		}
		if ((new bool(start.valueOf() >= s.len.valueOf())).valueOf()) {
			return new int(-1);
		}
		/** @type {int} */
		let i = new int(strt);
		while (+new bool(i.valueOf() < s.len.valueOf())) {
			try { 
				/** @type {int} */
				let j = new int(new int(0));
				/** @type {int} */
				let ii = new int(i);
				while (+new bool( new bool(j.valueOf() < p.len.valueOf()).valueOf() && new bool(new byte(s.str.charCodeAt(ii)).valueOf() == new byte(p.str.charCodeAt(j)).valueOf()).valueOf())) {
					try { 
						j.val ++;
						ii.val ++;
					} catch (e) {
					 if (e instanceof BreakException) { break; }
					 else if (e instanceof ContinueException) { continue; }
					 else { throw e; } }
				}
				
				if ((new bool(j.valueOf() == p.len.valueOf())).valueOf()) {
					return i;
				}
				i.val ++;
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return new int(-1);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {Array_string}
*/
function string_split_into_lines(s) {
	try {
		/** @type {Array_string} */
		let res = new array(new array_buffer({arr: [], len: new int(0), cap: new int(0)}));
		if ((new bool(s.len.valueOf() == new int(0).valueOf())).valueOf()) {
			return res;
		}
		res.arr.arr = s.str.split("\n")
		if (res.arr.arr[res.arr.arr.length-1] == "") res.arr.arr.pop();
		res.arr.len = new int(res.arr.arr.length);
		res.arr.cap = new int(res.arr.arr.length);
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} rep
 * @param {string} with_
 * @returns {string}
*/
function string_replace_once(s, rep, with_) {
	try {
		/** @type {string} */
		const s2 = new string(new string(""));
		s2.val = s.str.replace(rep.str,with_.str)
		return s2;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function string_title(s) {
	try {
		/** @type {Array_string} */
		const words = string_split(s,new string(" "));
		/** @type {Array_string} */
		let tit = new array(new array_buffer({arr: [], len: new int(0), cap: new int(0)}));
		for (const word of words) {
			try { 
				array_push(tit,string_capitalize(word,),false);
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		/** @type {string} */
		const title = new string(Array_string_join(tit,new string(" ")));
		return title;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} chars
 * @returns {int}
*/
function string_index_any(s, chars) {
	try {
		for (const [i, ss] of Array.from(s.str.split('').entries(), ([i, ss]) => [i, new byte(ss)])) {
			try { 
				for (const c of chars.str.split('').map(c => new byte(c))) {
					try { 
						if ((new bool(c.valueOf() == ss.valueOf())).valueOf()) {
							return i;
						}
					} catch (e) {
					 if (e instanceof BreakException) { break; }
					 else if (e instanceof ContinueException) { continue; }
					 else { throw e; } }
				}
				
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return new int(-1);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} max
 * @returns {string}
*/
function string_limit(s, max) {
	try {
		/** @type {Array_rune} */
		const u = string_runes(s,);
		if ((new bool(u.len.valueOf() <= max.valueOf())).valueOf()) {
			return string_clone(s,);
		}
		return Array_rune_string(array_slice(u,new int(0), max),);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {bool}
*/
function string_is_title(s) {
	try {
		/** @type {Array_string} */
		const words = string_split(s,new string(" "));
		for (const word of words) {
			try { 
				if ((!string_is_capital(word,).val ).valueOf()) {
					return new bool(false);
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return new bool(true);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [direct_array_access] */
/**
 * @function
 * @returns {bool}
*/
function string_is_capital(s) {
	try {
		if ((new bool( new bool(s.len.valueOf() == new int(0).valueOf()).valueOf() || !(new bool( new bool(new byte(s.str.charCodeAt(new int(0))).valueOf() >= new byte('A').valueOf()).valueOf() && new bool(new byte(s.str.charCodeAt(new int(0))).valueOf() <= new byte('Z').valueOf()).valueOf())).val .valueOf())).valueOf()) {
			return new bool(false);
		}
		for (let i = new int(1); i < s.len; i = new int(i + 1)) {
			try { 
				if ((new bool( new bool(new byte(s.str.charCodeAt(i)).valueOf() >= new byte('A').valueOf()).valueOf() && new bool(new byte(s.str.charCodeAt(i)).valueOf() <= new byte('Z').valueOf()).valueOf())).valueOf()) {
					return new bool(false);
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return new bool(true);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [direct_array_access] */
/**
 * @function
 * @returns {bool}
*/
function string_starts_with_capital(s) {
	try {
		if ((new bool( new bool(s.len.valueOf() == new int(0).valueOf()).valueOf() || !(new bool( new bool(new byte(s.str.charCodeAt(new int(0))).valueOf() >= new byte('A').valueOf()).valueOf() && new bool(new byte(s.str.charCodeAt(new int(0))).valueOf() <= new byte('Z').valueOf()).valueOf())).val .valueOf())).valueOf()) {
			return new bool(false);
		}
		return new bool(true);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {bool}
*/
function string_is_upper(s) {
	try {
		/** @type {bool} */
		const res = new bool(new bool(false));
		res.val = s.str == s.str.toUpperCase() && s.str != s.str.toLowerCase()
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {bool}
*/
function string_is_lower(s) {
	try {
		/** @type {bool} */
		const res = new bool(new bool(false));
		res.val = s.str == s.str.toLowerCase() && s.str != s.str.toUpperCase()
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function string_reverse(s) {
	try {
		/** @type {string} */
		const res = new string(new string(""));
		res.str = [...s.str].reverse().join('')
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} cutset
 * @returns {string}
*/
function string_trim(s, cutset) {
	try {
		if ((new bool( new bool(s.len.valueOf() < new int(1).valueOf()).valueOf() || new bool(cutset.len.valueOf() < new int(1).valueOf()).valueOf())).valueOf()) {
			return string_clone(s,);
		}
		/** @type {int} */
		let pos_left = new int(new int(0));
		/** @type {int} */
		let pos_right = new int(new int( s.len.valueOf() - new int(1).valueOf()));
		/** @type {bool} */
		let cs_match = new bool(new bool(true));
		while (+new bool( new bool( new bool(pos_left.valueOf() <= s.len.valueOf()).valueOf() && new bool(pos_right.valueOf() >= new int(-1).valueOf()).valueOf()).valueOf() && cs_match.valueOf())) {
			try { 
				/** @type {bool} */
				cs_match = new bool(new bool(false));
				for (const cs of cutset.str.split('').map(c => new byte(c))) {
					try { 
						if ((new bool(new byte(s.str.charCodeAt(pos_left)).valueOf() == cs.valueOf())).valueOf()) {
							pos_left.val ++;
							/** @type {bool} */
							cs_match = new bool(new bool(true));
							break;
						}
					} catch (e) {
					 if (e instanceof BreakException) { break; }
					 else if (e instanceof ContinueException) { continue; }
					 else { throw e; } }
				}
				
				for (const cs of cutset.str.split('').map(c => new byte(c))) {
					try { 
						if ((new bool(new byte(s.str.charCodeAt(pos_right)).valueOf() == cs.valueOf())).valueOf()) {
							pos_right.val --;
							/** @type {bool} */
							cs_match = new bool(new bool(true));
							break;
						}
					} catch (e) {
					 if (e instanceof BreakException) { break; }
					 else if (e instanceof ContinueException) { continue; }
					 else { throw e; } }
				}
				
				if ((new bool(pos_left.valueOf() > pos_right.valueOf())).valueOf()) {
					return new string("");
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return string_substr(s,pos_left, new int( pos_right.valueOf() + new int(1).valueOf()));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} sep
 * @returns {string}
*/
function Array_string_join(s, sep) {
	try {
		/** @type {string} */
		let res = new string(new string(""));
		for (const [i, str] of s.entries()) {
			try { 
				/** @type {string} */
				res.str = res + new string(str);
				if ((new bool(i.valueOf() != new int( s.len.valueOf() - new int(1).valueOf()).valueOf())).valueOf()) {
					/** @type {string} */
					res.str = res + new string(sep);
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

Object.defineProperty(string.prototype,"len", { get: function() {return new int(new TextEncoder().encode(this.str).length);}, set: function(l) {/* ignore */ } });
/**
 * @function
 * @param {string} search
 * @returns {int}
*/
function string_index(s, search) {
	try {
		/** @type {int} */
		const res = new int(new int(0));
		res.val = s.str.indexOf(search)
		if ((new bool(res.valueOf() == new int(-1).valueOf())).valueOf()) {
			return new Option({ state:  new byte(2),err: none__});
		}
		const _tmp30 = new Option({});
		_tmp30.state = new byte(0);_tmp30.data = res
		return _tmp30;} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {int}
*/
function string_utf32_code(_rune) {
	try {
		/** @type {int} */
		const res = new int(new int(0));
		res.val = s.str.charCodeAt()
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {String} jsstr
 * @returns {string}
*/
function tos(jsstr) {
	try {
		/** @type {string} */
		const res = new string(new string(""));
		res.str = jsstr
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} a
 * @returns {int}
*/
function string_compare(s, a) {
	try {
		/** @type {int} */
		const min_len = new int(((new bool(s.len.valueOf() < a.len.valueOf())).valueOf() ? s.len : a.len));
		for (let i = new int(0); i < min_len; i = new int(i + 1)) {
			try { 
				if ((new bool(new byte(s.str.charCodeAt(i)).valueOf() < new byte(a.str.charCodeAt(i)).valueOf())).valueOf()) {
					return new int(-1);
				}
				if ((new bool(new byte(s.str.charCodeAt(i)).valueOf() > new byte(a.str.charCodeAt(i)).valueOf())).valueOf()) {
					return new int(1);
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		if ((new bool(s.len.valueOf() < a.len.valueOf())).valueOf()) {
			return new int(-1);
		}
		if ((new bool(s.len.valueOf() > a.len.valueOf())).valueOf()) {
			return new int(1);
		}
		return new int(0);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace builtin */
/**
 * @function
 * @param {string} s
 * @returns {int}
*/
function utf8_str_visible_length(s) {
	try {
		/** @type {int} */
		const res = new int(new int(0));
		res.val = s.str.length;
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} s
 * @returns {int}
*/
function utf8_str_len(s) {
	try {
		return s.len;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {byte} b
 * @returns {int}
*/
function utf8_char_len(b) {
	try {
		return new int_literal( (new int_literal( (new byte( new int(0xe5000000).valueOf() >> (new byte( (new byte( b.valueOf() >> new int(3).valueOf())).valueOf() & new int(0x1e).valueOf())).valueOf())).valueOf() & new int(3).valueOf())).valueOf() + new int(1).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {u32} val
 * @returns {string}
*/
function utf32_to_str(val) {
	try {
		return new string(String.fromCodePoint(val));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace time */
/**
 * @function
 * @param {int} oy
 * @param {int} m
 * @param {int} d
 * @returns {int}
*/
function time__days_from_civil(oy, m, d) {
	try {
		/** @type {int} */
		const y = new int(((new bool(m.valueOf() <= new int(2).valueOf())).valueOf() ? new int( oy.valueOf() - new int(1).valueOf()) : oy));
		/** @type {int} */
		const era = new int(new int( y.valueOf() / new int(400).valueOf()));
		/** @type {int} */
		const yoe = new int(new int( y.valueOf() - new int( era.valueOf() * new int(400).valueOf()).valueOf()));
		/** @type {int} */
		const doy = new int(new int( new int( new int( (new int( new int( new int(153).valueOf() * (new int( m.valueOf() + (((new bool(m.valueOf() > new int(2).valueOf())).valueOf() ? new int(-3) : new int(9))).valueOf())).valueOf()).valueOf() + new int(2).valueOf())).valueOf() / new int(5).valueOf()).valueOf() + d.valueOf()).valueOf() - new int(1).valueOf()));
		/** @type {int} */
		const doe = new int(new int( new int( new int( new int( yoe.valueOf() * new int(365).valueOf()).valueOf() + new int( yoe.valueOf() / new int(4).valueOf()).valueOf()).valueOf() - new int( yoe.valueOf() / new int(100).valueOf()).valueOf()).valueOf() + doy.valueOf()));
		return new int( new int( new int( era.valueOf() * new int(146097).valueOf()).valueOf() + doe.valueOf()).valueOf() - new int(719468).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace time */
/**
 * @function
 * @returns {string}
*/
function time__Time_format(t) {
	try {
		return time__Time_get_fmt_str(t,time__FormatDelimiter.hyphen, time__FormatTime.hhmm24, time__FormatDate.yyyymmdd);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function time__Time_format_ss(t) {
	try {
		return time__Time_get_fmt_str(t,time__FormatDelimiter.hyphen, time__FormatTime.hhmmss24, time__FormatDate.yyyymmdd);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function time__Time_format_ss_milli(t) {
	try {
		return time__Time_get_fmt_str(t,time__FormatDelimiter.hyphen, time__FormatTime.hhmmss24_milli, time__FormatDate.yyyymmdd);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function time__Time_format_ss_micro(t) {
	try {
		return time__Time_get_fmt_str(t,time__FormatDelimiter.hyphen, time__FormatTime.hhmmss24_micro, time__FormatDate.yyyymmdd);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function time__Time_hhmm(t) {
	try {
		return time__Time_get_fmt_time_str(t,time__FormatTime.hhmm24);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function time__Time_hhmmss(t) {
	try {
		return time__Time_get_fmt_time_str(t,time__FormatTime.hhmmss24);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function time__Time_hhmm12(t) {
	try {
		return time__Time_get_fmt_time_str(t,time__FormatTime.hhmm12);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function time__Time_ymmdd(t) {
	try {
		return time__Time_get_fmt_date_str(t,time__FormatDelimiter.hyphen, time__FormatDate.yyyymmdd);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function time__Time_ddmmy(t) {
	try {
		return time__Time_get_fmt_date_str(t,time__FormatDelimiter.dot, time__FormatDate.ddmmyyyy);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function time__Time_md(t) {
	try {
		return time__Time_get_fmt_date_str(t,time__FormatDelimiter.space, time__FormatDate.mmmd);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function time__Time_clean(t) {
	try {
		/** @type {time__Time} */
		const znow = time__now();
		if ((new bool( new bool( new bool(t.month.valueOf() == znow.month.valueOf()).valueOf() && new bool(t.year.valueOf() == znow.year.valueOf()).valueOf()).valueOf() && new bool(t.day.valueOf() == znow.day.valueOf()).valueOf())).valueOf()) {
			return time__Time_get_fmt_time_str(t,time__FormatTime.hhmm24);
		}
		if ((new bool(t.year.valueOf() == znow.year.valueOf())).valueOf()) {
			return time__Time_get_fmt_str(t,time__FormatDelimiter.space, time__FormatTime.hhmm24, time__FormatDate.mmmd);
		}
		return time__Time_format(t,);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function time__Time_clean12(t) {
	try {
		/** @type {time__Time} */
		const znow = time__now();
		if ((new bool( new bool( new bool(t.month.valueOf() == znow.month.valueOf()).valueOf() && new bool(t.year.valueOf() == znow.year.valueOf()).valueOf()).valueOf() && new bool(t.day.valueOf() == znow.day.valueOf()).valueOf())).valueOf()) {
			return time__Time_get_fmt_time_str(t,time__FormatTime.hhmm12);
		}
		if ((new bool(t.year.valueOf() == znow.year.valueOf())).valueOf()) {
			return time__Time_get_fmt_str(t,time__FormatDelimiter.space, time__FormatTime.hhmm12, time__FormatDate.mmmd);
		}
		return time__Time_format(t,);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {time__FormatTime} fmt_time
 * @returns {string}
*/
function time__Time_get_fmt_time_str(t, fmt_time) {
	try {
		if ((new bool(fmt_time.valueOf() == time__FormatTime.no_time.valueOf())).valueOf()) {
			return new string("");
		}
		/** @type {string} */
		const tp = new string(((new bool(t.hour.valueOf() > new int(11).valueOf())).valueOf() ? new string("p.m.") : new string("a.m.")));
		/** @type {int} */
		const hour_ = new int(((new bool(t.hour.valueOf() > new int(12).valueOf())).valueOf() ? new int( t.hour.valueOf() - new int(12).valueOf()) : (new bool(t.hour.valueOf() == new int(0).valueOf())).valueOf() ? new int(12) : t.hour));
		let _tmp31 = undefined;
		switch (fmt_time) {
			case time__FormatTime.hhmm12: 
				{
					_tmp31 = new string(`${int_str(hour_)}:${int_str(t.minute)} ${tp}`);
					
				} break;
			case time__FormatTime.hhmm24: 
				{
					_tmp31 = new string(`${int_str(t.hour)}:${int_str(t.minute)}`);
					
				} break;
			case time__FormatTime.hhmmss12: 
				{
					_tmp31 = new string(`${int_str(hour_)}:${int_str(t.minute)}:${int_str(t.second)} ${tp}`);
					
				} break;
			case time__FormatTime.hhmmss24: 
				{
					_tmp31 = new string(`${int_str(t.hour)}:${int_str(t.minute)}:${int_str(t.second)}`);
					
				} break;
			case time__FormatTime.hhmmss24_milli: 
				{
					_tmp31 = new string(`${int_str(t.hour)}:${int_str(t.minute)}:${int_str(t.second)}.${int_str((new int( t.microsecond.valueOf() / new int(1000).valueOf())))}`);
					
				} break;
			case time__FormatTime.hhmmss24_micro: 
				{
					_tmp31 = new string(`${int_str(t.hour)}:${int_str(t.minute)}:${int_str(t.second)}.${int_str(t.microsecond)}`);
					
				} break;
			default:
				{
					_tmp31 = new string(`unknown enumeration ${time__FormatTime_str(fmt_time)}`);
					
				} break;
		}
		return _tmp31;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {time__FormatDelimiter} fmt_dlmtr
 * @param {time__FormatDate} fmt_date
 * @returns {string}
*/
function time__Time_get_fmt_date_str(t, fmt_dlmtr, fmt_date) {
	try {
		if ((new bool(fmt_date.valueOf() == time__FormatDate.no_date.valueOf())).valueOf()) {
			return new string("");
		}
		/** @type {string} */
		const month = new string(time__Time_smonth(t,));
		/** @type {string} */
		const year = new string(`${int_str((new int( t.year.valueOf() % new int(100).valueOf())))}`);
		let _tmp32 = undefined;
		switch (fmt_date) {
			case time__FormatDate.ddmmyy: 
				{
					_tmp32 = `${int_str(t.day)}|${int_str(t.month)}|${year}`;
					
				} break;
			case time__FormatDate.ddmmyyyy: 
				{
					_tmp32 = `${int_str(t.day)}|${int_str(t.month)}|${int_str(t.year)}`;
					
				} break;
			case time__FormatDate.mmddyy: 
				{
					_tmp32 = `${int_str(t.month)}|${int_str(t.day)}|${year}`;
					
				} break;
			case time__FormatDate.mmddyyyy: 
				{
					_tmp32 = `${int_str(t.month)}|${int_str(t.day)}|${int_str(t.year)}`;
					
				} break;
			case time__FormatDate.mmmd: 
				{
					_tmp32 = `${month}|${int_str(t.day)}`;
					
				} break;
			case time__FormatDate.mmmdd: 
				{
					_tmp32 = `${month}|${int_str(t.day)}`;
					
				} break;
			case time__FormatDate.mmmddyy: 
				{
					_tmp32 = `${month}|${int_str(t.day)}|${year}`;
					
				} break;
			case time__FormatDate.mmmddyyyy: 
				{
					_tmp32 = `${month}|${int_str(t.day)}|${int_str(t.year)}`;
					
				} break;
			case time__FormatDate.yyyymmdd: 
				{
					_tmp32 = `${int_str(t.year)}|${int_str(t.month)}|${int_str(t.day)}`;
					
				} break;
			case time__FormatDate.yymmdd: 
				{
					_tmp32 = `${year}|${int_str(t.month)}|${int_str(t.day)}`;
					
				} break;
			default:
				{
					_tmp32 = `unknown enumeration ${time__FormatDate_str(fmt_date)}`;
					
				} break;
		}
		/** @type {string} */
		let res = new string(_tmp32);
		/** @type {string} */
		const del = new string(((vEq(fmt_dlmtr,time__FormatDelimiter.dot)) ? (new string(".")) : (vEq(fmt_dlmtr,time__FormatDelimiter.hyphen)) ? (new string("-")) : (vEq(fmt_dlmtr,time__FormatDelimiter.slash)) ? (new string("/")) : (vEq(fmt_dlmtr,time__FormatDelimiter.space)) ? (new string(" ")) : (new string(""))));
		/** @type {string} */
		res = new string(string_replace(res,new string("|"), del));
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {time__FormatDelimiter} fmt_dlmtr
 * @param {time__FormatTime} fmt_time
 * @param {time__FormatDate} fmt_date
 * @returns {string}
*/
function time__Time_get_fmt_str(t, fmt_dlmtr, fmt_time, fmt_date) {
	try {
		if ((new bool(fmt_date.valueOf() == time__FormatDate.no_date.valueOf())).valueOf()) {
			if ((new bool(fmt_time.valueOf() == time__FormatTime.no_time.valueOf())).valueOf()) {
				return new string("");
			} else {
				return time__Time_get_fmt_time_str(t,fmt_time);
			}
		} else {
			if ((new bool(fmt_time.valueOf() != time__FormatTime.no_time.valueOf())).valueOf()) {
				/** @type {string} */
				const dstr = new string(time__Time_get_fmt_date_str(t,fmt_dlmtr, fmt_date));
				/** @type {string} */
				const tstr = new string(time__Time_get_fmt_time_str(t,fmt_time));
				return new string(`${dstr} ${tstr}`);
			} else {
				return time__Time_get_fmt_date_str(t,fmt_dlmtr, fmt_date);
			}
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function time__Time_utc_string(t) {
	try {
		/** @type {string} */
		const day_str = new string(time__Time_weekday_str(t,));
		/** @type {string} */
		const month_str = new string(time__Time_smonth(t,));
		/** @type {string} */
		const utc_string = new string(`${day_str}, ${int_str(t.day)} ${month_str} ${int_str(t.year)} ${int_str(t.hour)}:${int_str(t.minute)}:${int_str(t.second)} UTC`);
		return utc_string;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace time */
/* [inline] */
/**
 * @function
 * @param {time__Time} t2
 * @returns {bool}
*/
function time__Time__eq(t1, t2) {
	try {
		return new bool( new bool(t1.unix.valueOf() == t2.unix.valueOf()).valueOf() && new bool(t1.microsecond.valueOf() == t2.microsecond.valueOf()).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {time__Time} t2
 * @returns {bool}
*/
function time__Time__lt(t1, t2) {
	try {
		return new bool( new bool(t1.unix.valueOf() < t2.unix.valueOf()).valueOf() || (new bool( new bool(t1.unix.valueOf() == t2.unix.valueOf()).valueOf() && new bool(t1.microsecond.valueOf() < t2.microsecond.valueOf()).valueOf())).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {time__Time} rhs
 * @returns {time__Duration}
*/
function time__Time__minus(lhs, rhs) {
	try {
		/** @type {i64} */
		const lhs_micro = new i64(new i64( BigInt(new i64( BigInt(lhs.unix.valueOf()) * BigInt(new int(1000000).valueOf())).valueOf()) + BigInt(lhs.microsecond.valueOf())));
		/** @type {i64} */
		const rhs_micro = new i64(new i64( BigInt(new i64( BigInt(rhs.unix.valueOf()) * BigInt(new int(1000000).valueOf())).valueOf()) + BigInt(rhs.microsecond.valueOf())));
		return new i64( BigInt((new i64( BigInt(lhs_micro.valueOf()) - BigInt(rhs_micro.valueOf()))).valueOf()) * BigInt(time__microsecond.valueOf()));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace time */
/**
 * @function
 * @param {string} s
 * @returns {time__Time}
*/
function time__parse(s) {
	try {
		/** @type {time__Time} */
		let res = new time__Time({});
		let date = new Date(s.str)
		res.year.val = date.getFullYear()
		res.month.val = date.getMonth()
		res.day.val = date.getDay()
		res.hour.val = date.getHours()
		res.minute.val = date.getMinutes()
		res.second.val = date.getSeconds()
		res.microsecond.val = date.getMilliseconds() * 1000
		res.unix.val = (date.getTime() / 1000).toFixed(0)
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} s
 * @returns {time__Time}
*/
function time__parse_iso8601(s) {
	try {
		const _tmp33 = new Option({});
		_tmp33.state = new byte(0);_tmp33.data = time__parse(s)
		return _tmp33;} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace time */
/**
 * @constructor
 * @param {{code?: int}} init
*/
function time__TimeParseError({ code = new int(0) }) {
	this.code = code
};
time__TimeParseError.prototype = {
	...Error.prototype,
	toString() {
		return `time__TimeParseError { code: ${this["code"].toString()} }`
	},
	/** @type {int} */
	code: new int(0),
	$toJS() { return this; }
	};

/**
 * @function
 * @returns {string}
*/
function time__TimeParseError_msg(err) {
	try {
		return new string(`Invalid time format code: ${int_str(err.code)}`);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} code
 * @returns {IError}
*/
function time__error_invalid_time(code) {
	try {
		return (function() {
			let _tmp34 = new time__TimeParseError({});
			_tmp34.code = code;
			return _tmp34;
		})()
		;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace time */
/* [params] */
/**
 * @constructor
 * @param {{auto_start?: bool}} init
*/
function time__StopWatchOptions({ auto_start = new bool(true) }) {
	this.auto_start = auto_start
};
time__StopWatchOptions.prototype = {
	toString() {
		return `time__StopWatchOptions { auto_start: ${this["auto_start"].toString()} }`
	},
	/** @type {bool} */
	auto_start: new bool(false),
	$toJS() { return this; }
	};

/**
 * @constructor
 * @param {{elapsed?: u64, start?: u64, end?: u64}} init
*/
function time__StopWatch({ elapsed = new u64(0), start = new u64(0), end = new u64(0) }) {
	this.elapsed = elapsed
	this.start = start
	this.end = end
};
time__StopWatch.prototype = {
	toString() {
		return `time__StopWatch { elapsed: ${this["elapsed"].toString()} , start: ${this["start"].toString()} , end: ${this["end"].toString()} }`
	},
	/** @type {u64} */
	elapsed: new u64(0),
	/** @type {u64} */
	start: new u64(0),
	/** @type {u64} */
	end: new u64(0),
	$toJS() { return this; }
	};

/**
 * @function
 * @param {time__StopWatchOptions} opts
 * @returns {time__StopWatch}
*/
function time__new_stopwatch(opts) {
	try {
		/** @type {u64} */
		let initial = new u64(new u64(BigInt(0n)));
		if ((opts.auto_start).valueOf()) {
			/** @type {u64} */
			initial = new u64(time__sys_mono_now());
		}
		return (function() {
			let _tmp35 = new time__StopWatch({});
			_tmp35.elapsed = new int(0);
			_tmp35.start = initial;
			_tmp35.end = new int(0);
			return _tmp35;
		})()
		;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function time__StopWatch_start(t) {
t = new $ref(t)
	try {
		/** @type {u64} */
		t.val.start = new u64(time__sys_mono_now());
		/** @type {u64} */
		t.val.end = new u64(new int(0));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function time__StopWatch_restart(t) {
t = new $ref(t)
	try {
		/** @type {u64} */
		t.val.start = new u64(time__sys_mono_now());
		/** @type {u64} */
		t.val.end = new u64(new int(0));
		/** @type {u64} */
		t.val.elapsed = new u64(new int(0));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function time__StopWatch_stop(t) {
t = new $ref(t)
	try {
		/** @type {u64} */
		t.val.end = new u64(time__sys_mono_now());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function time__StopWatch_pause(t) {
t = new $ref(t)
	try {
		if ((new bool(t.val.start.valueOf() > new int(0).valueOf())).valueOf()) {
			if ((new bool(t.val.end.valueOf() == new int(0).valueOf())).valueOf()) {
				/** @type {u64} */
				t.val.elapsed.val = t.val.elapsed + new u64(new u64( BigInt(time__sys_mono_now().valueOf()) - BigInt(t.val.start.valueOf())));
			} else {
				/** @type {u64} */
				t.val.elapsed.val = t.val.elapsed + new u64(new u64( BigInt(t.val.end.valueOf()) - BigInt(t.val.start.valueOf())));
			}
		}
		/** @type {u64} */
		t.val.start = new u64(new int(0));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {time__Duration}
*/
function time__StopWatch_elapsed(t) {
	try {
		if ((new bool(t.start.valueOf() > new int(0).valueOf())).valueOf()) {
			if ((new bool(t.end.valueOf() == new int(0).valueOf())).valueOf()) {
				return new time__Duration(new i64(new u64( BigInt(new u64( BigInt(time__sys_mono_now().valueOf()) - BigInt(t.start.valueOf())).valueOf()) + BigInt(t.elapsed.valueOf()))));
			} else {
				return new time__Duration(new i64(new u64( BigInt(new u64( BigInt(t.end.valueOf()) - BigInt(t.start.valueOf())).valueOf()) + BigInt(t.elapsed.valueOf()))));
			}
		}
		return new time__Duration(new i64(t.elapsed));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace time */
/**
 * @function
 * @returns {time__Time}
*/
function time__now() {
	try {
		/** @type {time__Time} */
		let res = new time__Time({});
		let date = new Date()
		res.year.val = date.getFullYear()
		res.month.val = date.getMonth()
		res.day.val = date.getDay()
		res.hour.val = date.getHours()
		res.minute.val = date.getMinutes()
		res.second.val = date.getSeconds()
		res.microsecond.val = date.getMilliseconds() * 1000
		res.unix.val = (date.getTime() / 1000).toFixed(0)
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {time__Time}
*/
function time__utc() {
	try {
		/** @type {time__Time} */
		let res = new time__Time({});
		let date = new Date()
		res.year.val = date.getUTCFullYear()
		res.month.val = date.getUTCMonth()
		res.day.val = date.getUTCDay()
		res.hour.val = date.getUTCHours()
		res.minute.val = date.getUTCMinutes()
		res.second.val = date.getUTCSeconds()
		res.microsecond.val = date.getUTCMilliseconds() * 1000
		res.unix.val = (date.getTime() / 1000).toFixed(0)
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {time__Time}
*/
function time__Time_local(t) {
	try {
		return t;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {time__Duration} dur
 * @returns {void}
*/
function time__sleep(dur) {
	try {
		let now = new Date().getTime()
		let toWait = BigInt(dur.val) / BigInt(time__millisecond)
		while (new Date().getTime() < now + Number(toWait)) {}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {i64}
*/
function time__ticks() {
	try {
		/** @type {i64} */
		const t = new i64(new i64(BigInt(0n)));
		t.val = BigInt(new Date().getTime())
		return t;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace time */
/** @constant {string} */
const time__days_string = new string("MonTueWedThuFriSatSun");
/** @constant {Array_int} */
let time__month_days = undefined;
/** @constant {string} */
const time__months_string = new string("JanFebMarAprMayJunJulAugSepOctNovDec");
/** @constant {i64} */
let time__absolute_zero_year = undefined;
/** @constant {int} */
const time__seconds_per_minute = new int(60);
/** @constant {int} */
let time__seconds_per_hour = undefined;
/** @constant {int} */
let time__seconds_per_day = undefined;
/** @constant {int} */
let time__seconds_per_week = undefined;
/** @constant {int} */
const time__days_per_400_years = new int(146097);
/** @constant {int} */
const time__days_per_100_years = new int(36524);
/** @constant {int} */
const time__days_per_4_years = new int(1461);
/** @constant {Array_int} */
let time__days_before = undefined;
/** @constant {Array_string} */
let time__long_days = undefined;

/**
 * @constructor
 * @param {{year?: int, month?: int, day?: int, hour?: int, minute?: int, second?: int, microsecond?: int, unix?: i64, is_local?: bool}} init
*/
function time__Time({ year = new int(0), month = new int(0), day = new int(0), hour = new int(0), minute = new int(0), second = new int(0), microsecond = new int(0), unix = new i64(0), is_local = new bool(false) }) {
	this.year = year
	this.month = month
	this.day = day
	this.hour = hour
	this.minute = minute
	this.second = second
	this.microsecond = microsecond
	this.unix = unix
	this.is_local = is_local
};
time__Time.prototype = {
	toString() {
		return `time__Time { year: ${this["year"].toString()} , month: ${this["month"].toString()} , day: ${this["day"].toString()} , hour: ${this["hour"].toString()} , minute: ${this["minute"].toString()} , second: ${this["second"].toString()} , microsecond: ${this["microsecond"].toString()} , unix: ${this["unix"].toString()} , is_local: ${this["is_local"].toString()} }`
	},
	/** @type {int} */
	year: new int(0),
	/** @type {int} */
	month: new int(0),
	/** @type {int} */
	day: new int(0),
	/** @type {int} */
	hour: new int(0),
	/** @type {int} */
	minute: new int(0),
	/** @type {int} */
	second: new int(0),
	/** @type {int} */
	microsecond: new int(0),
	/** @type {i64} */
	unix: new i64(0),
	/** @type {bool} */
	is_local: new bool(false),
	$toJS() { return this; }
	};

/** @enum {number} */
const time__FormatTime = {
	hhmm12: 0,
	hhmm24: 1,
	hhmmss12: 2,
	hhmmss24: 3,
	hhmmss24_milli: 4,
	hhmmss24_micro: 5,
	no_time: 6,
};

/** @enum {number} */
const time__FormatDate = {
	ddmmyy: 0,
	ddmmyyyy: 1,
	mmddyy: 2,
	mmddyyyy: 3,
	mmmd: 4,
	mmmdd: 5,
	mmmddyy: 6,
	mmmddyyyy: 7,
	no_date: 8,
	yyyymmdd: 9,
	yymmdd: 10,
};

/** @enum {number} */
const time__FormatDelimiter = {
	dot: 0,
	hyphen: 1,
	slash: 2,
	space: 3,
	no_delimiter: 4,
};

/**
 * @function
 * @returns {string}
*/
function time__Time_smonth(t) {
t = new $ref(t)
	try {
		if ((new bool( new bool(t.val.month.valueOf() <= new int(0).valueOf()).valueOf() || new bool(t.val.month.valueOf() > new int(12).valueOf()).valueOf())).valueOf()) {
			return new string("---");
		}
		/** @type {int} */
		const i = new int(new int( t.val.month.valueOf() - new int(1).valueOf()));
		return string_slice(time__months_string,new int( i.valueOf() * new int(3).valueOf()), new int( (new int( i.valueOf() + new int(1).valueOf())).valueOf() * new int(3).valueOf()));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @returns {i64}
*/
function time__Time_unix_time(t) {
t = new $ref(t)
	try {
		return t.val.unix;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @returns {i64}
*/
function time__Time_unix_time_milli(t) {
t = new $ref(t)
	try {
		return new i64( BigInt(new i64( BigInt(t.val.unix.valueOf()) * BigInt(new int(1000).valueOf())).valueOf()) + BigInt((new int( t.val.microsecond.valueOf() / new int(1000).valueOf())).valueOf()));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {time__Duration} d
 * @returns {time__Time}
*/
function time__Time_add(t, d) {
t = new $ref(t)
	try {
		/** @type {i64} */
		const microseconds = new i64(new i64( BigInt(new i64( BigInt(new i64( BigInt(new i64(t.val.unix).valueOf()) * BigInt(new int(1000000).valueOf())).valueOf()) + BigInt(t.val.microsecond.valueOf())).valueOf()) + BigInt(time__Duration_microseconds(d,).valueOf())));
		/** @type {i64} */
		const unix = new i64(new i64( BigInt(microseconds.valueOf()) / BigInt(new int(1000000).valueOf())));
		/** @type {i64} */
		const micro = new i64(new i64( BigInt(microseconds.valueOf()) % BigInt(new int(1000000).valueOf())));
		return time__unix2(unix, new int(micro));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} seconds
 * @returns {time__Time}
*/
function time__Time_add_seconds(t, seconds) {
t = new $ref(t)
	try {
		return time__Time_add(t.valueOf(),new int( BigInt(seconds.valueOf()) * BigInt(time__second.valueOf())));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} days
 * @returns {time__Time}
*/
function time__Time_add_days(t, days) {
t = new $ref(t)
	try {
		return time__Time_add(t.valueOf(),new int( BigInt(new int( days.valueOf() * new int(24).valueOf()).valueOf()) * BigInt(time__hour.valueOf())));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {time__Time} t
 * @returns {time__Duration}
*/
function time__since(t) {
	try {
		return time__Time__minus(time__now(), t);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function time__Time_relative(t) {
t = new $ref(t)
	try {
		/** @type {time__Time} */
		const znow = time__now();
		/** @type {i64} */
		const secs = new i64(new i64( BigInt(znow.unix.valueOf()) - BigInt(t.val.unix.valueOf())));
		if ((new bool(secs.valueOf() <= new int(30).valueOf())).valueOf()) {
			return new string("now");
		}
		if ((new bool(secs.valueOf() < new int(60).valueOf())).valueOf()) {
			return new string("1m");
		}
		if ((new bool(secs.valueOf() < new int(3600).valueOf())).valueOf()) {
			/** @type {i64} */
			const m = new i64(new i64( BigInt(secs.valueOf()) / BigInt(new int(60).valueOf())));
			if ((new bool(m.valueOf() == new int(1).valueOf())).valueOf()) {
				return new string("1 minute ago");
			}
			return new string(`${i64_str(m)} minutes ago`);
		}
		if ((new bool(secs.valueOf() < new int(86400).valueOf())).valueOf()) {
			/** @type {i64} */
			const h = new i64(new i64( BigInt(secs.valueOf()) / BigInt(new int(3600).valueOf())));
			if ((new bool(h.valueOf() == new int(1).valueOf())).valueOf()) {
				return new string("1 hour ago");
			}
			return new string(`${i64_str(h)} hours ago`);
		}
		if ((new bool(secs.valueOf() < new int(432000).valueOf())).valueOf()) {
			/** @type {i64} */
			const d = new i64(new i64( BigInt(new i64( BigInt(secs.valueOf()) / BigInt(new int(3600).valueOf())).valueOf()) / BigInt(new int(24).valueOf())));
			if ((new bool(d.valueOf() == new int(1).valueOf())).valueOf()) {
				return new string("1 day ago");
			}
			return new string(`${i64_str(d)} days ago`);
		}
		if ((new bool(secs.valueOf() > new int(864000000).valueOf())).valueOf()) {
			return new string("");
		}
		return time__Time_md(t.valueOf(),);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function time__Time_relative_short(t) {
t = new $ref(t)
	try {
		/** @type {time__Time} */
		const znow = time__now();
		/** @type {i64} */
		const secs = new i64(new i64( BigInt(znow.unix.valueOf()) - BigInt(t.val.unix.valueOf())));
		if ((new bool(secs.valueOf() <= new int(30).valueOf())).valueOf()) {
			return new string("now");
		}
		if ((new bool(secs.valueOf() < new int(60).valueOf())).valueOf()) {
			return new string("1m");
		}
		if ((new bool(secs.valueOf() < new int(3600).valueOf())).valueOf()) {
			return new string(`${i64_str(new i64( BigInt(secs.valueOf()) / BigInt(new int(60).valueOf())))}m`);
		}
		if ((new bool(secs.valueOf() < new int(86400).valueOf())).valueOf()) {
			return new string(`${i64_str(new i64( BigInt(secs.valueOf()) / BigInt(new int(3600).valueOf())))}h`);
		}
		if ((new bool(secs.valueOf() < new int(432000).valueOf())).valueOf()) {
			return new string(`${i64_str(new i64( BigInt(new i64( BigInt(secs.valueOf()) / BigInt(new int(3600).valueOf())).valueOf()) / BigInt(new int(24).valueOf())))}d`);
		}
		if ((new bool(secs.valueOf() > new int(864000000).valueOf())).valueOf()) {
			return new string("");
		}
		return time__Time_md(t.valueOf(),);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} y
 * @param {int} m
 * @param {int} d
 * @returns {int}
*/
function time__day_of_week(y, m, d) {
	try {
		/** @type {Array_int} */
		const t = new array(new array_buffer({arr: [new int(new int(0)), new int(new int(3)), new int(new int(2)), new int(new int(5)), new int(new int(0)), new int(new int(3)), new int(new int(5)), new int(new int(1)), new int(new int(4)), new int(new int(6)), new int(new int(2)), new int(new int(4))], len: new int(12), cap: new int(12)}));
		/** @type {int} */
		let sy = new int(y);
		if ((new bool(m.valueOf() < new int(3).valueOf())).valueOf()) {
			/** @type {int} */
			sy = new int(new int( sy.valueOf() - new int(1).valueOf()));
		}
		return new int( new int( (new int( new int( new int( new int( new int( new int( sy.valueOf() + new int( sy.valueOf() / new int(4).valueOf()).valueOf()).valueOf() - new int( sy.valueOf() / new int(100).valueOf()).valueOf()).valueOf() + new int( sy.valueOf() / new int(400).valueOf()).valueOf()).valueOf() + t.arr.get(new int(new int( m.valueOf() - new int(1).valueOf()).valueOf())).valueOf()).valueOf() + d.valueOf()).valueOf() - new int(1).valueOf())).valueOf() % new int(7).valueOf()).valueOf() + new int(1).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {int}
*/
function time__Time_day_of_week(t) {
t = new $ref(t)
	try {
		return time__day_of_week(t.val.year, t.val.month, t.val.day);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function time__Time_weekday_str(t) {
t = new $ref(t)
	try {
		/** @type {int} */
		const i = new int(new int( time__Time_day_of_week(t.valueOf(),).valueOf() - new int(1).valueOf()));
		return string_slice(time__days_string,new int( i.valueOf() * new int(3).valueOf()), new int( (new int( i.valueOf() + new int(1).valueOf())).valueOf() * new int(3).valueOf()));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function time__Time_long_weekday_str(t) {
t = new $ref(t)
	try {
		/** @type {int} */
		const i = new int(new int( time__Time_day_of_week(t.valueOf(),).valueOf() - new int(1).valueOf()));
		return time__long_days.arr.get(new int(i.valueOf()));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} year
 * @returns {bool}
*/
function time__is_leap_year(year) {
	try {
		return new bool( (new bool(new int( year.valueOf() % new int(4).valueOf()).valueOf() == new int(0).valueOf())).valueOf() && (new bool( new bool(new int( year.valueOf() % new int(100).valueOf()).valueOf() != new int(0).valueOf()).valueOf() || new bool(new int( year.valueOf() % new int(400).valueOf()).valueOf() == new int(0).valueOf()).valueOf())).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} month
 * @param {int} year
 * @returns {int}
*/
function time__days_in_month(month, year) {
	try {
		if ((new bool( new bool(month.valueOf() > new int(12).valueOf()).valueOf() || new bool(month.valueOf() < new int(1).valueOf()).valueOf())).valueOf()) {
			return new Option({ state:  new byte(2),err: error(new string(`Invalid month: ${int_str(month)}`))});
		}
		/** @type {int} */
		const extra = new int(((new bool( new bool(month.valueOf() == new int(2).valueOf()).valueOf() && time__is_leap_year(year).valueOf())).valueOf() ? new int(1) : new int(0)));
		/** @type {int} */
		const res = new int(new int( time__month_days.arr.get(new int(new int( month.valueOf() - new int(1).valueOf()).valueOf())).valueOf() + extra.valueOf()));
		const _tmp36 = new Option({});
		_tmp36.state = new byte(0);_tmp36.data = res
		return _tmp36;} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function time__Time_debug(t) {
t = new $ref(t)
	try {
		return new string(`Time{ year: ${int_str(t.val.year)} month: ${int_str(t.val.month)} day: ${int_str(t.val.day)} hour: ${int_str(t.val.hour)} minute: ${int_str(t.val.minute)} second: ${int_str(t.val.second)} microsecond: ${int_str(t.val.microsecond)} unix: ${i64_str(t.val.unix)} }`);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

function time__Duration(val) { return val;  }
/** @constant {time__Duration} */
let time__nanosecond = undefined;

/** @constant {time__Duration} */
let time__microsecond = undefined;

/** @constant {time__Duration} */
let time__millisecond = undefined;

/** @constant {time__Duration} */
let time__second = undefined;

/** @constant {time__Duration} */
let time__minute = undefined;

/** @constant {time__Duration} */
let time__hour = undefined;

/** @constant {time__Duration} */
let time__infinite = undefined;

/**
 * @function
 * @returns {i64}
*/
function time__Duration_nanoseconds(d) {
	try {
		return new i64(d);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {i64}
*/
function time__Duration_microseconds(d) {
	try {
		return new i64( BigInt(new i64(d).valueOf()) / BigInt(new int(1000).valueOf()));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {i64}
*/
function time__Duration_milliseconds(d) {
	try {
		return new i64( BigInt(new i64(d).valueOf()) / BigInt(new int(1000000).valueOf()));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {f64}
*/
function time__Duration_seconds(d) {
	try {
		/** @type {i64} */
		const sec = new i64(new i64( BigInt(d.valueOf()) / BigInt(time__second.valueOf())));
		/** @type {i64} */
		const nsec = new i64(new i64( BigInt(d.valueOf()) % BigInt(time__second.valueOf())));
		return new f64( new f64(sec).valueOf() + new f64( new f64(nsec).valueOf() / new f32(1e9).valueOf()).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {f64}
*/
function time__Duration_minutes(d) {
	try {
		/** @type {i64} */
		const min = new i64(new i64( BigInt(d.valueOf()) / BigInt(time__minute.valueOf())));
		/** @type {i64} */
		const nsec = new i64(new i64( BigInt(d.valueOf()) % BigInt(time__minute.valueOf())));
		return new f64( new f64(min).valueOf() + new f64( new f64(nsec).valueOf() / (new float_literal( new int(60).valueOf() * new f32(1e9).valueOf())).valueOf()).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {f64}
*/
function time__Duration_hours(d) {
	try {
		/** @type {i64} */
		const hr = new i64(new i64( BigInt(d.valueOf()) / BigInt(time__hour.valueOf())));
		/** @type {i64} */
		const nsec = new i64(new i64( BigInt(d.valueOf()) % BigInt(time__hour.valueOf())));
		return new f64( new f64(hr).valueOf() + new f64( new f64(nsec).valueOf() / (new float_literal( new int(3600).valueOf() * new f32(1e9).valueOf())).valueOf()).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function time__Duration_str(d) {
	try {
		if ((new bool(time__Duration_alias_eq(d, time__infinite))).valueOf()) {
			return new string("inf");
		}
		/** @type {i64} */
		let t = new i64(new i64(d));
		/** @type {i64} */
		const hr = new i64(new i64( BigInt(t.valueOf()) / BigInt(time__hour.valueOf())));
		/** @type {i64} */
		t.val = t - new i64(new i64( BigInt(hr.valueOf()) * BigInt(time__hour.valueOf())));
		/** @type {i64} */
		const min = new i64(new i64( BigInt(t.valueOf()) / BigInt(time__minute.valueOf())));
		/** @type {i64} */
		t.val = t - new i64(new i64( BigInt(min.valueOf()) * BigInt(time__minute.valueOf())));
		/** @type {i64} */
		const sec = new i64(new i64( BigInt(t.valueOf()) / BigInt(time__second.valueOf())));
		/** @type {i64} */
		t.val = t - new i64(new i64( BigInt(sec.valueOf()) * BigInt(time__second.valueOf())));
		/** @type {i64} */
		const ms = new i64(new i64( BigInt(t.valueOf()) / BigInt(time__millisecond.valueOf())));
		/** @type {i64} */
		t.val = t - new i64(new i64( BigInt(ms.valueOf()) * BigInt(time__millisecond.valueOf())));
		/** @type {i64} */
		const us = new i64(new i64( BigInt(t.valueOf()) / BigInt(time__microsecond.valueOf())));
		/** @type {i64} */
		t.val = t - new i64(new i64( BigInt(us.valueOf()) * BigInt(time__microsecond.valueOf())));
		/** @type {i64} */
		const ns = new i64(t);
		if ((new bool(hr.valueOf() > new int(0).valueOf())).valueOf()) {
			return new string(`${i64_str(hr)}:${i64_str(min)}:${i64_str(sec)}`);
		}
		if ((new bool(min.valueOf() > new int(0).valueOf())).valueOf()) {
			return new string(`${i64_str(min)}:${i64_str(sec)}.${i64_str(ms)}`);
		}
		if ((new bool(sec.valueOf() > new int(0).valueOf())).valueOf()) {
			return new string(`${i64_str(sec)}.${i64_str(ms)}s`);
		}
		if ((new bool(ms.valueOf() > new int(0).valueOf())).valueOf()) {
			return new string(`${i64_str(ms)}.${i64_str(us)}ms`);
		}
		if ((new bool(us.valueOf() > new int(0).valueOf())).valueOf()) {
			return new string(`${i64_str(us)}.${i64_str(ns)}us`);
		}
		return new string(`${i64_str(ns)}ns`);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {int}
*/
function time__offset() {
	try {
		/** @type {time__Time} */
		const t = time__utc();
		/** @type {time__Time} */
		const local = time__Time_local(t,);
		return new int(new i64( BigInt(local.unix.valueOf()) - BigInt(t.unix.valueOf())));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace time */
var $timeOff = 0;
var $seen = 0
function $sys_mono_new_Date() {
var t = Date.now()
if (t < $seen)
$timeOff += ($seen - t)

$seen = t
return t + $timeOff
}
/**
 * @function
 * @returns {u64}
*/
function time__sys_mono_now() {
	try {
		if (true)
		{
		/** @type {u64} */
		let res = new u64(new u64(BigInt(0n)));
		res = new u64(Math.floor(window.performance.now() * 1000000))
		return res;
		}
		else if (false)
		{
		/** @type {u64} */
		let res = new u64(new u64(BigInt(0n)));
		res.val = $process.hrtime.bigint()
		return res;
		}
		else
		{
		/** @type {u64} */
		let res = new u64(new u64(BigInt(0n)));
		res = new u64($sys_mono_new_Date() * 1000000)
		return res;
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace time */
/**
 * @function
 * @param {i64} abs
 * @returns {time__Time}
*/
function time__unix(abs) {
	try {
		/** @type {i64} */
		let day_offset = new i64(new i64( BigInt(abs.valueOf()) / BigInt(time__seconds_per_day.valueOf())));
		if ((new bool(new i64( BigInt(abs.valueOf()) % BigInt(time__seconds_per_day.valueOf())).valueOf() < new int(0).valueOf())).valueOf()) {
			day_offset.val --;
		}
		let [year, month, day] = time__calculate_date_from_offset(day_offset);
		let [hr, min, sec] = time__calculate_time_from_offset(new i64( BigInt(abs.valueOf()) % BigInt(time__seconds_per_day.valueOf())));
		return (function() {
			let _tmp37 = new time__Time({});
			_tmp37.year = year;
			_tmp37.month = month;
			_tmp37.day = day;
			_tmp37.hour = hr;
			_tmp37.minute = min;
			_tmp37.second = sec;
			_tmp37.unix = abs;
			return _tmp37;
		})()
		;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {i64} abs
 * @param {int} microsecond
 * @returns {time__Time}
*/
function time__unix2(abs, microsecond) {
	try {
		/** @type {i64} */
		let day_offset = new i64(new i64( BigInt(abs.valueOf()) / BigInt(time__seconds_per_day.valueOf())));
		if ((new bool(new i64( BigInt(abs.valueOf()) % BigInt(time__seconds_per_day.valueOf())).valueOf() < new int(0).valueOf())).valueOf()) {
			day_offset.val --;
		}
		let [year, month, day] = time__calculate_date_from_offset(day_offset);
		let [hr, min, sec] = time__calculate_time_from_offset(new i64( BigInt(abs.valueOf()) % BigInt(time__seconds_per_day.valueOf())));
		return (function() {
			let _tmp38 = new time__Time({});
			_tmp38.year = year;
			_tmp38.month = month;
			_tmp38.day = day;
			_tmp38.hour = hr;
			_tmp38.minute = min;
			_tmp38.second = sec;
			_tmp38.microsecond = microsecond;
			_tmp38.unix = abs;
			return _tmp38;
		})()
		;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {i64} day_offset_
 * @returns {multi_return_int_int_int}
*/
function time__calculate_date_from_offset(day_offset_) {
	try {
		/** @type {i64} */
		let day_offset = new i64(day_offset_);
		/** @type {int} */
		let year = new int(new int(2001));
		/** @type {i64} */
		day_offset.val = day_offset - new i64(new int(11323));
		/** @type {int} */
		year.val = Math.floor(year + new int(new int( new int(new i64( BigInt(day_offset.valueOf()) / BigInt(time__days_per_400_years.valueOf()))).valueOf() * new int(400).valueOf())));
		/** @type {i64} */
		day_offset.val = day_offset % new i64(time__days_per_400_years);
		if ((new bool(day_offset.valueOf() == new int_literal( time__days_per_100_years.valueOf() * new int(4).valueOf()).valueOf())).valueOf()) {
			/** @type {int} */
			year.val = Math.floor(year + new int(new int(300)));
			/** @type {i64} */
			day_offset.val = day_offset - new i64(new int_literal( time__days_per_100_years.valueOf() * new int(3).valueOf()));
		} else {
			/** @type {int} */
			year.val = Math.floor(year + new int(new int( new int(new i64( BigInt(day_offset.valueOf()) / BigInt(time__days_per_100_years.valueOf()))).valueOf() * new int(100).valueOf())));
			/** @type {i64} */
			day_offset.val = day_offset % new i64(time__days_per_100_years);
		}
		if ((new bool(day_offset.valueOf() == new int_literal( time__days_per_4_years.valueOf() * new int(25).valueOf()).valueOf())).valueOf()) {
			/** @type {int} */
			year.val = Math.floor(year + new int(new int(96)));
			/** @type {i64} */
			day_offset.val = day_offset - new i64(new int_literal( time__days_per_4_years.valueOf() * new int(24).valueOf()));
		} else {
			/** @type {int} */
			year.val = Math.floor(year + new int(new int( new int(new i64( BigInt(day_offset.valueOf()) / BigInt(time__days_per_4_years.valueOf()))).valueOf() * new int(4).valueOf())));
			/** @type {i64} */
			day_offset.val = day_offset % new i64(time__days_per_4_years);
		}
		if ((new bool(day_offset.valueOf() == new int(1460).valueOf())).valueOf()) {
			/** @type {int} */
			year.val = Math.floor(year + new int(new int(3)));
			/** @type {i64} */
			day_offset.val = day_offset - new i64(new int(1095));
		} else {
			/** @type {int} */
			year.val = Math.floor(year + new int(new int(new i64( BigInt(day_offset.valueOf()) / BigInt(new int(365).valueOf())))));
			/** @type {i64} */
			day_offset.val = day_offset % new i64(new int(365));
		}
		if ((new bool(day_offset.valueOf() < new int(0).valueOf())).valueOf()) {
			year.val --;
			if ((time__is_leap_year(year)).valueOf()) {
				/** @type {i64} */
				day_offset.val = day_offset + new i64(new int(366));
			} else {
				/** @type {i64} */
				day_offset.val = day_offset + new i64(new int(365));
			}
		}
		if ((time__is_leap_year(year)).valueOf()) {
			if ((new bool(day_offset.valueOf() > new int(59).valueOf())).valueOf()) {
				day_offset.val --;
			} else if ((new bool(day_offset.valueOf() == new int(59).valueOf())).valueOf()) {
				return [year, new int(2), new int(29)];
			}
		}
		/** @type {i64} */
		let estimated_month = new i64(new i64( BigInt(day_offset.valueOf()) / BigInt(new int(31).valueOf())));
		while (+new bool(day_offset.valueOf() >= time__days_before.arr.get(new int(new i64( BigInt(estimated_month.valueOf()) + BigInt(new int(1).valueOf())).valueOf())).valueOf())) {
			try { 
				estimated_month.val ++;
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		while (+new bool(day_offset.valueOf() < time__days_before.arr.get(new int(estimated_month.valueOf())).valueOf())) {
			try { 
				if ((new bool(estimated_month.valueOf() == new int(0).valueOf())).valueOf()) {
					break;
				}
				estimated_month.val --;
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		/** @type {i64} */
		day_offset.val = day_offset - new i64(time__days_before.arr.get(new int(estimated_month.valueOf())));
		return [year, new int(new i64( BigInt(estimated_month.valueOf()) + BigInt(new int(1).valueOf()))), new int(new i64( BigInt(day_offset.valueOf()) + BigInt(new int(1).valueOf())))];
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {i64} second_offset_
 * @returns {multi_return_int_int_int}
*/
function time__calculate_time_from_offset(second_offset_) {
	try {
		/** @type {i64} */
		let second_offset = new i64(second_offset_);
		if ((new bool(second_offset.valueOf() < new int(0).valueOf())).valueOf()) {
			/** @type {i64} */
			second_offset.val = second_offset + new i64(time__seconds_per_day);
		}
		/** @type {i64} */
		const hour_ = new i64(new i64( BigInt(second_offset.valueOf()) / BigInt(time__seconds_per_hour.valueOf())));
		/** @type {i64} */
		second_offset.val = second_offset % new i64(time__seconds_per_hour);
		/** @type {i64} */
		const min = new i64(new i64( BigInt(second_offset.valueOf()) / BigInt(time__seconds_per_minute.valueOf())));
		/** @type {i64} */
		second_offset.val = second_offset % new i64(time__seconds_per_minute);
		return [new int(hour_), new int(min), new int(second_offset)];
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace os */
/**
 * @function
 * @param {string} cut_word
 * @returns {Array_string}
*/
function os__args_after(cut_word) {
	try {
		if ((new bool(os__args.len.valueOf() == new int(0).valueOf())).valueOf()) {
			return new array(new array_buffer({arr: [], len: new int(0), cap: new int(0)}));
		}
		/** @type {Array_string} */
		let cargs = new array(new array_buffer({arr: [], len: new int(0), cap: new int(0)}));
		if ((!(Array_string_contains(os__args,cut_word).valueOf())).valueOf()) {
			/** @type {Array_string} */
			cargs = array_clone(os__args,);
		} else {
			/** @type {bool} */
			let found = new bool(new bool(false));
			array_push(cargs,os__args.arr.get(new int(new int(0).valueOf())),false);
			for (const a of array_slice(os__args,new int(1), os__args.len)) {
				try { 
					if ((new bool(a.valueOf() == cut_word.valueOf())).valueOf()) {
						/** @type {bool} */
						found = new bool(new bool(true));
						continue;
					}
					if ((!found.val ).valueOf()) {
						continue;
					}
					array_push(cargs,a,false);
				} catch (e) {
				 if (e instanceof BreakException) { break; }
				 else if (e instanceof ContinueException) { continue; }
				 else { throw e; } }
			}
			
		}
		return cargs;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} cut_word
 * @returns {Array_string}
*/
function os__args_before(cut_word) {
	try {
		if ((new bool(os__args.len.valueOf() == new int(0).valueOf())).valueOf()) {
			return new array(new array_buffer({arr: [], len: new int(0), cap: new int(0)}));
		}
		/** @type {Array_string} */
		let cargs = new array(new array_buffer({arr: [], len: new int(0), cap: new int(0)}));
		if ((!(Array_string_contains(os__args,cut_word).valueOf())).valueOf()) {
			/** @type {Array_string} */
			cargs = array_clone(os__args,);
		} else {
			array_push(cargs,os__args.arr.get(new int(new int(0).valueOf())),false);
			for (const a of array_slice(os__args,new int(1), os__args.len)) {
				try { 
					if ((new bool(a.valueOf() == cut_word.valueOf())).valueOf()) {
						break;
					}
					array_push(cargs,a,false);
				} catch (e) {
				 if (e instanceof BreakException) { break; }
				 else if (e instanceof ContinueException) { continue; }
				 else { throw e; } }
			}
			
		}
		return cargs;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace os */
/** @namespace os */
if (false)
{
global.$ENV = $process.env
}
else
{
const global = $global;
global.$ENV = {}
}
/**
 * @function
 * @param {string} key
 * @param {string} val
 * @param {bool} overwrite
 * @returns {void}
*/
function os__setenv(key, val, overwrite) {
	try {
		if ($ENV[key] && !(overwrite.valueOf())) return;
		$ENV[key] = val + '';
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} key
 * @returns {string}
*/
function os__getenv(key) {
	try {
		/** @type {string} */
		let res = new string(new string(""));
		if ($ENV[key]) res = new string($ENV[key])
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} key
 * @returns {string}
*/
function os__getenv_opt(key) {
	try {
		if (!$ENV[key]) return none__;
		/** @type {string} */
		let res = new string(new string(""));
		if ($ENV[key]) res = new string($ENV[key]);
		const _tmp39 = new Option({});
		_tmp39.state = new byte(0);_tmp39.data = res
		return _tmp39;} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} name
 * @returns {int}
*/
function os__unsetenv(name) {
	try {
		$ENV[name] = ""
		return new int(1);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {Map_string_string}
*/
function os__environ() {
	try {
		/** @type {Map_string_string} */
		let res = new map(
			{});
		for (const key in $ENV) {
		res.map.set(key,$ENV[key])
		}
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace os */
/**
 * @constructor
 * @param {{fd?: int, is_opened?: bool}} init
*/
function os__File({ fd = new int(0), is_opened = new bool(false) }) {
	this.fd = fd
	this.is_opened = is_opened
};
os__File.prototype = {
	toString() {
		return `os__File { fd: ${this["fd"].toString()} , is_opened: ${this["is_opened"].toString()} }`
	},
	/** @type {int} */
	fd: new int(0),
	/** @type {bool} */
	is_opened: new bool(false),
	$toJS() { return this; }
	};

if (!true)
{
const $buffer = require('buffer');
}
/**
 * @function
 * @param {string} path
 * @param {string} mode
 * @param {...Array_int} options
 * @returns {os__File}
*/
function os__open_file(path, mode, ...options) {
options = new array(new array_buffer({arr: options,len: new int(options.length),index_start: new int(0)}));
	try {
		/** @type {os__File} */
		let res = new os__File({});
		if (false)
		{
		if (!options) { options = new array([]); }
		let permissions = 0o666
		if (options.arr.length > 0) { permissions = options.arr[0]; }
		try {
		res.fd = new int($fs.openSync(''+path,''+mode,permissions))
		} catch (e) {
		return error(new string('' + e));
		}
		/** @type {bool} */
		res.is_opened = new bool(new bool(true));
		}
		else
		{
		error(new string("cannot open file on non NodeJS runtime"));
		}
		const _tmp40 = new Option({});
		_tmp40.state = new byte(0);_tmp40.data = res
		return _tmp40;} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} path
 * @returns {os__File}
*/
function os__open(path) {
	try {
		/** @type {os__File} */
		const f = (function(){
			try {
				return unwrap(os__open_file(path, new string("r")))
			} catch(err) {
				js_throw(err)
			}
		})();
		const _tmp41 = new Option({});
		_tmp41.state = new byte(0);_tmp41.data = f
		return _tmp41;} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} path
 * @returns {os__File}
*/
function os__create(path) {
	try {
		/** @type {os__File} */
		const f = (function(){
			try {
				return unwrap(os__open_file(path, new string("w")))
			} catch(err) {
				js_throw(err)
			}
		})();
		const _tmp42 = new Option({});
		_tmp42.state = new byte(0);_tmp42.data = f
		return _tmp42;} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {os__File}
*/
function os__stdin() {
	try {
		return (function() {
			let _tmp43 = new os__File({});
			_tmp43.fd = new int(0);
			_tmp43.is_opened = new bool(true);
			return _tmp43;
		})()
		;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {os__File}
*/
function os__stdout() {
	try {
		return (function() {
			let _tmp44 = new os__File({});
			_tmp44.fd = new int(1);
			_tmp44.is_opened = new bool(true);
			return _tmp44;
		})()
		;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {os__File}
*/
function os__stderr() {
	try {
		return (function() {
			let _tmp45 = new os__File({});
			_tmp45.fd = new int(2);
			_tmp45.is_opened = new bool(true);
			return _tmp45;
		})()
		;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {Array_byte} buf
 * @returns {int}
*/
function os__File_read(f, buf) {
f = new $ref(f)
buf = new $ref(buf)
	try {
		if ((new bool(buf.val.len.valueOf() == new int(0).valueOf())).valueOf()) {
			const _tmp46 = new Option({});
			_tmp46.state = new byte(0);_tmp46.data = new int(0)
			return _tmp46;}
		/** @type {int} */
		let nbytes = new int(new int(0));
		try {
		let buffer = $fs.readFileSync(f.val.fd.valueOf());
		
		for (const val of buffer.values()) { buf.arr[nbytes++] = val; }
		}
		catch (e) { return error('' + e); }
		const _tmp47 = new Option({});
		_tmp47.state = new byte(0);_tmp47.data = nbytes
		return _tmp47;} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {Array_byte} buf
 * @returns {int}
*/
function os__File_write(f, buf) {
f = new $ref(f)
	try {
		if ((!f.val.is_opened.val ).valueOf()) {
			return new Option({ state:  new byte(2),err: error(new string("file is not opened"))});
		}
		/** @type {int} */
		let nbytes = new int(new int(0));
		buf.arr.make_copy()
		const b = $buffer.Buffer.from(buf.arr.arr.map((x) => x.valueOf()))
		try { $fs.writeSync(f.val.fd.valueOf(),b,0,buf.len.valueOf(),0); } catch (e) { return error(new string('' + e)); }
		const _tmp48 = new Option({});
		_tmp48.state = new byte(0);_tmp48.data = nbytes
		return _tmp48;} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} s
 * @returns {int}
*/
function os__File_writeln(f, s) {
f = new $ref(f)
	try {
		/** @type {int} */
		let nbytes = new int((function(){
			try {
				return unwrap(os__File_write(f.valueOf(),string_bytes(s,)))
			} catch(err) {
				js_throw(err)
			}
		})());
		/** @type {int} */
		nbytes.val = Math.floor(nbytes + new int((function(){
			try {
				return unwrap(os__File_write(f.valueOf(),string_bytes(new string("\n"),)))
			} catch(err) {
				js_throw(err)
			}
		})()));
		const _tmp49 = new Option({});
		_tmp49.state = new byte(0);_tmp49.data = nbytes
		return _tmp49;} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {u64} pos
 * @param {Array_byte} buf
 * @returns {int}
*/
function os__File_write_to(f, pos, buf) {
f = new $ref(f)
	try {
		if ((!f.val.is_opened.val ).valueOf()) {
			return new Option({ state:  new byte(2),err: error(new string("file is not opened"))});
		}
		/** @type {int} */
		let nbytes = new int(new int(0));
		buf.arr.make_copy()
		const b = $buffer.Buffer.from(buf.arr.arr.map((x) => x.valueOf()))
		try { $fs.writeSync(f.val.fd.valueOf(),b,0,buf.len.valueOf(),pos.valueOf()); } catch (e) { return error(new string('' + e)); }
		const _tmp50 = new Option({});
		_tmp50.state = new byte(0);_tmp50.data = nbytes
		return _tmp50;} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} s
 * @returns {int}
*/
function os__File_write_string(f, s) {
f = new $ref(f)
	try {
		/** @type {int} */
		const nbytes = new int((function(){
			try {
				return unwrap(os__File_write(f.valueOf(),string_bytes(s,)))
			} catch(err) {
				js_throw(err)
			}
		})());
		const _tmp51 = new Option({});
		_tmp51.state = new byte(0);_tmp51.data = nbytes
		return _tmp51;} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function os__File_close(f) {
f = new $ref(f)
	try {
		$fs.closeSync(f.valueOf().fd.valueOf())
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {voidptr} s
 * @param {usize} buffer_len
 * @returns {void}
*/
function os__File_write_full_buffer(f, s, buffer_len) {
f = new $ref(f)
	try {
		return {state: new int(0)}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {array} buffer
 * @returns {int}
*/
function os__File_write_array(f, buffer) {
f = new $ref(f)
	try {
		if ((!f.val.is_opened.val ).valueOf()) {
			return new Option({ state:  new byte(2),err: error(new string("file is not opened"))});
		}
		/** @type {int} */
		let nbytes = new int(new int(0));
		buffer.arr.make_copy()
		const b = $buffer.Buffer.from(buffer.arr.arr.map((x) => x.valueOf()))
		try { $fs.writeSync(f.val.fd.valueOf(),b,0,buffer.len.valueOf(),0); } catch (e) { return error(new string('' + e)); }
		const _tmp52 = new Option({});
		_tmp52.state = new byte(0);_tmp52.data = nbytes
		return _tmp52;} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace os */
if (false)
{
var $fs = require('fs');
var $path = require('path');
var tty = require('tty')
}
/** @constant {string} */
let os__path_delimiter = undefined;
/** @constant {string} */
let os__path_separator = undefined;
/** @constant {Array_string} */
let os__args = undefined;

/**
 * @function
 * @returns {string}
*/
function os__get_path_delimiter() {
	try {
		/** @type {string} */
		const delimiter = new string(new string(":"));
		if (false)
		{
		delimiter.str = $path.delimiter
		}
		return delimiter;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function os__get_path_separator() {
	try {
		/** @type {string} */
		const separator = new string(new string("/"));
		if (false)
		{
		separator.str = $path.sep
		}
		return separator;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function os__init() {
	try {
		if (false)
		{
		$process.argv.forEach(function(val,index) { os__args.arr[index] = new string(val); })
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} fpath
 * @returns {string}
*/
function os__real_path(fpath) {
	try {
		if (false)
		{
		/** @type {string} */
		let res = new string(new string(""));
		res = new string( $fs.realpathSync(fpath))
		return res;
		}
		else
		{
		return fpath;
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function os__flush() {
	try {
		if (false)
		{
		$process.stdout.write('')
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {int}
*/
function os__getpid() {
	try {
		/** @type {int} */
		const res = new int(new int(0));
		res.val = $process.pid
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} path
 * @param {int} mode
 * @returns {void}
*/
function os__chmod(path, mode) {
	try {
		if (false)
		{
		try {
		$fs.chmodSync(''+path,mode.valueOf())
		} catch (error) {
		return error_with_code(new string("chmod failed: " + error.message),new int(error.code))
		}
		}
		else
		{
		return new Option({ state:  new byte(2),err: error(new string("os.chmod() is available only for NodeJS"))});
		}
		return {state: new int(0)}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} path
 * @param {int} owner
 * @param {int} group
 * @returns {void}
*/
function os__chown(path, owner, group) {
	try {
		if (false)
		{
		try {
		$fs.chownSync(''+path,owner.valueOf(),group.valueOf())
		} catch (error) { return error_with_code(new string("chown failed: " + error.message),new int(error.code)) }
		}
		else
		{
		return new Option({ state:  new byte(2),err: error(new string("os.chown() is available only for NodeJS"))});
		}
		return {state: new int(0)}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function os__temp_dir() {
	try {
		/** @type {string} */
		let res = new string(new string(""));
		if (false)
		{
		res = new string($os.tmpdir())
		}
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function os__home_dir() {
	try {
		/** @type {string} */
		let res = new string(new string(""));
		if (false)
		{
		res = new string($os.homedir())
		}
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} base
 * @param {...Array_string} dirs
 * @returns {string}
*/
function os__join_path(base, ...dirs) {
dirs = new array(new array_buffer({arr: dirs,len: new int(dirs.length),index_start: new int(0)}));
	try {
		/** @type {Array_string} */
		let result = new array(new array_buffer({arr: [], len: new int(0), cap: new int(0)}));
		array_push(result,string_trim_right(base,new string("\\/")),false);
		for (const d of dirs) {
			try { 
				array_push(result,d,false);
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		/** @type {string} */
		let path_sep = new string(new string(""));
		path_sep = $path.sep;
		/** @type {string} */
		const res = new string(Array_string_join(result,path_sep));
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} base
 * @param {string} elem
 * @returns {string}
*/
function os__join_path_single(base, elem) {
	try {
		return os__join_path(base, elem);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} cmd
 * @returns {os__Result}
*/
function os__execute(cmd) {
	try {
		/** @type {int} */
		let exit_code = new int(new int(0));
		/** @type {string} */
		let stdout = new string(new string(""));
		let commands = cmd.str.split(' ');
		let output = $child_process.spawnSync(commands[0],commands.slice(1,commands.length));
		exit_code = new int(output.status)
		stdout = new string(output.stdout + '')
		return (function() {
			let _tmp53 = new os__Result({});
			_tmp53.exit_code = exit_code;
			_tmp53.output = stdout;
			return _tmp53;
		})()
		;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} cmd
 * @returns {int}
*/
function os__system(cmd) {
	try {
		/** @type {int} */
		const exit_code = new int(new int(0));
		let commands = cmd.str.split(' ');
		exit_code.val = $child_process.execSync(commands[0],commands.slice(1,commands.length));
		return exit_code;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} fd
 * @returns {int}
*/
function os__is_atty(fd) {
	try {
		/** @type {int} */
		const res = new int(new int(0));
		res.val = +tty.isatty(fd.val)
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {...Array_string} patterns
 * @returns {Array_string}
*/
function os__glob(...patterns) {
patterns = new array(new array_buffer({arr: patterns,len: new int(patterns.length),index_start: new int(0)}));
	try {
		builtin__panic (new string("not yet implemented"));
		return new Option({ state:  new byte(2),err: none__});
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} path
 * @param {array} buffer
 * @returns {void}
*/
function os__write_file_array(path, buffer) {
	try {
		/** @type {os__File} */
		let f = (function(){
			try {
				return unwrap(os__create(path))
			} catch(err) {
				js_throw(err)
			}
		})();
		(function(){
			try {
				return unwrap(os__File_write_array(f,buffer))
			} catch(err) {
				js_throw(err)
			}
		})();
		os__File_close(f,);
		return {state: new int(0)}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} s
 * @returns {void}
*/
function os__chdir(s) {
	try {
		try { $process.chdir(s.str); } catch (e) { return error(new string('' + s)) }
		return {state: new int(0)}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} path
 * @returns {int}
*/
function os__file_last_mod_unix(path) {
	try {
		/** @type {int} */
		const mtime = new int(new int(0));
		mtime.val = Math.floor($fs.lstatSync(path.str).mtime.getTime() / 1000)
		return mtime;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace os */
/** @constant {int} */
const os__max_path_len = new int(4096);

/** @constant {string} */
let os__wd_at_startup = undefined;

/** @constant {int} */
const os__f_ok = new int(0);

/** @constant {int} */
const os__x_ok = new int(1);

/** @constant {int} */
const os__w_ok = new int(2);

/** @constant {int} */
const os__r_ok = new int(4);

/**
 * @constructor
 * @param {{exit_code?: int, output?: string}} init
*/
function os__Result({ exit_code = new int(0), output = new string("") }) {
	this.exit_code = exit_code
	this.output = output
};
os__Result.prototype = {
	toString() {
		return `os__Result { exit_code: ${this["exit_code"].toString()} , output: "${this["output"].toString()}"}`
	},
	/** @type {int} */
	exit_code: new int(0),
	/** @type {string} */
	output: new string(""),
	$toJS() { return this; }
	};

/**
 * @constructor
 * @param {{f?: voidptr, eof?: bool, exit_code?: int, path?: string, redirect_stdout?: bool}} init
*/
function os__Command({ f = new voidptr(null), eof = new bool(false), exit_code = new int(0), path = new string(""), redirect_stdout = new bool(false) }) {
	this.f = f
	this.eof = eof
	this.exit_code = exit_code
	this.path = path
	this.redirect_stdout = redirect_stdout
};
os__Command.prototype = {
	toString() {
		return `os__Command { f: ${this["f"].toString()} , eof: ${this["eof"].toString()} , exit_code: ${this["exit_code"].toString()} , path: "${this["path"].toString()}", redirect_stdout: ${this["redirect_stdout"].toString()} }`
	},
	/** @type {voidptr} */
	f: new voidptr(null),
	/** @type {bool} */
	eof: new bool(false),
	/** @type {int} */
	exit_code: new int(0),
	/** @type {string} */
	path: new string(""),
	/** @type {bool} */
	redirect_stdout: new bool(false),
	$toJS() { return this; }
	};

/* [unsafe] */
/**
 * @function
 * @returns {void}
*/
function os__Result_free(result) {
result = new $ref(result)
	try {
		string_free(result.val.output,);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} src
 * @param {string} dst
 * @param {bool} overwrite
 * @returns {void}
*/
function os__cp_all(src, dst, overwrite) {
	try {
		/** @type {string} */
		const source_path = new string(os__real_path(src));
		/** @type {string} */
		const dest_path = new string(os__real_path(dst));
		if ((!os__exists(source_path).val ).valueOf()) {
			return new Option({ state:  new byte(2),err: error(new string("Source path doesn't exist"))});
		}
		if ((!os__is_dir(source_path).val ).valueOf()) {
			/** @type {string} */
			const fname = new string(os__file_name(source_path));
			/** @type {string} */
			const adjusted_path = new string(((os__is_dir(dest_path)).valueOf() ? os__join_path_single(dest_path, fname) : dest_path));
			if ((os__exists(adjusted_path)).valueOf()) {
				if ((overwrite).valueOf()) {
					(function(){
						try {
							return unwrap(os__rm(adjusted_path))
						} catch(err) {
							js_throw(err)
						}
					})();
				} else {
					return new Option({ state:  new byte(2),err: error(new string("Destination file path already exist"))});
				}
			}
			(function(){
				try {
					return unwrap(os__cp(source_path, adjusted_path))
				} catch(err) {
					js_throw(err)
				}
			})();
			return {state: new int(0)}
		}
		if ((!os__exists(dest_path).val ).valueOf()) {
			(function(){
				try {
					return unwrap(os__mkdir(dest_path))
				} catch(err) {
					js_throw(err)
				}
			})();
		}
		if ((!os__is_dir(dest_path).val ).valueOf()) {
			return new Option({ state:  new byte(2),err: error(new string("Destination path is not a valid directory"))});
		}
		/** @type {Array_string} */
		const files = (function(){
			try {
				return unwrap(os__ls(source_path))
			} catch(err) {
				js_throw(err)
			}
		})();
		for (const file of files) {
			try { 
				/** @type {string} */
				const sp = new string(os__join_path_single(source_path, file));
				/** @type {string} */
				const dp = new string(os__join_path_single(dest_path, file));
				if ((os__is_dir(sp)).valueOf()) {
					if ((!os__exists(dp).val ).valueOf()) {
						(function(){
							try {
								return unwrap(os__mkdir(dp))
							} catch(err) {
								js_throw(err)
							}
						})();
					}
				}
				(function(){
					try {
						return unwrap(os__cp_all(sp, dp, overwrite))
					} catch(err) {
						(function(){
							try {
								return unwrap(os__rmdir(dp))
							} catch(err) {
								throw new ReturnException(new Option({ state:  new byte(2),err: err}))
								;
							}
						})();
						throw new ReturnException(new Option({ state:  new byte(2),err: err}))
						;
					}
				})();
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return {state: new int(0)}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} source
 * @param {string} target
 * @returns {void}
*/
function os__mv_by_cp(source, target) {
	try {
		(function(){
			try {
				return unwrap(os__cp(source, target))
			} catch(err) {
				js_throw(err)
			}
		})();
		(function(){
			try {
				return unwrap(os__rm(source))
			} catch(err) {
				js_throw(err)
			}
		})();
		return {state: new int(0)}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [manualfree] */
/**
 * @function
 * @param {string} path
 * @returns {Array_string}
*/
function os__read_lines(path) {
	try {
		/** @type {string} */
		const buf = new string((function(){
			try {
				return unwrap(os__read_file(path))
			} catch(err) {
				js_throw(err)
			}
		})());
		/** @type {Array_string} */
		const res = string_split_into_lines(buf,);
		string_free(buf,);
		const _tmp54 = new Option({});
		_tmp54.state = new byte(0);_tmp54.data = res
		return _tmp54;} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} si
 * @returns {string}
*/
function os__sigint_to_signal_name(si) {
	try {
		
		if (vEq(si,new int(1))) {
			return new string("SIGHUP");
		}
		else if (vEq(si,new int(2))) {
			return new string("SIGINT");
		}
		else if (vEq(si,new int(3))) {
			return new string("SIGQUIT");
		}
		else if (vEq(si,new int(4))) {
			return new string("SIGILL");
		}
		else if (vEq(si,new int(6))) {
			return new string("SIGABRT");
		}
		else if (vEq(si,new int(8))) {
			return new string("SIGFPE");
		}
		else if (vEq(si,new int(9))) {
			return new string("SIGKILL");
		}
		else if (vEq(si,new int(11))) {
			return new string("SIGSEGV");
		}
		else if (vEq(si,new int(13))) {
			return new string("SIGPIPE");
		}
		else if (vEq(si,new int(14))) {
			return new string("SIGALRM");
		}
		else if (vEq(si,new int(15))) {
			return new string("SIGTERM");
		}
		else {
		};
		if (($process.platform == "linux"))
		{
		
		if (vEq(si,new int(10))) {
			return new string("SIGUSR1");
		}
		else if (vEq(si,new int(12))) {
			return new string("SIGUSR2");
		}
		else if (vEq(si,new int(17))) {
			return new string("SIGCHLD");
		}
		else if (vEq(si,new int(18))) {
			return new string("SIGCONT");
		}
		else if (vEq(si,new int(19))) {
			return new string("SIGSTOP");
		}
		else if (vEq(si,new int(20))) {
			return new string("SIGTSTP");
		}
		else if (vEq(si,new int(21))) {
			return new string("SIGTTIN");
		}
		else if (vEq(si,new int(22))) {
			return new string("SIGTTOU");
		}
		else if (vEq(si,new int(5))) {
			return new string("SIGTRAP");
		}
		else if (vEq(si,new int(7))) {
			return new string("SIGBUS");
		}
		else {
		};
		}
		return new string("unknown");
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} path
 * @returns {void}
*/
function os__rmdir_all(path) {
	try {
		/** @type {string} */
		let ret_err = new string(new string(""));
		/** @type {Array_string} */
		const items = (function(){
			try {
				return unwrap(os__ls(path))
			} catch(err) {
				js_throw(err)
			}
		})();
		for (const item of items) {
			try { 
				/** @type {string} */
				const fullpath = new string(os__join_path_single(path, item));
				if ((new bool( os__is_dir(fullpath).valueOf() && !os__is_link(fullpath).val .valueOf())).valueOf()) {
					(function(){
						try {
							return unwrap(os__rmdir_all(fullpath))
						} catch(err) {
							/** @type {string} */
							ret_err = new string(err.msg());
						}
					})();
				} else {
					(function(){
						try {
							return unwrap(os__rm(fullpath))
						} catch(err) {
							/** @type {string} */
							ret_err = new string(err.msg());
						}
					})();
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		(function(){
			try {
				return unwrap(os__rmdir(path))
			} catch(err) {
				/** @type {string} */
				ret_err = new string(err.msg());
			}
		})();
		if ((new bool(ret_err.len.valueOf() > new int(0).valueOf())).valueOf()) {
			return new Option({ state:  new byte(2),err: error(ret_err)});
		}
		return {state: new int(0)}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [manualfree] */
/**
 * @function
 * @param {string} path
 * @returns {bool}
*/
function os__is_dir_empty(path) {
	try {
		/** @type {Array_string} */
		const items = (function(){
			try {
				return unwrap(os__ls(path))
			} catch(err) {
				throw new ReturnException(new bool(true))
				;
			}
		})();
		/** @type {bool} */
		const res = new bool(new bool(items.len.valueOf() == new int(0).valueOf()));
		array_free(items,);
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} path
 * @returns {string}
*/
function os__file_ext(path) {
	try {
		/** @type {int} */
		const pos = new int((function(){
			try {
				return unwrap(string_last_index(path,new string(".")))
			} catch(err) {
				throw new ReturnException(new string(""))
				;
			}
		})());
		return string_slice(path,pos, path.len);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} opath
 * @returns {string}
*/
function os__dir(opath) {
	try {
		if ((new bool(opath.valueOf() == new string("").valueOf())).valueOf()) {
			return new string(".");
		}
		/** @type {string} */
		const path = new string(string_replace_each(opath,new array(new array_buffer({arr: [new string(new string("/")), new string(os__path_separator), new string(new string((function() { let s = String(); 
			s += String.fromCharCode(92);
			return s; })()
			)), new string(os__path_separator)], len: new int(4), cap: new int(4)}))));
		/** @type {int} */
		const pos = new int((function(){
			try {
				return unwrap(string_last_index(path,os__path_separator))
			} catch(err) {
				throw new ReturnException(new string("."))
				;
			}
		})());
		if ((new bool( new bool(pos.valueOf() == new int(0).valueOf()).valueOf() && new bool(os__path_separator.valueOf() == new string("/").valueOf()).valueOf())).valueOf()) {
			return new string("/");
		}
		return string_slice(path,new int(0), pos);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} opath
 * @returns {string}
*/
function os__base(opath) {
	try {
		if ((new bool(opath.valueOf() == new string("").valueOf())).valueOf()) {
			return new string(".");
		}
		/** @type {string} */
		const path = new string(string_replace_each(opath,new array(new array_buffer({arr: [new string(new string("/")), new string(os__path_separator), new string(new string((function() { let s = String(); 
			s += String.fromCharCode(92);
			return s; })()
			)), new string(os__path_separator)], len: new int(4), cap: new int(4)}))));
		if ((new bool(path.valueOf() == os__path_separator.valueOf())).valueOf()) {
			return os__path_separator;
		}
		if ((string_ends_with(path,os__path_separator)).valueOf()) {
			/** @type {string} */
			const path2 = new string(string_slice(path,new int(0), new int( path.len.valueOf() - new int(1).valueOf())));
			/** @type {int} */
			const pos = new int((function(){
				try {
					return unwrap(string_last_index(path2,os__path_separator))
				} catch(err) {
					throw new ReturnException(string_clone(path2,))
					;
				}
			})());
			return string_slice(path2,new int( pos.valueOf() + new int(1).valueOf()), path2.len);
		}
		/** @type {int} */
		const pos = new int((function(){
			try {
				return unwrap(string_last_index(path,os__path_separator))
			} catch(err) {
				throw new ReturnException(string_clone(path,))
				;
			}
		})());
		return string_slice(path,new int( pos.valueOf() + new int(1).valueOf()), path.len);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} opath
 * @returns {string}
*/
function os__file_name(opath) {
	try {
		/** @type {string} */
		const path = new string(string_replace_each(opath,new array(new array_buffer({arr: [new string(new string("/")), new string(os__path_separator), new string(new string((function() { let s = String(); 
			s += String.fromCharCode(92);
			return s; })()
			)), new string(os__path_separator)], len: new int(4), cap: new int(4)}))));
		return string_all_after_last(path,os__path_separator);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} prompt
 * @returns {string}
*/
function os__input_opt(prompt) {
	try {
		builtin__print (prompt);
		os__flush();
		/** @type {string} */
		const res = new string(os__get_raw_line());
		if ((new bool(res.len.valueOf() > new int(0).valueOf())).valueOf()) {
			const _tmp55 = new Option({});
			_tmp55.state = new byte(0);_tmp55.data = string_trim_right(res,new string("\r\n"))
			return _tmp55;}
		return new Option({ state:  new byte(2),err: none__});
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} prompt
 * @returns {string}
*/
function os__input(prompt) {
	try {
		/** @type {string} */
		const res = new string((function(){
			try {
				return unwrap(os__input_opt(prompt))
			} catch(err) {
				throw new ReturnException(new string("<EOF>"))
				;
			}
		})());
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function os__get_line() {
	try {
		/** @type {string} */
		const str = new string(os__get_raw_line());
		if (($process.platform == "windows"))
		{
		return string_trim_right(str,new string("\r\n"));
		}
		return string_trim_right(str,new string("\n"));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {Array_string}
*/
function os__get_lines() {
	try {
		/** @type {string} */
		let line = new string(new string(""));
		/** @type {Array_string} */
		let inputstr = new array(new array_buffer({arr: [], len: new int(0), cap: new int(0)}));
		while (true) {
			try { 
				/** @type {string} */
				line = new string(os__get_line());
				if ((new bool(line.len.valueOf() <= new int(0).valueOf())).valueOf()) {
					break;
				}
				/** @type {string} */
				line = new string(string_trim_space(line,));
				array_push(inputstr,line,false);
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return inputstr;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function os__get_lines_joined() {
	try {
		/** @type {string} */
		let line = new string(new string(""));
		/** @type {string} */
		let inputstr = new string(new string(""));
		while (true) {
			try { 
				/** @type {string} */
				line = new string(os__get_line());
				if ((new bool(line.len.valueOf() <= new int(0).valueOf())).valueOf()) {
					break;
				}
				/** @type {string} */
				line = new string(string_trim_space(line,));
				/** @type {string} */
				inputstr.str = inputstr + new string(line);
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return inputstr;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function os__get_raw_lines_joined() {
	try {
		/** @type {string} */
		let line = new string(new string(""));
		/** @type {Array_string} */
		let lines = new array(new array_buffer({arr: [], len: new int(0), cap: new int(0)}));
		while (true) {
			try { 
				/** @type {string} */
				line = new string(os__get_raw_line());
				if ((new bool(line.len.valueOf() <= new int(0).valueOf())).valueOf()) {
					break;
				}
				array_push(lines,line,false);
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		/** @type {string} */
		const res = new string(Array_string_join(lines,new string("")));
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function os__user_os() {
	try {
		if (($process.platform == "linux"))
		{
		return new string("linux");
		}
		if (($process.platform == "darwin"))
		{
		return new string("macos");
		}
		if (($process.platform == "windows"))
		{
		return new string("windows");
		}
		if (($process.platform == "freebsd"))
		{
		return new string("freebsd");
		}
		if (($process.platform == "openbsd"))
		{
		return new string("openbsd");
		}
		if (true)
		{
		return new string("netbsd");
		}
		if (true)
		{
		return new string("dragonfly");
		}
		if (($process.platform == "android"))
		{
		return new string("android");
		}
		if (($process.platform == "sunos"))
		{
		return new string("solaris");
		}
		if (true)
		{
		return new string("haiku");
		}
		if (true)
		{
		return new string("serenity");
		}
		if (true)
		{
		return new string("vinix");
		}
		return new string("unknown");
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function os__pure_v_but_overriden_by_js_home_dir() {
	try {
		if (($process.platform == "windows"))
		{
		return os__getenv(new string("USERPROFILE"));
		}
		else
		{
		return os__getenv(new string("HOME"));
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} path
 * @returns {string}
*/
function os__expand_tilde_to_home(path) {
	try {
		if ((new bool(path.valueOf() == new string("~").valueOf())).valueOf()) {
			return string_trim_right(os__home_dir(),os__path_separator);
		}
		if ((string_starts_with(path,new string( new string("~").valueOf() + os__path_separator.valueOf()))).valueOf()) {
			return string_replace_once(path,new string( new string("~").valueOf() + os__path_separator.valueOf()), new string( string_trim_right(os__home_dir(),os__path_separator).valueOf() + os__path_separator.valueOf()));
		}
		return path;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} path
 * @param {string} text
 * @returns {void}
*/
function os__write_file(path, text) {
	try {
		/** @type {os__File} */
		let f = (function(){
			try {
				return unwrap(os__create(path))
			} catch(err) {
				js_throw(err)
			}
		})();
		(function(){
			try {
				return unwrap(os__File_write_full_buffer(f,text.str, new usize(text.len)))
			} catch(err) {
				js_throw(err)
			}
		})();
		os__File_close(f,);
		return {state: new int(0)}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function os__executable_fallback() {
	try {
		if ((new bool(os__args.len.valueOf() == new int(0).valueOf())).valueOf()) {
			return new string("");
		}
		/** @type {string} */
		let exepath = new string(os__args.arr.get(new int(new int(0).valueOf())));
		if (($process.platform == "windows"))
		{
		if ((!string_contains(exepath,new string(".exe")).val ).valueOf()) {
			/** @type {string} */
			exepath.str = exepath + new string(new string(".exe"));
		}
		}
		if ((!os__is_abs_path(exepath).val ).valueOf()) {
			/** @type {string} */
			const rexepath = new string(string_replace_each(exepath,new array(new array_buffer({arr: [new string(new string("/")), new string(os__path_separator), new string(new string((function() { let s = String(); 
				s += String.fromCharCode(92);
				return s; })()
				)), new string(os__path_separator)], len: new int(4), cap: new int(4)}))));
			if ((string_contains(rexepath,os__path_separator)).valueOf()) {
				/** @type {string} */
				exepath = new string(os__join_path_single(os__wd_at_startup, exepath));
			} else {
				/** @type {string} */
				const foundpath = new string((function(){
					try {
						return unwrap(os__find_abs_path_of_executable(exepath))
					} catch(err) {
						new string("");
					}
				})());
				if ((new bool(foundpath.len.valueOf() > new int(0).valueOf())).valueOf()) {
					/** @type {string} */
					exepath = new string(foundpath);
				}
			}
		}
		/** @type {string} */
		exepath = new string(os__real_path(exepath));
		return exepath;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @constructor
 * @param {{}} init
*/
function os__ExecutableNotFoundError({  }) {
};
os__ExecutableNotFoundError.prototype = {
	...Error.prototype,
	toString() {
		return `os__ExecutableNotFoundError {}`
	},
	$toJS() { return this; }
	};

/**
 * @function
 * @returns {string}
*/
function os__ExecutableNotFoundError_msg(err) {
	try {
		return new string("os: failed to find executable");
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {IError}
*/
function os__error_failed_to_find_executable() {
	try {
		return new IError(new $ref(new os__ExecutableNotFoundError({})));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} exepath
 * @returns {string}
*/
function os__find_abs_path_of_executable(exepath) {
	try {
		if ((new bool(exepath.valueOf() == new string("").valueOf())).valueOf()) {
			return new Option({ state:  new byte(2),err: error(new string("expected non empty `exepath`"))});
		}
		if ((os__is_abs_path(exepath)).valueOf()) {
			const _tmp56 = new Option({});
			_tmp56.state = new byte(0);_tmp56.data = os__real_path(exepath)
			return _tmp56;}
		/** @type {string} */
		let res = new string(new string(""));
		/** @type {string} */
		const path = new string(os__getenv(new string("PATH")));
		/** @type {Array_string} */
		const paths = string_split(path,os__path_delimiter);
		for (const p of paths) {
			try { 
				/** @type {string} */
				const found_abs_path = new string(os__join_path_single(p, exepath));
				if ((new bool( os__exists(found_abs_path).valueOf() && os__is_executable(found_abs_path).valueOf())).valueOf()) {
					/** @type {string} */
					res = new string(found_abs_path);
					break;
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		if ((new bool(res.len.valueOf() > new int(0).valueOf())).valueOf()) {
			const _tmp57 = new Option({});
			_tmp57.state = new byte(0);_tmp57.data = os__real_path(res)
			return _tmp57;}
		return new Option({ state:  new byte(2),err: os__error_failed_to_find_executable()});
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} prog
 * @returns {bool}
*/
function os__exists_in_system_path(prog) {
	try {
		(function(){
			try {
				return unwrap(os__find_abs_path_of_executable(prog))
			} catch(err) {
				throw new ReturnException(new bool(false))
				;
			}
		})();
		return new bool(true);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} path
 * @returns {bool}
*/
function os__is_file(path) {
	try {
		return new bool( os__exists(path).valueOf() && !os__is_dir(path).val .valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} path
 * @returns {bool}
*/
function os__is_abs_path(path) {
	try {
		if ((new bool(path.len.valueOf() == new int(0).valueOf())).valueOf()) {
			return new bool(false);
		}
		if (($process.platform == "windows"))
		{
		return new bool( new bool(new byte(path.str.charCodeAt(new int(0))).valueOf() == new byte('/').valueOf()).valueOf() || (new bool( new bool( byte_is_letter(new byte(path.str.charCodeAt(new int(0))),).valueOf() && new bool(path.len.valueOf() > new int(1).valueOf()).valueOf()).valueOf() && new bool(new byte(path.str.charCodeAt(new int(1))).valueOf() == new byte(':').valueOf()).valueOf())).valueOf());
		}
		return new bool(new byte(path.str.charCodeAt(new int(0))).valueOf() == new byte('/').valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [manualfree] */
/**
 * @function
 * @param {string} base
 * @param {...Array_string} dirs
 * @returns {string}
*/
function os__pure_v_but_overriden_by_js_join_path(base, ...dirs) {
dirs = new array(new array_buffer({arr: dirs,len: new int(dirs.length),index_start: new int(0)}));
	try {
		/** @type {strings__Builder} */
		let sb = strings__new_builder(new int( base.len.valueOf() + new int( dirs.len.valueOf() * new int(50).valueOf()).valueOf()));
		/** @type {string} */
		const sbase = new string(string_trim_right(base,new string("\\/")));
		strings__Builder_write_string(sb,sbase);
		for (const d of dirs) {
			try { 
				strings__Builder_write_string(sb,os__path_separator);
				strings__Builder_write_string(sb,d);
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		(function defer() {
		array_free(sb,);
		string_free(sbase,);
		})();
		return strings__Builder_str(new $ref(sb));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [manualfree] */
/**
 * @function
 * @param {string} base
 * @param {string} elem
 * @returns {string}
*/
function os__pure_v_but_overriden_by_js_join_path_single(base, elem) {
	try {
		/** @type {strings__Builder} */
		let sb = strings__new_builder(new int( new int( base.len.valueOf() + elem.len.valueOf()).valueOf() + new int(1).valueOf()));
		/** @type {string} */
		const sbase = new string(string_trim_right(base,new string("\\/")));
		strings__Builder_write_string(sb,sbase);
		strings__Builder_write_string(sb,os__path_separator);
		strings__Builder_write_string(sb,elem);
		(function defer() {
		array_free(sb,);
		string_free(sbase,);
		})();
		return strings__Builder_str(new $ref(sb));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} path
 * @param {string} ext
 * @returns {Array_string}
*/
function os__walk_ext(path, ext) {
	try {
		/** @type {Array_string} */
		let res = new array(new array_buffer({arr: [], len: new int(0), cap: new int(0)}));
		os__impl_walk_ext(path, ext, res);
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} path
 * @param {string} ext
 * @param {Array_string} out
 * @returns {void}
*/
function os__impl_walk_ext(path, ext, out) {
out = new $ref(out)
	try {
		if ((!os__is_dir(path).val ).valueOf()) {
			return;
		}
		/** @type {Array_string} */
		let files = (function(){
			try {
				return unwrap(os__ls(path))
			} catch(err) {
				throw new ReturnException(undefined);
			}
		})();
		/** @type {string} */
		const separator = new string(((string_ends_with(path,os__path_separator)).valueOf() ? new string("") : os__path_separator));
		for (const file of files) {
			try { 
				if ((string_starts_with(file,new string("."))).valueOf()) {
					continue;
				}
				/** @type {string} */
				const p = new string(new string( new string( path.valueOf() + separator.valueOf()).valueOf() + file.valueOf()));
				if ((new bool( os__is_dir(p).valueOf() && !os__is_link(p).val .valueOf())).valueOf()) {
					os__impl_walk_ext(p, ext, out);
				} else if ((string_ends_with(file,ext)).valueOf()) {
					array_push(out.valueOf(),p,false);
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} path
 * @param {anon_fn_string} f
 * @returns {void}
*/
function os__walk(path, f) {
	try {
		if ((new bool(path.len.valueOf() == new int(0).valueOf())).valueOf()) {
			return;
		}
		if ((!os__is_dir(path).val ).valueOf()) {
			return;
		}
		/** @type {Array_string} */
		let files = (function(){
			try {
				return unwrap(os__ls(path))
			} catch(err) {
				throw new ReturnException(undefined);
			}
		})();
		/** @type {string} */
		let local_path_separator = new string(os__path_separator);
		if ((string_ends_with(path,os__path_separator)).valueOf()) {
			/** @type {string} */
			local_path_separator = new string(new string(""));
		}
		for (const file of files) {
			try { 
				/** @type {string} */
				const p = new string(new string( new string( path.valueOf() + local_path_separator.valueOf()).valueOf() + file.valueOf()));
				if ((new bool( os__is_dir(p).valueOf() && !os__is_link(p).val .valueOf())).valueOf()) {
					os__walk(p, f);
				} else if ((os__exists(p)).valueOf()) {
					f(p);
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} path
 * @param {voidptr} context
 * @param {os__FnWalkContextCB} fcb
 * @returns {void}
*/
function os__walk_with_context(path, context, fcb) {
	try {
		if ((new bool(path.len.valueOf() == new int(0).valueOf())).valueOf()) {
			return;
		}
		if ((!os__is_dir(path).val ).valueOf()) {
			return;
		}
		/** @type {Array_string} */
		let files = (function(){
			try {
				return unwrap(os__ls(path))
			} catch(err) {
				throw new ReturnException(undefined);
			}
		})();
		/** @type {string} */
		let local_path_separator = new string(os__path_separator);
		if ((string_ends_with(path,os__path_separator)).valueOf()) {
			/** @type {string} */
			local_path_separator = new string(new string(""));
		}
		for (const file of files) {
			try { 
				/** @type {string} */
				const p = new string(new string( new string( path.valueOf() + local_path_separator.valueOf()).valueOf() + file.valueOf()));
				if ((new bool( os__is_dir(p).valueOf() && !os__is_link(p).val .valueOf())).valueOf()) {
					os__walk_with_context(p, context, fcb);
				} else {
					fcb(context, p);
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} s
 * @returns {void}
*/
function os__log(s) {
	try {
		builtin__println (new string( new string("os.log: ").valueOf() + s.valueOf()));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} opath
 * @returns {void}
*/
function os__mkdir_all(opath) {
	try {
		/** @type {string} */
		const path = new string(string_replace(opath,new string("/"), os__path_separator));
		/** @type {string} */
		let p = new string(((string_starts_with(path,os__path_separator)).valueOf() ? os__path_separator : new string("")));
		/** @type {Array_string} */
		const path_parts = string_split(string_trim_left(path,os__path_separator),os__path_separator);
		for (const subdir of path_parts) {
			try { 
				/** @type {string} */
				p.str = p + new string(new string( subdir.valueOf() + os__path_separator.valueOf()));
				if ((new bool( os__exists(p).valueOf() && os__is_dir(p).valueOf())).valueOf()) {
					continue;
				}
				(function(){
					try {
						return unwrap(os__mkdir(p))
					} catch(err) {
						throw new ReturnException(new Option({ state:  new byte(2),err: error(new string(`folder: ${p}, error: ${IError_str(err)}`))}))
						;
					}
				})();
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return {state: new int(0)}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function os__cache_dir() {
	try {
		/** @type {string} */
		const xdg_cache_home = new string(os__getenv(new string("XDG_CACHE_HOME")));
		if ((new bool(xdg_cache_home.valueOf() != new string("").valueOf())).valueOf()) {
			return xdg_cache_home;
		}
		/** @type {string} */
		const cdir = new string(os__join_path_single(os__home_dir(), new string(".cache")));
		if ((new bool( !os__is_dir(cdir).val .valueOf() && !os__is_link(cdir).val .valueOf())).valueOf()) {
			(function(){
				try {
					return unwrap(os__mkdir(cdir))
				} catch(err) {
					builtin__panic (IError_str(err));
				}
			})();
		}
		return cdir;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function os__pure_v_but_overriden_by_js_temp_dir() {
	try {
		/** @type {string} */
		let path = new string(os__getenv(new string("TMPDIR")));
		if (($process.platform == "windows"))
		{
		if ((new bool(path.valueOf() == new string("").valueOf())).valueOf()) {
			/** @type {string} */
			path = new string(os__getenv(new string("TEMP")));
			if ((new bool(path.valueOf() == new string("").valueOf())).valueOf()) {
				/** @type {string} */
				path = new string(os__getenv(new string("TMP")));
			}
			if ((new bool(path.valueOf() == new string("").valueOf())).valueOf()) {
				/** @type {string} */
				path = new string(new string("C:/tmp"));
			}
		}
		}
		if (($process.platform == "darwin"))
		{
		return new string("/tmp");
		}
		if (($process.platform == "android"))
		{
		if ((new bool(path.valueOf() == new string("").valueOf())).valueOf()) {
			/** @type {string} */
			path = new string(os__cache_dir());
		}
		}
		if ((new bool(path.valueOf() == new string("").valueOf())).valueOf()) {
			/** @type {string} */
			path = new string(new string("/tmp"));
		}
		return path;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function os__default_vmodules_path() {
	try {
		/** @type {string} */
		const hdir = new string(os__home_dir());
		/** @type {string} */
		const res = new string(os__join_path_single(hdir, new string(".vmodules")));
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function os__vmodules_dir() {
	try {
		/** @type {Array_string} */
		const paths = os__vmodules_paths();
		if ((new bool(paths.len.valueOf() > new int(0).valueOf())).valueOf()) {
			return paths.arr.get(new int(new int(0).valueOf()));
		}
		return os__default_vmodules_path();
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {Array_string}
*/
function os__vmodules_paths() {
	try {
		/** @type {string} */
		let path = new string(os__getenv(new string("VMODULES")));
		if ((new bool(path.valueOf() == new string("").valueOf())).valueOf()) {
			/** @type {string} */
			path = new string(os__default_vmodules_path());
		}
		/** @type {Array_string} */
		const splitted = string_split(path,os__path_delimiter);
		/** @type {Array_string} */
		let list = new array(new array_buffer({arr: [], len: new int(0), cap: new int(0)}));
		for (let i = new int(0); i < splitted.len; i = new int(i + 1)) {
			try { 
				/** @type {string} */
				const si = new string(splitted.arr.get(new int(i.valueOf())));
				/** @type {string} */
				const trimmed = new string(string_trim_right(si,os__path_separator));
				array_push(list,trimmed,false);
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		(function defer() {
		})();
		return list;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [manualfree] */
/**
 * @function
 * @param {string} path
 * @returns {string}
*/
function os__resource_abs_path(path) {
	try {
		/** @type {string} */
		const exe = new string(os__executable());
		/** @type {string} */
		const dexe = new string(os__dir(exe));
		/** @type {string} */
		let base_path = new string(os__real_path(dexe));
		/** @type {string} */
		const vresource = new string(os__getenv(new string("V_RESOURCE_PATH")));
		if ((new bool(vresource.len.valueOf() != new int(0).valueOf())).valueOf()) {
			string_free(base_path,);
			/** @type {string} */
			base_path = new string(vresource);
		}
		/** @type {string} */
		const fp = new string(os__join_path_single(base_path, path));
		/** @type {string} */
		const res = new string(os__real_path(fp));
		{
			string_free(fp,);
			string_free(vresource,);
			string_free(base_path,);
			string_free(dexe,);
			string_free(exe,);
		}
		
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @constructor
 * @param {{sysname?: string, nodename?: string, release?: string, version?: string, machine?: string}} init
*/
function os__Uname({ sysname = new string(""), nodename = new string(""), release = new string(""), version = new string(""), machine = new string("") }) {
	this.sysname = sysname
	this.nodename = nodename
	this.release = release
	this.version = version
	this.machine = machine
};
os__Uname.prototype = {
	toString() {
		return `os__Uname { sysname: "${this["sysname"].toString()}", nodename: "${this["nodename"].toString()}", release: "${this["release"].toString()}", version: "${this["version"].toString()}", machine: "${this["machine"].toString()}"}`
	},
	/** @type {string} */
	sysname: new string(""),
	/** @type {string} */
	nodename: new string(""),
	/** @type {string} */
	release: new string(""),
	/** @type {string} */
	version: new string(""),
	/** @type {string} */
	machine: new string(""),
	$toJS() { return this; }
	};

/**
 * @function
 * @param {string} cmd
 * @returns {os__Result}
*/
function os__execute_or_panic(cmd) {
	try {
		/** @type {os__Result} */
		const res = os__execute(cmd);
		if ((new bool(res.exit_code.valueOf() != new int(0).valueOf())).valueOf()) {
			builtin__eprintln (new string(`failed    cmd: ${cmd}`));
			builtin__eprintln (new string(`failed   code: ${int_str(res.exit_code)}`));
			builtin__panic (res.output);
		}
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} cmd
 * @returns {os__Result}
*/
function os__execute_or_exit(cmd) {
	try {
		/** @type {os__Result} */
		const res = os__execute(cmd);
		if ((new bool(res.exit_code.valueOf() != new int(0).valueOf())).valueOf()) {
			builtin__eprintln (new string(`failed    cmd: ${cmd}`));
			builtin__eprintln (new string(`failed   code: ${int_str(res.exit_code)}`));
			builtin__eprintln (res.output);
			builtin__exit(new int(1));
		}
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} path
 * @returns {string}
*/
function os__quoted_path(path) {
	try {
		if (($process.platform == "windows"))
		{
		return ((string_ends_with(path,os__path_separator)).valueOf() ? new string(`"${new string( path.valueOf() + os__path_separator.valueOf())}"`) : new string(`"${path}"`));
		}
		else
		{
		return new string(`'${path}'`);
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function os__config_dir() {
	try {
		if (($process.platform == "windows"))
		{
		/** @type {string} */
		const app_data = new string(os__getenv(new string("AppData")));
		if ((new bool(app_data.valueOf() != new string("").valueOf())).valueOf()) {
			const _tmp58 = new Option({});
			_tmp58.state = new byte(0);_tmp58.data = app_data
			return _tmp58;}
		}
		else if (($process.platform == "darwin") || ($process.platform == "darwin") || ($process.platform == "darwin"))
		{
		/** @type {string} */
		const home = new string(os__home_dir());
		if ((new bool(home.valueOf() != new string("").valueOf())).valueOf()) {
			const _tmp59 = new Option({});
			_tmp59.state = new byte(0);_tmp59.data = new string( home.valueOf() + new string("/Library/Application Support").valueOf())
			return _tmp59;}
		}
		else
		{
		/** @type {string} */
		const xdg_home = new string(os__getenv(new string("XDG_CONFIG_HOME")));
		if ((new bool(xdg_home.valueOf() != new string("").valueOf())).valueOf()) {
			const _tmp60 = new Option({});
			_tmp60.state = new byte(0);_tmp60.data = xdg_home
			return _tmp60;}
		/** @type {string} */
		const home = new string(os__home_dir());
		if ((new bool(home.valueOf() != new string("").valueOf())).valueOf()) {
			const _tmp61 = new Option({});
			_tmp61.state = new byte(0);_tmp61.data = new string( home.valueOf() + new string("/.config").valueOf())
			return _tmp61;}
		}
		return new Option({ state:  new byte(2),err: error(new string("Cannot find config directory"))});
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace os */
/**
 * @function
 * @param {string} path
 * @returns {bool}
*/
function os__mkdir(path) {
	try {
		if (false)
		{
		if ((new bool(path.valueOf() == new string(".").valueOf())).valueOf()) {
			const _tmp62 = new Option({});
			_tmp62.state = new byte(0);_tmp62.data = new bool(true)
			return _tmp62;}
		$fs.mkdirSync(path.valueOf())
		const _tmp63 = new Option({});
		_tmp63.state = new byte(0);_tmp63.data = new bool(true)
		return _tmp63;}
		else
		{
		const _tmp64 = new Option({});
		_tmp64.state = new byte(0);_tmp64.data = new bool(false)
		return _tmp64;}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} path
 * @returns {bool}
*/
function os__is_dir(path) {
	try {
		/** @type {bool} */
		const res = new bool(new bool(false));
		if (false)
		{
		res.val = $fs.existsSync(path,str) && $fs.lstatSync(path.str).isDirectory()
		}
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} path
 * @returns {bool}
*/
function os__is_link(path) {
	try {
		/** @type {bool} */
		const res = new bool(new bool(false));
		if (false)
		{
		res.val = $fs.existsSync(path.str) && $fs.lstatSync(path.str).isSymbolicLink()
		}
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} path
 * @returns {bool}
*/
function os__exists(path) {
	try {
		/** @type {bool} */
		const res = new bool(new bool(false));
		if (false)
		{
		res.val = $fs.existsSync(path.str)
		}
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} path
 * @returns {Array_string}
*/
function os__ls(path) {
	try {
		if ((!os__is_dir(path).val ).valueOf()) {
			return new Option({ state:  new byte(2),err: error(new string(`ls(): cannot open dir ${os__dir_str()}`))});
		}
		/** @type {Array_string} */
		const result = new array(new array_buffer({arr: [], len: new int(0), cap: new int(0)}));
		if (false)
		{
		let i = 0
		$fs.readdirSync(path.str).forEach((path) => result.arr[i++] = new string(path))
		}
		const _tmp65 = new Option({});
		_tmp65.state = new byte(0);_tmp65.data = result
		return _tmp65;} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function os__get_raw_line() {
	try {
		return new string("");
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function os__executable() {
	try {
		return new string("");
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} path
 * @returns {bool}
*/
function os__is_executable(path) {
	try {
		builtin__eprintln (new string("TODO: There is no isExecutable on fs.stats"));
		return new bool(false);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} path
 * @returns {void}
*/
function os__rmdir(path) {
	try {
		if (false)
		{
		/** @type {string} */
		const err = new string(new string(""));
		try {
		$fs.rmdirSync(path.str)
		return;
		} catch (e) {
		err.str = 'Failed to remove "' + path.str + '": ' + e.toString()
		}
		return new Option({ state:  new byte(2),err: error(err)});
		}
		return {state: new int(0)}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} path
 * @returns {void}
*/
function os__rm(path) {
	try {
		if (false)
		{
		/** @type {string} */
		const err = new string(new string(""));
		try {
		$fs.rmSync(path.str)
		return;
		} catch (e) {
		err.str = 'Failed to remove "' + path.str + '": ' + e.toString()
		}
		return new Option({ state:  new byte(2),err: error(err)});
		}
		return {state: new int(0)}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} src
 * @param {string} dst
 * @returns {void}
*/
function os__cp(src, dst) {
	try {
		if (false)
		{
		/** @type {string} */
		const err = new string(new string(""));
		try {
		$fs.cpSync(src.str,dst.str);
		return;
		} catch (e) {
		err.str = 'failed to copy ' + src.str + ' to ' + dst.str + ': ' + e.toString();
		}
		return new Option({ state:  new byte(2),err: error(err)});
		}
		return {state: new int(0)}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} s
 * @returns {string}
*/
function os__read_file(s) {
	try {
		/** @type {string} */
		let err = new string(new string(""));
		/** @type {string} */
		err = new string(err);
		/** @type {string} */
		const res = new string(new string(""));
		try {
		res.str = $fs.readFileSync(s.str).toString()
		} catch (e) {
		err.str = 'Failed to read file: ' + e.toString()
		return error(err)
		}
		const _tmp66 = new Option({});
		_tmp66.state = new byte(0);_tmp66.data = res
		return _tmp66;} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function os__getwd() {
	try {
		/** @type {string} */
		const res = new string(new string(""));
		res.str = $process.cwd()
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {int}
*/
function os__getuid() {
	try {
		/** @type {int} */
		const res = new int(new int(0));
		if (process.getuid) res.val = process.getuid();
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} cmd
 * @param {Array_string} args
 * @returns {void}
*/
function os__execvp(cmd, args) {
	try {
		builtin__panic (new string("os.execvp() is not available on JS backend"));
		return {state: new int(0)}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function os__stdin_resume() {
	try {
		$process.stdin.resume();
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} path
 * @returns {bool}
*/
function os__is_readable(path) {
	try {
		if (false)
		{
		/** @type {bool} */
		const res = new bool(new bool(false));
		try { res.val = $fs.accessSync(path.str,$fs.constants.R_OK); } catch { res.val = false; }
		return res;
		}
		else
		{
		return new bool(false);
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace os */
if (false)
{
const $child_process = require('child_process')
}
/**
 * @function
 * @param {string} filename
 * @returns {os__Process}
*/
function os__new_process(filename) {
	try {
		return new $ref((function() {
			let _tmp67 = new os__Process({});
			_tmp67.filename = filename;
			_tmp67.stdio_fd = new array(new array_buffer({arr: [new int(new int(-1)), new int(new int(-1)), new int(new int(-1))], len: new int(3), cap: new int(3)}));
			return _tmp67;
		})()
		);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function os__Process_spawn_internal(p) {
p = new $ref(p)
	try {
		p.val.pid = $child_process.spawn(
		p.val.filename+'',
		p.val.args.arr.map((x) => x.valueOf() + ''),
		{
		env: (p.val.env_is_custom ? p.val.env : $process.env),
		})
		p.val.pid.on('error', function (err) { builtin.panic('Failed to start subprocess') })
		/** @type {os__ProcessState} */
		p.val.status = os__ProcessState.running;
		if ((p.val.use_stdio_ctl).valueOf()) {
			p.val.pid.stdout.pipe(process.stdout)
			p.val.pid.stdin.pipe(process.stdin)
			p.val.pid.stderr.pipe(process.stderr)
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function os__Process_run(p) {
p = new $ref(p)
	try {
		if ((new bool(p.val.status.valueOf() != os__ProcessState.not_started.valueOf())).valueOf()) {
			return;
		}
		os__Process_spawn_internal(p.valueOf(),);
		return;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function os__Process_signal_kill(p) {
p = new $ref(p)
	try {
		if ((!(Array_os__ProcessState_contains(new array(new array_buffer({arr: [os__ProcessState.running, os__ProcessState.stopped], len: new int(2), cap: new int(2)})),p.val.status).valueOf())).valueOf()) {
			return;
		}
		p.val.pid.kill('SIGKILL');
		/** @type {os__ProcessState} */
		p.val.status = os__ProcessState.aborted;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function os__Process_signal_stop(p) {
p = new $ref(p)
	try {
		if ((!(Array_os__ProcessState_contains(new array(new array_buffer({arr: [os__ProcessState.running, os__ProcessState.stopped], len: new int(2), cap: new int(2)})),p.val.status).valueOf())).valueOf()) {
			return;
		}
		p.val.pid.kill('SIGSTOP');
		/** @type {os__ProcessState} */
		p.val.status = os__ProcessState.aborted;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function os__Process_signal_continue(p) {
p = new $ref(p)
	try {
		if ((new bool(p.val.status.valueOf() != os__ProcessState.stopped.valueOf())).valueOf()) {
			return;
		}
		p.val.pid.kill('SIGCONT');
		/** @type {os__ProcessState} */
		p.val.status = os__ProcessState.running;
		return;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function os__Process_wait(p) {
p = new $ref(p)
	try {
		if ((new bool(p.val.status.valueOf() == os__ProcessState.not_started.valueOf())).valueOf()) {
			os__Process_spawn_internal(p.valueOf(),);
		}
		if ((!(Array_os__ProcessState_contains(new array(new array_buffer({arr: [os__ProcessState.running, os__ProcessState.stopped], len: new int(2), cap: new int(2)})),p.val.status).valueOf())).valueOf()) {
			return;
		}
		os__Process_wait_internal(p.valueOf(),);
		return;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function os__Process_wait_internal(p) {
p = new $ref(p)
	try {
		p.val.pid.on('exit', function (code) { console.log(code) })
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function os__Process_set_redirect_stdio(p) {
p = new $ref(p)
	try {
		/** @type {bool} */
		p.val.use_stdio_ctl = new bool(new bool(true));
		return;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} s
 * @returns {void}
*/
function os__Process_stdin_write(p, s) {
p = new $ref(p)
	try {
		os__Process_check_redirection_call(p.valueOf(),new string("stdin_write"));
		p.val.pid.stdin.write(s)
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function os__Process_stdin_resume(p) {
p = new $ref(p)
	try {
		p.val.pid.stdin.resume()
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function os__Process_stdout_slurp(p) {
p = new $ref(p)
	try {
		os__Process_check_redirection_call(p.valueOf(),new string("stdout_slurp"));
		/** @type {string} */
		let res = new string(new string(""));
		p.val.pid.stdout.on('data', function (data) { res = new string(data) })
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} fn_name
 * @returns {void}
*/
function os__Process_check_redirection_call(p, fn_name) {
p = new $ref(p)
	try {
		if ((!p.val.use_stdio_ctl.val ).valueOf()) {
			builtin__panic (new string(`Call p.set_redirect_stdio() before calling p.${fn_name}`));
		}
		if ((new bool(p.val.status.valueOf() == os__ProcessState.not_started.valueOf())).valueOf()) {
			builtin__panic (new string(`Call p.${fn_name}() after you have called p.run()`));
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function os__Process_close(p) {
p = new $ref(p)
	try {
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace os */
/** @enum {number} */
const os__ProcessState = {
	not_started: 0,
	running: 1,
	stopped: 2,
	exited: 3,
	aborted: 4,
	closed: 5,
};

/* [heap] */
/**
 * @constructor
 * @param {{filename?: string, pid?: int, code?: int, status?: os__ProcessState, err?: string, args?: Array_string, env_is_custom?: bool, env?: Array_string, use_stdio_ctl?: bool, use_pgroup?: bool, stdio_fd?: Array_fixed_int_3, wdata?: voidptr}} init
*/
function os__Process({ filename = new string(""), pid = new int(0), code = new int(-1), status = os__ProcessState.not_started, err = new string(""), args = empty_array(), env_is_custom = new bool(false), env = empty_array(), use_stdio_ctl = new bool(false), use_pgroup = new bool(false), stdio_fd = undefined, wdata = new voidptr(null) }) {
	this.filename = filename
	this.pid = pid
	this.code = code
	this.status = status
	this.err = err
	this.args = args
	this.env_is_custom = env_is_custom
	this.env = env
	this.use_stdio_ctl = use_stdio_ctl
	this.use_pgroup = use_pgroup
	this.stdio_fd = stdio_fd
	this.wdata = wdata
};
os__Process.prototype = {
	toString() {
		return `os__Process { filename: "${this["filename"].toString()}", pid: ${this["pid"].toString()} , code: ${this["code"].toString()} , status: ${this["status"].toString()} , err: "${this["err"].toString()}", args: ${this["args"].toString()} , env_is_custom: ${this["env_is_custom"].toString()} , env: ${this["env"].toString()} , use_stdio_ctl: ${this["use_stdio_ctl"].toString()} , use_pgroup: ${this["use_pgroup"].toString()} , stdio_fd: ${this["stdio_fd"].toString()} , wdata: ${this["wdata"].toString()} }`
	},
	/** @type {string} */
	filename: new string(""),
	/** @type {int} */
	pid: new int(0),
	/** @type {int} */
	code: new int(0),
	/** @type {os__ProcessState} */
	status: undefined,
	/** @type {string} */
	err: new string(""),
	/** @type {Array_string} */
	args: empty_array(),
	/** @type {bool} */
	env_is_custom: new bool(false),
	/** @type {Array_string} */
	env: empty_array(),
	/** @type {bool} */
	use_stdio_ctl: new bool(false),
	/** @type {bool} */
	use_pgroup: new bool(false),
	/** @type {Array_fixed_int_3} */
	stdio_fd: undefined,
	/** @type {voidptr} */
	wdata: new voidptr(null),
	$toJS() { return this; }
	};

/**
 * @function
 * @param {string} filename
 * @returns {os__Process}
*/
function os__pure_v_but_overriden_by_js_new_process(filename) {
	try {
		return new $ref((function() {
			let _tmp68 = new os__Process({});
			_tmp68.filename = filename;
			_tmp68.stdio_fd = new array(new array_buffer({arr: [new int(new int(-1)), new int(new int(-1)), new int(new int(-1))], len: new int(3), cap: new int(3)}));
			return _tmp68;
		})()
		);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {Array_string} pargs
 * @returns {void}
*/
function os__Process_set_args(p, pargs) {
p = new $ref(p)
	try {
		if ((new bool(p.val.status.valueOf() != os__ProcessState.not_started.valueOf())).valueOf()) {
			return;
		}
		/** @type {Array_string} */
		p.val.args = pargs;
		return;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {Map_string_string} envs
 * @returns {void}
*/
function os__Process_set_environment(p, envs) {
p = new $ref(p)
	try {
		if ((new bool(p.val.status.valueOf() != os__ProcessState.not_started.valueOf())).valueOf()) {
			return;
		}
		/** @type {bool} */
		p.val.env_is_custom = new bool(new bool(true));
		/** @type {Array_string} */
		p.val.env = new array(new array_buffer({arr: [], len: new int(0), cap: new int(0)}));
		let _tmp69 = envs;
		for (var _tmp70 in _tmp69.map) {
			let v = _tmp69.map[_tmp70];
			let k = _tmp70;
			try { 
				array_push(p.val.env,new string(`${k}=${v}`),false);
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } } 
		}
		
		return;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace os */
/**
 * @function
 * @param {os__Signal} signal
 * @returns {string}
*/
function os__signal_str(signal) {
	try {
		/** @type {string} */
		let result = new string(string_to_upper(os__Signal_str(signal),));
		/** @type {string} */
		result = new string(`SIG${result}`);
		return result;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {String} str
 * @returns {os__Signal}
*/
function os__signal_from_str(str) {
	try {
		/** @type {string} */
		const s = new string(new string(str));
		let _tmp71 = undefined;
		
		if (s.str === new string("SIGHUP").str) {
			_tmp71 = os__Signal.hup;
			
		}
		else if (s.str === new string("SIGINT").str) {
			_tmp71 = os__Signal.int;
			
		}
		else if (s.str === new string("SIGQUIT").str) {
			_tmp71 = os__Signal.quit;
			
		}
		else if (s.str === new string("SIGILL").str) {
			_tmp71 = os__Signal.ill;
			
		}
		else if (s.str === new string("SIGTRAP").str) {
			_tmp71 = os__Signal.trap;
			
		}
		else if (s.str === new string("SIGABRT").str) {
			_tmp71 = os__Signal.abrt;
			
		}
		else if (s.str === new string("SIGBUS").str) {
			_tmp71 = os__Signal.bus;
			
		}
		else if (s.str === new string("SIGFPE").str) {
			_tmp71 = os__Signal.fpe;
			
		}
		else if (s.str === new string("SIGKILL").str) {
			_tmp71 = os__Signal.kill;
			
		}
		else if (s.str === new string("SIGUSR1").str) {
			_tmp71 = os__Signal.usr1;
			
		}
		else if (s.str === new string("SIGSEGV").str) {
			_tmp71 = os__Signal.segv;
			
		}
		else if (s.str === new string("SIGUSR2").str) {
			_tmp71 = os__Signal.usr2;
			
		}
		else if (s.str === new string("SIGPIPE").str) {
			_tmp71 = os__Signal.pipe;
			
		}
		else if (s.str === new string("SIGALRM").str) {
			_tmp71 = os__Signal.alrm;
			
		}
		else if (s.str === new string("SIGTERM").str) {
			_tmp71 = os__Signal.term;
			
		}
		else if (s.str === new string("SIGSTKFLT").str) {
			_tmp71 = os__Signal.stkflt;
			
		}
		else if (s.str === new string("SIGCHLD").str) {
			_tmp71 = os__Signal.chld;
			
		}
		else if (s.str === new string("SIGCONT").str) {
			_tmp71 = os__Signal.cont;
			
		}
		else if (s.str === new string("SIGSTOP").str) {
			_tmp71 = os__Signal.stop;
			
		}
		else if (s.str === new string("SIGTSTP").str) {
			_tmp71 = os__Signal.tstp;
			
		}
		else if (s.str === new string("SIGTTIN").str) {
			_tmp71 = os__Signal.ttin;
			
		}
		else if (s.str === new string("SIGTTOU").str) {
			_tmp71 = os__Signal.ttou;
			
		}
		else if (s.str === new string("SIGURG").str) {
			_tmp71 = os__Signal.urg;
			
		}
		else if (s.str === new string("SIGXCPU").str) {
			_tmp71 = os__Signal.xcpu;
			
		}
		else if (s.str === new string("SIGXFSZ").str) {
			_tmp71 = os__Signal.xfsz;
			
		}
		else if (s.str === new string("SIGVTALRM").str) {
			_tmp71 = os__Signal.vtalrm;
			
		}
		else if (s.str === new string("SIGPROF").str) {
			_tmp71 = os__Signal.prof;
			
		}
		else if (s.str === new string("SIGWINCH").str) {
			_tmp71 = os__Signal.winch;
			
		}
		else if (s.str === new string("SIGPOLL").str) {
			_tmp71 = os__Signal.poll;
			
		}
		else if (s.str === new string("SIGPWR").str) {
			_tmp71 = os__Signal.pwr;
			
		}
		else if (s.str === new string("SIGSYS").str) {
			_tmp71 = os__Signal.sys;
			
		}
		else {
			_tmp71 = builtin__panic (new string(`unknown signal: ${s}`));
			
		}return _tmp71;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {os__Signal} signum
 * @param {os__SignalHandler} handler
 * @returns {os__SignalHandler}
*/
function os__signal_opt(signum, handler) {
	try {
		/** @type {string} */
		const signame = new string(os__signal_str(signum));
		const _tmp72 = signame;
		if (false)
		{
		$process.on(signame.str,function (sig) { handler(os__signal_from_str(sig));});
		const _tmp73 = new Option({});
		_tmp73.state = new byte(0);_tmp73.data = handler
		return _tmp73;}
		else if (true)
		{
		let event = new CustomEvent(signame.str, {detail: signum});
		window.addEventListener(signame.str, function (e) { handler(e.detail); });
		const _tmp74 = new Option({});
		_tmp74.state = new byte(0);_tmp74.data = handler
		return _tmp74;}
		else
		{
		return new Option({ state:  new byte(2),err: error(new string("signal handlers are not supported on bare JS"))});
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace os */
/** @enum {number} */
const os__Signal = {
	hup: 1,
	int: 2,
	quit: 3,
	ill: 4,
	trap: 5,
	abrt: 6,
	bus: 7,
	fpe: 8,
	kill: 9,
	usr1: 10,
	segv: 11,
	usr2: 12,
	pipe: 13,
	alrm: 14,
	term: 15,
	stkflt: 16,
	chld: 17,
	cont: 18,
	stop: 19,
	tstp: 20,
	ttin: 21,
	ttou: 22,
	urg: 23,
	xcpu: 24,
	xfsz: 25,
	vtalrm: 26,
	prof: 27,
	winch: 28,
	poll: 29,
	pwr: 30,
	sys: 31,
};

/** @namespace gx */
/** @constant {gx__Color} */
let gx__black = undefined;
/** @constant {gx__Color} */
let gx__gray = undefined;
/** @constant {gx__Color} */
let gx__white = undefined;
/** @constant {gx__Color} */
let gx__red = undefined;
/** @constant {gx__Color} */
let gx__green = undefined;
/** @constant {gx__Color} */
let gx__blue = undefined;
/** @constant {gx__Color} */
let gx__yellow = undefined;
/** @constant {gx__Color} */
let gx__magenta = undefined;
/** @constant {gx__Color} */
let gx__cyan = undefined;
/** @constant {gx__Color} */
let gx__orange = undefined;
/** @constant {gx__Color} */
let gx__purple = undefined;
/** @constant {gx__Color} */
let gx__indigo = undefined;
/** @constant {gx__Color} */
let gx__pink = undefined;
/** @constant {gx__Color} */
let gx__violet = undefined;
/** @constant {gx__Color} */
let gx__dark_blue = undefined;
/** @constant {gx__Color} */
let gx__dark_gray = undefined;
/** @constant {gx__Color} */
let gx__dark_green = undefined;
/** @constant {gx__Color} */
let gx__dark_red = undefined;
/** @constant {gx__Color} */
let gx__light_blue = undefined;
/** @constant {gx__Color} */
let gx__light_gray = undefined;
/** @constant {gx__Color} */
let gx__light_green = undefined;
/** @constant {gx__Color} */
let gx__light_red = undefined;

/**
 * @constructor
 * @param {{r?: byte, g?: byte, b?: byte, a?: byte}} init
*/
function gx__Color({ r = new byte(0), g = new byte(0), b = new byte(0), a = new int(255) }) {
	this.r = r
	this.g = g
	this.b = b
	this.a = a
};
gx__Color.prototype = {
	toString() {
		return `gx__Color { r: ${this["r"].toString()} , g: ${this["g"].toString()} , b: ${this["b"].toString()} , a: ${this["a"].toString()} }`
	},
	/** @type {byte} */
	r: new byte(0),
	/** @type {byte} */
	g: new byte(0),
	/** @type {byte} */
	b: new byte(0),
	/** @type {byte} */
	a: new byte(0),
	$toJS() { return this; }
	};

/**
 * @function
 * @param {int} color
 * @returns {gx__Color}
*/
function gx__hex(color) {
	try {
		return (function() {
			let _tmp75 = new gx__Color({});
			_tmp75.r = new byte(new int( (new int( color.valueOf() >> new int(24).valueOf())).valueOf() & new int(0xFF).valueOf()));
			_tmp75.g = new byte(new int( (new int( color.valueOf() >> new int(16).valueOf())).valueOf() & new int(0xFF).valueOf()));
			_tmp75.b = new byte(new int( (new int( color.valueOf() >> new int(8).valueOf())).valueOf() & new int(0xFF).valueOf()));
			_tmp75.a = new byte(new int( color.valueOf() & new int(0xFF).valueOf()));
			return _tmp75;
		})()
		;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {byte} r
 * @param {byte} g
 * @param {byte} b
 * @returns {gx__Color}
*/
function gx__rgb(r, g, b) {
	try {
		return (function() {
			let _tmp76 = new gx__Color({});
			_tmp76.r = r;
			_tmp76.g = g;
			_tmp76.b = b;
			return _tmp76;
		})()
		;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {byte} r
 * @param {byte} g
 * @param {byte} b
 * @param {byte} a
 * @returns {gx__Color}
*/
function gx__rgba(r, g, b, a) {
	try {
		return (function() {
			let _tmp77 = new gx__Color({});
			_tmp77.r = r;
			_tmp77.g = g;
			_tmp77.b = b;
			_tmp77.a = a;
			return _tmp77;
		})()
		;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {gx__Color} b
 * @returns {gx__Color}
*/
function gx__Color__plus(a, b) {
	try {
		/** @type {int} */
		let na = new int(new int( new int(a.a).valueOf() + b.a.valueOf()));
		/** @type {int} */
		let nr = new int(new int( new int(a.r).valueOf() + b.r.valueOf()));
		/** @type {int} */
		let ng = new int(new int( new int(a.g).valueOf() + b.g.valueOf()));
		/** @type {int} */
		let nb = new int(new int( new int(a.b).valueOf() + b.b.valueOf()));
		if ((new bool(na.valueOf() > new int(255).valueOf())).valueOf()) {
			/** @type {int} */
			na = new int(new int(255));
		}
		if ((new bool(nr.valueOf() > new int(255).valueOf())).valueOf()) {
			/** @type {int} */
			nr = new int(new int(255));
		}
		if ((new bool(ng.valueOf() > new int(255).valueOf())).valueOf()) {
			/** @type {int} */
			ng = new int(new int(255));
		}
		if ((new bool(nb.valueOf() > new int(255).valueOf())).valueOf()) {
			/** @type {int} */
			nb = new int(new int(255));
		}
		return (function() {
			let _tmp78 = new gx__Color({});
			_tmp78.r = new byte(nr);
			_tmp78.g = new byte(ng);
			_tmp78.b = new byte(nb);
			_tmp78.a = new byte(na);
			return _tmp78;
		})()
		;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {gx__Color} b
 * @returns {gx__Color}
*/
function gx__Color__minus(a, b) {
	try {
		/** @type {byte} */
		let na = new byte(((new bool(a.a.valueOf() > b.a.valueOf())).valueOf() ? a.a : b.a));
		/** @type {int} */
		let nr = new int(new int( new int(a.r).valueOf() - b.r.valueOf()));
		/** @type {int} */
		let ng = new int(new int( new int(a.g).valueOf() - b.g.valueOf()));
		/** @type {int} */
		let nb = new int(new int( new int(a.b).valueOf() - b.b.valueOf()));
		if ((new bool(na.valueOf() < new int(0).valueOf())).valueOf()) {
			/** @type {byte} */
			na = new byte(new int(0));
		}
		if ((new bool(nr.valueOf() < new int(0).valueOf())).valueOf()) {
			/** @type {int} */
			nr = new int(new int(0));
		}
		if ((new bool(ng.valueOf() < new int(0).valueOf())).valueOf()) {
			/** @type {int} */
			ng = new int(new int(0));
		}
		if ((new bool(nb.valueOf() < new int(0).valueOf())).valueOf()) {
			/** @type {int} */
			nb = new int(new int(0));
		}
		return (function() {
			let _tmp79 = new gx__Color({});
			_tmp79.r = new byte(nr);
			_tmp79.g = new byte(ng);
			_tmp79.b = new byte(nb);
			_tmp79.a = new byte(na);
			return _tmp79;
		})()
		;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {gx__Color} c2
 * @returns {gx__Color}
*/
function gx__Color__mult(c, c2) {
	try {
		return (function() {
			let _tmp80 = new gx__Color({});
			_tmp80.r = new byte( c.r.valueOf() * c2.r.valueOf());
			_tmp80.g = new byte( c.g.valueOf() * c2.g.valueOf());
			_tmp80.b = new byte( c.b.valueOf() * c2.b.valueOf());
			_tmp80.a = new byte( c.a.valueOf() * c2.a.valueOf());
			return _tmp80;
		})()
		;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {gx__Color} c2
 * @returns {gx__Color}
*/
function gx__Color__div(c, c2) {
	try {
		return (function() {
			let _tmp81 = new gx__Color({});
			_tmp81.r = new byte( c.r.valueOf() / c2.r.valueOf());
			_tmp81.g = new byte( c.g.valueOf() / c2.g.valueOf());
			_tmp81.b = new byte( c.b.valueOf() / c2.b.valueOf());
			_tmp81.a = new byte( c.a.valueOf() / c2.a.valueOf());
			return _tmp81;
		})()
		;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {gx__Color} b
 * @returns {gx__Color}
*/
function gx__Color_over(a, b) {
	try {
		/** @type {f32} */
		const aa = new f32(new f32( new f32(a.a).valueOf() / new int(255).valueOf()));
		/** @type {f32} */
		const ab = new f32(new f32( new f32(b.a).valueOf() / new int(255).valueOf()));
		/** @type {f32} */
		const ar = new f32(new f32( aa.valueOf() + new f32( ab.valueOf() * (new f32( new int(1).valueOf() - aa.valueOf())).valueOf()).valueOf()));
		/** @type {f32} */
		const rr = new f32(new f32( (new f32( new f32( new f32(a.r).valueOf() * aa.valueOf()).valueOf() + new f32( new f32( new f32(b.r).valueOf() * ab.valueOf()).valueOf() * (new f32( new int(1).valueOf() - aa.valueOf())).valueOf()).valueOf())).valueOf() / ar.valueOf()));
		/** @type {f32} */
		const gr = new f32(new f32( (new f32( new f32( new f32(a.g).valueOf() * aa.valueOf()).valueOf() + new f32( new f32( new f32(b.g).valueOf() * ab.valueOf()).valueOf() * (new f32( new int(1).valueOf() - aa.valueOf())).valueOf()).valueOf())).valueOf() / ar.valueOf()));
		/** @type {f32} */
		const br = new f32(new f32( (new f32( new f32( new f32(a.b).valueOf() * aa.valueOf()).valueOf() + new f32( new f32( new f32(b.b).valueOf() * ab.valueOf()).valueOf() * (new f32( new int(1).valueOf() - aa.valueOf())).valueOf()).valueOf())).valueOf() / ar.valueOf()));
		return (function() {
			let _tmp82 = new gx__Color({});
			_tmp82.r = new byte(rr);
			_tmp82.g = new byte(gr);
			_tmp82.b = new byte(br);
			_tmp82.a = new byte(new f32( ar.valueOf() * new int(255).valueOf()));
			return _tmp82;
		})()
		;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {gx__Color} c2
 * @returns {bool}
*/
function gx__Color_eq(c, c2) {
	try {
		return new bool( new bool( new bool( new bool(c.r.valueOf() == c2.r.valueOf()).valueOf() && new bool(c.g.valueOf() == c2.g.valueOf()).valueOf()).valueOf() && new bool(c.b.valueOf() == c2.b.valueOf()).valueOf()).valueOf() && new bool(c.a.valueOf() == c2.a.valueOf()).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function gx__Color_str(c) {
	try {
		return new string(`Color{${byte_str(c.r)}, ${byte_str(c.g)}, ${byte_str(c.b)}, ${byte_str(c.a)}}`);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @returns {int}
*/
function gx__Color_rgba8(c) {
	try {
		return new int(new u32( new u32( new u32( new u32( new u32(c.r).valueOf() << new int(24).valueOf()).valueOf() | new u32( new u32(c.g).valueOf() << new int(16).valueOf()).valueOf()).valueOf() | new u32( new u32(c.b).valueOf() << new int(8).valueOf()).valueOf()).valueOf() | new u32(c.a).valueOf()));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @returns {int}
*/
function gx__Color_bgra8(c) {
	try {
		return new int(new u32( new u32( new u32( new u32( new u32(c.b).valueOf() << new int(24).valueOf()).valueOf() | new u32( new u32(c.g).valueOf() << new int(16).valueOf()).valueOf()).valueOf() | new u32( new u32(c.r).valueOf() << new int(8).valueOf()).valueOf()).valueOf() | new u32(c.a).valueOf()));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @returns {int}
*/
function gx__Color_abgr8(c) {
	try {
		return new int(new u32( new u32( new u32( new u32( new u32(c.a).valueOf() << new int(24).valueOf()).valueOf() | new u32( new u32(c.b).valueOf() << new int(16).valueOf()).valueOf()).valueOf() | new u32( new u32(c.g).valueOf() << new int(8).valueOf()).valueOf()).valueOf() | new u32(c.r).valueOf()));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @constant {Map_string_gx__Color} */
let gx__string_colors = undefined;

/**
 * @function
 * @param {string} s
 * @returns {gx__Color}
*/
function gx__color_from_string(s) {
	try {
		return gx__string_colors.get(s.$toJS());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function gx__Color_to_css_string(c) {
	try {
		return new string(`rgba(${byte_str(c.r)},${byte_str(c.g)},${byte_str(c.b)},${byte_str(c.a)})`);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace gx */
/**
 * @constructor
 * @param {{obj?: voidptr, id?: int, width?: int, height?: int}} init
*/
function gx__Image({ obj = new voidptr(null), id = new int(0), width = new int(0), height = new int(0) }) {
	this.obj = obj
	this.id = id
	this.width = width
	this.height = height
};
gx__Image.prototype = {
	toString() {
		return `gx__Image { obj: ${this["obj"].toString()} , id: ${this["id"].toString()} , width: ${this["width"].toString()} , height: ${this["height"].toString()} }`
	},
	/** @type {voidptr} */
	obj: new voidptr(null),
	/** @type {int} */
	id: new int(0),
	/** @type {int} */
	width: new int(0),
	/** @type {int} */
	height: new int(0),
	$toJS() { return this; }
	};

/**
 * @function
 * @returns {bool}
*/
function gx__Image_is_empty(i) {
	try {
		return builtin__isnil(i.obj);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace gx */
/** @enum {number} */
const gx__HorizontalAlign = {
	left: 0,
	center: 1,
	right: 2,
};

/** @enum {number} */
const gx__VerticalAlign = {
	top: 0,
	middle: 1,
	bottom: 2,
	baseline: 3,
};

/** @namespace gx */
/** @constant {gx__HorizontalAlign} */
let gx__align_left = undefined;
/** @constant {gx__HorizontalAlign} */
let gx__align_right = undefined;

/* [params] */
/**
 * @constructor
 * @param {{color?: gx__Color, size?: int, align?: gx__HorizontalAlign, vertical_align?: gx__VerticalAlign, max_width?: int, family?: string, bold?: bool, mono?: bool, italic?: bool}} init
*/
function gx__TextCfg({ color = gx__black, size = new int(16), align = gx__HorizontalAlign.left, vertical_align = gx__VerticalAlign.top, max_width = new int(0), family = new string(""), bold = new bool(false), mono = new bool(false), italic = new bool(false) }) {
	this.color = color
	this.size = size
	this.align = align
	this.vertical_align = vertical_align
	this.max_width = max_width
	this.family = family
	this.bold = bold
	this.mono = mono
	this.italic = italic
};
gx__TextCfg.prototype = {
	toString() {
		return `gx__TextCfg { color: ${this["color"].toString()} , size: ${this["size"].toString()} , align: ${this["align"].toString()} , vertical_align: ${this["vertical_align"].toString()} , max_width: ${this["max_width"].toString()} , family: "${this["family"].toString()}", bold: ${this["bold"].toString()} , mono: ${this["mono"].toString()} , italic: ${this["italic"].toString()} }`
	},
	/** @type {gx__Color} */
	color: new gx__Color({}),
	/** @type {int} */
	size: new int(0),
	/** @type {gx__HorizontalAlign} */
	align: undefined,
	/** @type {gx__VerticalAlign} */
	vertical_align: undefined,
	/** @type {int} */
	max_width: new int(0),
	/** @type {string} */
	family: new string(""),
	/** @type {bool} */
	bold: new bool(false),
	/** @type {bool} */
	mono: new bool(false),
	/** @type {bool} */
	italic: new bool(false),
	$toJS() { return this; }
	};

/**
 * @function
 * @returns {string}
*/
function gx__TextCfg_to_css_string(cfg) {
cfg = new $ref(cfg)
	try {
		/** @type {string} */
		let font_style = new string(new string(""));
		if ((cfg.val.bold).valueOf()) {
			/** @type {string} */
			font_style.str = font_style + new string(new string("bold "));
		}
		if ((cfg.val.mono).valueOf()) {
			/** @type {string} */
			font_style.str = font_style + new string(new string("mono "));
		}
		if ((cfg.val.italic).valueOf()) {
			/** @type {string} */
			font_style.str = font_style + new string(new string("italic "));
		}
		return new string(`${font_style} ${int_str(cfg.val.size)}px ${cfg.val.family}`);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace js.dom */
/**
 * @constructor
 * @param {{alpha?: bool, color_space?: string, desynchronized?: bool, will_read_frequently?: bool}} init
*/
function js__dom__CanvasRenderingContext2DSettings({ alpha = new bool(false), color_space = new string(""), desynchronized = new bool(false), will_read_frequently = new bool(false) }) {
	this.alpha = alpha
	this.color_space = color_space
	this.desynchronized = desynchronized
	this.will_read_frequently = will_read_frequently
};
js__dom__CanvasRenderingContext2DSettings.prototype = {
	...Path2D.prototype,
	toString() {
		return `js__dom__CanvasRenderingContext2DSettings { alpha: ${this["alpha"].toString()} , color_space: "${this["color_space"].toString()}", desynchronized: ${this["desynchronized"].toString()} , will_read_frequently: ${this["will_read_frequently"].toString()} }`
	},
	/** @type {bool} */
	alpha: new bool(false),
	/** @type {string} */
	color_space: new string(""),
	/** @type {bool} */
	desynchronized: new bool(false),
	/** @type {bool} */
	will_read_frequently: new bool(false),
	$toJS() { return this; }
	};

/**
 * @function
 * @returns {Any}
*/
function js__dom__CanvasRenderingContext2DSettings_to_js(settings) {
	try {
		/** @type {Any} */
		let object = new Any();
		object = { alpha: settings.alpha, colorSpace: settings.color_space.str, desynchronized: settings.desynchronized.val, willReadFrequently: settings.will_read_frequently.val };
		return object;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

function js__dom__SVGMatrix(val) { return val;  }
function js__dom__WebKitCSSMatrix(val) { return val;  }
function js__dom__WindowProxy(val) { return val;  }
/**
 * @function
 * @param {Document} doc
 * @returns {String}
*/
function js__dom__document_url(doc) {
	try {
		/** @type {String} */
		let url = new String();
		url = doc.URL;
		return url;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @constant {Document} */
let js__dom__document = undefined;

/**
 * @function
 * @returns {Window}
*/
function js__dom__window() {
	try {
		/** @type {Any} */
		let x = new voidptr(new int(0));
		x = window;
		return x;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function js__dom__init() {
	try {
		js__dom__document = document;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {anon_fn_js__eventtarget_js__event} callback
 * @returns {js__dom__EventCallback}
*/
function js__dom__event_listener(callback) {
	try {
		return (function () { 
		let _tmp83 = anon_fn_js__eventtarget_js__event_$copy(callback);
		return function (event) {
			let callback = _tmp83;
			/** @type {EventTarget} */
			let target = new voidptr(new int(0));
			target = this;
			callback(target, event);
		}})()
		;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {HTMLEmbedElement} embed
 * @returns {String}
*/
function js__dom__html_embed_type(embed) {
	try {
		/** @type {String} */
		let str = new String();
		str = embed.type
		return str;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {anon_fn_js__window_js__devicemotionevent__interface} cb
 * @returns {js__dom__OnDeviceMotion}
*/
function js__dom__on_device_motion(cb) {
	try {
		/** @type {anon_fn_b76ea1cceeab0fe1_js__devicemotionevent__interface_14016} */
		const clos = (function () { 
		let _tmp84 = anon_fn_js__window_js__devicemotionevent__interface_$copy(cb);
		return function (ev) {
			let cb = _tmp84;
			/** @type {Any} */
			let win = new voidptr(new int(0));
			win = this;
			return cb(win, ev);
		}})()
		;
		return clos;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {anon_fn_js__window_js__deviceorientationevent__interface} cb
 * @returns {js__dom__OnDeviceOrientation}
*/
function js__dom__on_device_orientation(cb) {
	try {
		/** @type {anon_fn_b76ea1cceeab0fe1_js__deviceorientationevent__interface_14272} */
		const clos = (function () { 
		let _tmp85 = anon_fn_js__window_js__deviceorientationevent__interface_$copy(cb);
		return function (ev) {
			let cb = _tmp85;
			/** @type {Any} */
			let win = new voidptr(new int(0));
			win = this;
			return cb(win, ev);
		}})()
		;
		return clos;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {Number}
*/
function js__dom__gl_vertex_shader() {
	try {
		/** @type {Number} */
		let num = new Number();
		num = WebGLRenderingContext.VERTEX_SHADER;
		return num;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {Number}
*/
function js__dom__gl_fragment_shader() {
	try {
		/** @type {Number} */
		let num = new Number();
		num = WebGLRenderingContext.FRAGMENT_SHADER;
		return num;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {Number}
*/
function js__dom__gl_element_array_buffer() {
	try {
		/** @type {Number} */
		let num = new Number();
		num = WebGLRenderingContext.ELEMENT_ARRAY_BUFFER;
		return num;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {Number}
*/
function js__dom__gl_array_buffer() {
	try {
		/** @type {Number} */
		let num = new Number();
		num = WebGLRenderingContext.ARRAY_BUFFER;
		return num;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {Number}
*/
function js__dom__gl_color_buffer_bit() {
	try {
		/** @type {Number} */
		let num = new Number();
		num = WebGLRenderingContext.COLOR_BUFFER_BIT;
		return num;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {Number}
*/
function js__dom__gl_depth_buffer_bit() {
	try {
		/** @type {Number} */
		let num = new Number();
		num = WebGLRenderingContext.COLOR_BUFFER_BIT;
		return num;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {Number}
*/
function js__dom__gl_triangles() {
	try {
		/** @type {Number} */
		let num = new Number();
		num = WebGLRenderingContext.TRIANGLES;
		return num;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {Number}
*/
function js__dom__gl_unsigned_short() {
	try {
		/** @type {Number} */
		let num = new Number();
		num = WebGLRenderingContext.UNSIGNED_SHORT;
		return num;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {Number}
*/
function js__dom__gl_static_draw() {
	try {
		/** @type {Number} */
		let num = new Number();
		num = WebGLRenderingContext.STATIC_DRAW;
		return num;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {Number}
*/
function js__dom__gl_link_status() {
	try {
		/** @type {Number} */
		let num = new Number();
		num = WebGLRenderingContext.LINK_STATUS;
		return num;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {Number}
*/
function js__dom__gl_compile_status() {
	try {
		/** @type {Number} */
		let num = new Number();
		num = WebGLRenderingContext.COMPILE_STATUS;
		return num;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {Number}
*/
function js__dom__gl_float() {
	try {
		/** @type {Number} */
		let num = new Number();
		num = WebGLRenderingContext.FLOAT;
		return num;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {Number}
*/
function js__dom__gl_depth_test() {
	try {
		/** @type {Number} */
		let num = new Number();
		num = WebGLRenderingContext.DEPTH_TEST;
		return num;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {Event} ev
 * @returns {string}
*/
function js__dom__event_type(ev) {
	try {
		/** @type {string} */
		const res = new string(new string(""));
		res.str = ev.type;
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} typ
 * @param {bool} bubbles
 * @param {bool} cancelable
 * @param {bool} composed
 * @returns {Event}
*/
function js__dom__create_event(typ, bubbles, cancelable, composed) {
	try {
		/** @type {Event} */
		let ev = new voidptr(new int(0));
		ev = new Event(typ.str,bubbles.val,cancelable.val,composed.val);
		return ev;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace js.dom */
/** @namespace v.util.version */
/**
 * @function
 * @returns {string}
*/
function v__util__version__vhash() {
	try {
		return new string("");
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {string}
*/
function v__util__version__full_hash() {
	try {
		/** @type {string} */
		const build_hash = new string(v__util__version__vhash());
		/** @type {string} */
		const current_hash = new string(v__util__version__githash(new bool(false)));
		if ((new bool(build_hash.valueOf() == current_hash.valueOf())).valueOf()) {
			return build_hash;
		}
		return new string(`${build_hash}.${current_hash}`);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {bool} is_verbose
 * @returns {string}
*/
function v__util__version__full_v_version(is_verbose) {
	try {
		if ((is_verbose).valueOf()) {
			return new string(`V ${v__util__version__v_version} ${v__util__version__full_hash()}`);
		}
		/** @type {string} */
		const hash = new string(v__util__version__githash(new bool(false)));
		return new string(`V ${v__util__version__v_version} ${hash}`);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {bool} should_get_from_filesystem
 * @returns {string}
*/
function v__util__version__githash(should_get_from_filesystem) {
	try {
		return new string("");
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace v.util.version */
/** @constant {string} */
const v__util__version__v_version = new string("0.2.4");

/** @namespace math.internal */
/** @constant {f64} */
const math__internal__f64_epsilon = new f32(2.2204460492503131e-16);
/** @constant {f64} */
const math__internal__sqrt_f64_epsilon = new f32(1.4901161193847656e-08);
/** @constant {f64} */
const math__internal__root3_f64_epsilon = new f32(6.0554544523933429e-06);
/** @constant {f64} */
const math__internal__root4_f64_epsilon = new f32(1.2207031250000000e-04);
/** @constant {f64} */
const math__internal__root5_f64_epsilon = new f32(7.4009597974140505e-04);
/** @constant {f64} */
const math__internal__root6_f64_epsilon = new f32(2.4607833005759251e-03);
/** @constant {f64} */
const math__internal__log_f64_epsilon = new f32(-3.6043653389117154e+01);
/** @constant {f64} */
const math__internal__f64_min = new f32(2.2250738585072014e-308);
/** @constant {f64} */
const math__internal__sqrt_f64_min = new f32(1.4916681462400413e-154);
/** @constant {f64} */
const math__internal__root3_f64_min = new f32(2.8126442852362996e-103);
/** @constant {f64} */
const math__internal__root4_f64_min = new f32(1.2213386697554620e-77);
/** @constant {f64} */
const math__internal__root5_f64_min = new f32(2.9476022969691763e-62);
/** @constant {f64} */
const math__internal__root6_f64_min = new f32(5.3034368905798218e-52);
/** @constant {f64} */
const math__internal__log_f64_min = new f32(-7.0839641853226408e+02);
/** @constant {f64} */
const math__internal__f64_max = new f32(1.7976931348623157e+308);
/** @constant {f64} */
const math__internal__sqrt_f64_max = new f32(1.3407807929942596e+154);
/** @constant {f64} */
const math__internal__root3_f64_max = new f32(5.6438030941222897e+102);
/** @constant {f64} */
const math__internal__root4_f64_max = new f32(1.1579208923731620e+77);
/** @constant {f64} */
const math__internal__root5_f64_max = new f32(4.4765466227572707e+61);
/** @constant {f64} */
const math__internal__root6_f64_max = new f32(2.3756689782295612e+51);
/** @constant {f64} */
const math__internal__log_f64_max = new f32(7.0978271289338397e+02);
/** @constant {f64} */
const math__internal__f32_epsilon = new f32(1.1920928955078125e-07);
/** @constant {f64} */
const math__internal__sqrt_f32_epsilon = new f32(3.4526698300124393e-04);
/** @constant {f64} */
const math__internal__root3_f32_epsilon = new f32(4.9215666011518501e-03);
/** @constant {f64} */
const math__internal__root4_f32_epsilon = new f32(1.8581361171917516e-02);
/** @constant {f64} */
const math__internal__root5_f32_epsilon = new f32(4.1234622211652937e-02);
/** @constant {f64} */
const math__internal__root6_f32_epsilon = new f32(7.0153878019335827e-02);
/** @constant {f64} */
const math__internal__log_f32_epsilon = new f32(-1.5942385152878742e+01);
/** @constant {f64} */
const math__internal__f32_min = new f32(1.1754943508222875e-38);
/** @constant {f64} */
const math__internal__sqrt_f32_min = new f32(1.0842021724855044e-19);
/** @constant {f64} */
const math__internal__root3_f32_min = new f32(2.2737367544323241e-13);
/** @constant {f64} */
const math__internal__root4_f32_min = new f32(3.2927225399135965e-10);
/** @constant {f64} */
const math__internal__root5_f32_min = new f32(2.5944428542140822e-08);
/** @constant {f64} */
const math__internal__root6_f32_min = new f32(4.7683715820312542e-07);
/** @constant {f64} */
const math__internal__log_f32_min = new f32(-8.7336544750553102e+01);
/** @constant {f64} */
const math__internal__f32_max = new f32(3.4028234663852886e+38);
/** @constant {f64} */
const math__internal__sqrt_f32_max = new f32(1.8446743523953730e+19);
/** @constant {f64} */
const math__internal__root3_f32_max = new f32(6.9814635196223242e+12);
/** @constant {f64} */
const math__internal__root4_f32_max = new f32(4.2949672319999986e+09);
/** @constant {f64} */
const math__internal__root5_f32_max = new f32(5.0859007855960041e+07);
/** @constant {f64} */
const math__internal__root6_f32_max = new f32(2.6422459233807749e+06);
/** @constant {f64} */
const math__internal__log_f32_max = new f32(8.8722839052068352e+01);
/** @constant {f64} */
const math__internal__sflt_epsilon = new f32(4.8828125000000000e-04);
/** @constant {f64} */
const math__internal__sqrt_sflt_epsilon = new f32(2.2097086912079612e-02);
/** @constant {f64} */
const math__internal__root3_sflt_epsilon = new f32(7.8745065618429588e-02);
/** @constant {f64} */
const math__internal__root4_sflt_epsilon = new f32(1.4865088937534013e-01);
/** @constant {f64} */
const math__internal__root5_sflt_epsilon = new f32(2.1763764082403100e-01);
/** @constant {f64} */
const math__internal__root6_sflt_epsilon = new f32(2.8061551207734325e-01);
/** @constant {f64} */
const math__internal__log_sflt_epsilon = new f32(-7.6246189861593985e+00);
/** @constant {int} */
const math__internal__max_int_fact_arg = new int(170);
/** @constant {f64} */
const math__internal__max_f64_fact_arg = new f32(171.0);
/** @constant {f64} */
const math__internal__max_long_f64_fact_arg = new f32(1755.5);

/** @namespace gg */
/**
 * @function
 * @param {f32} x
 * @param {f32} y
 * @param {gx__Color} c
 * @returns {void}
*/
function gg__Context_draw_pixel(ctx, x, y, c) {
ctx = new $ref(ctx)
	try {
		/** @type {js__dom__FillStyle} */
		gg__Context_get_js_context(ctx.valueOf(),).fillStyle = gx__Color_to_css_string(c,).str;
		gg__Context_get_js_context(ctx.valueOf(),).fillRect(x, y, new int(1), new int(1));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {Array_f32} points
 * @param {gx__Color} c
 * @returns {void}
*/
function gg__Context_draw_pixels(ctx, points, c) {
ctx = new $ref(ctx)
	try {
		// assert
		if( new bool(new int( points.len.valueOf() % new int(2).valueOf()).valueOf() == new int(0).valueOf()).valueOf() ) {} else {
			builtin__eprintln(new string("E:\\v_work\\vlib\\gg\\draw.js.v:13: FAIL: fn draw_pixels(): assert points.len % 2 == 0"));
			builtin__exit(1);
		}
		/** @type {int} */
		const len = new int(new int( points.len.valueOf() / new int(2).valueOf()));
		for (let i = new int(0); i < len; i = new int(i + 1)) {
			try { 
				/** @type {f32} */
				const x = new f32(points.arr.get(new int(new int_literal( i.valueOf() * new int(2).valueOf()).valueOf())));
				/** @type {f32} */
				const y = new f32(points.arr.get(new int(new int_literal( new int_literal( i.valueOf() * new int(2).valueOf()).valueOf() + new int(1).valueOf()).valueOf())));
				gg__Context_draw_pixel(ctx.valueOf(),x, y, c);
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f32} x
 * @param {f32} y
 * @param {f32} w
 * @param {f32} h
 * @param {gx__Color} c
 * @returns {void}
*/
function gg__Context_draw_rect_empty(ctx, x, y, w, h, c) {
ctx = new $ref(ctx)
	try {
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f32} x
 * @param {f32} y
 * @param {f32} w
 * @param {f32} h
 * @param {gx__Color} c
 * @returns {void}
*/
function gg__Context_draw_rect_filled(ctx, x, y, w, h, c) {
ctx = new $ref(ctx)
	try {
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f32} x
 * @param {f32} y
 * @param {f32} w
 * @param {f32} h
 * @param {f32} radius
 * @param {gx__Color} c
 * @returns {void}
*/
function gg__Context_draw_rounded_rect_empty(ctx, x, y, w, h, radius, c) {
ctx = new $ref(ctx)
	try {
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f32} x
 * @param {f32} y
 * @param {f32} w
 * @param {f32} h
 * @param {f32} radius
 * @param {gx__Color} c
 * @returns {void}
*/
function gg__Context_draw_rounded_rect_filled(ctx, x, y, w, h, radius, c) {
ctx = new $ref(ctx)
	try {
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f32} x
 * @param {f32} y
 * @param {f32} x2
 * @param {f32} y2
 * @param {f32} x3
 * @param {f32} y3
 * @param {gx__Color} c
 * @returns {void}
*/
function gg__Context_draw_triangle_filled(ctx, x, y, x2, y2, x3, y3, c) {
ctx = new $ref(ctx)
	try {
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace gg */
/** @enum {number} */
const gg__MouseButton = {
	left: 0,
	right: 1,
	middle: 2,
	invalid: 256,
};

/** @enum {number} */
const gg__MouseButtons = {
	left: 0,
	right: 1,
	middle: 2,
};

/** @enum {number} */
const gg__Modifier = {
	shift: 0,
	ctrl: 1,
	alt: 2,
	super: 3,
};

/** @enum {number} */
const gg__PenLineType = {
	solid: 0,
	dashed: 1,
	dotted: 2,
};

/** @enum {number} */
const gg__KeyCode = {
	invalid: 0,
	space: 32,
	apostrophe: 39,
	comma: 44,
	minus: 45,
	period: 46,
	slash: 47,
	_0: 48,
	_1: 49,
	_2: 50,
	_3: 51,
	_4: 52,
	_5: 53,
	_6: 54,
	_7: 55,
	_8: 56,
	_9: 57,
	semicolon: 59,
	equal: 61,
	a: 65,
	b: 66,
	c: 67,
	d: 68,
	e: 69,
	f: 70,
	g: 71,
	h: 72,
	i: 73,
	j: 74,
	k: 75,
	l: 76,
	m: 77,
	n: 78,
	o: 79,
	p: 80,
	q: 81,
	r: 82,
	s: 83,
	t: 84,
	u: 85,
	v: 86,
	w: 87,
	x: 88,
	y: 89,
	z: 90,
	left_bracket: 91,
	backslash: 92,
	right_bracket: 93,
	grave_accent: 96,
	world_1: 161,
	world_2: 162,
	escape: 256,
	enter: 257,
	tab: 258,
	backspace: 259,
	insert: 260,
	delete: 261,
	right: 262,
	left: 263,
	down: 264,
	up: 265,
	page_up: 266,
	page_down: 267,
	home: 268,
	end: 269,
	caps_lock: 280,
	scroll_lock: 281,
	num_lock: 282,
	print_screen: 283,
	pause: 284,
	f1: 290,
	f2: 291,
	f3: 292,
	f4: 293,
	f5: 294,
	f6: 295,
	f7: 296,
	f8: 297,
	f9: 298,
	f10: 299,
	f11: 300,
	f12: 301,
	f13: 302,
	f14: 303,
	f15: 304,
	f16: 305,
	f17: 306,
	f18: 307,
	f19: 308,
	f20: 309,
	f21: 310,
	f22: 311,
	f23: 312,
	f24: 313,
	f25: 314,
	kp_0: 320,
	kp_1: 321,
	kp_2: 322,
	kp_3: 323,
	kp_4: 324,
	kp_5: 325,
	kp_6: 326,
	kp_7: 327,
	kp_8: 328,
	kp_9: 329,
	kp_decimal: 330,
	kp_divide: 331,
	kp_multiply: 332,
	kp_subtract: 333,
	kp_add: 334,
	kp_enter: 335,
	kp_equal: 336,
	left_shift: 340,
	left_control: 341,
	left_alt: 342,
	left_super: 343,
	right_shift: 344,
	right_control: 345,
	right_alt: 346,
	right_super: 347,
	menu: 348,
};

/** @constant {int} */
const gg__key_code_max = new int(512);

/** @namespace gg */
/** @enum {number} */
const gg__DOMEventType = {
	invalid: 0,
	key_down: 1,
	key_up: 2,
	char: 3,
	mouse_down: 4,
	mouse_up: 5,
	mouse_scroll: 6,
	mouse_move: 7,
	mouse_enter: 8,
	mouse_leave: 9,
	touches_began: 10,
	touches_moved: 11,
	touches_ended: 12,
	touches_cancelled: 13,
	resized: 14,
	iconified: 15,
	restored: 16,
	focused: 17,
	unfocused: 18,
	suspended: 19,
	resumed: 20,
	update_cursor: 21,
	quit_requested: 22,
	clipboard_pasted: 23,
	files_droped: 24,
	num: 25,
};

/**
 * @constructor
 * @param {{frame_count?: u64, typ?: gg__DOMEventType, key_code?: gg__KeyCode, char_code?: u32, key_repeat?: bool, modifiers?: u32, mouse_button?: gg__MouseButton, mouse_x?: f32, mouse_y?: f32, mouse_dx?: f32, mouse_dy?: f32, scroll_x?: f32, scroll_y?: f32, window_width?: int, window_height?: int, framebuffer_width?: int, framebuffer_height?: int}} init
*/
function gg__Event({ frame_count = new u64(0), typ = undefined, key_code = undefined, char_code = new u32(0), key_repeat = new bool(false), modifiers = new u32(0), mouse_button = undefined, mouse_x = new f32(0), mouse_y = new f32(0), mouse_dx = new f32(0), mouse_dy = new f32(0), scroll_x = new f32(0), scroll_y = new f32(0), window_width = new int(0), window_height = new int(0), framebuffer_width = new int(0), framebuffer_height = new int(0) }) {
	this.frame_count = frame_count
	this.typ = typ
	this.key_code = key_code
	this.char_code = char_code
	this.key_repeat = key_repeat
	this.modifiers = modifiers
	this.mouse_button = mouse_button
	this.mouse_x = mouse_x
	this.mouse_y = mouse_y
	this.mouse_dx = mouse_dx
	this.mouse_dy = mouse_dy
	this.scroll_x = scroll_x
	this.scroll_y = scroll_y
	this.window_width = window_width
	this.window_height = window_height
	this.framebuffer_width = framebuffer_width
	this.framebuffer_height = framebuffer_height
};
gg__Event.prototype = {
	toString() {
		return `gg__Event { frame_count: ${this["frame_count"].toString()} , typ: ${this["typ"].toString()} , key_code: ${this["key_code"].toString()} , char_code: ${this["char_code"].toString()} , key_repeat: ${this["key_repeat"].toString()} , modifiers: ${this["modifiers"].toString()} , mouse_button: ${this["mouse_button"].toString()} , mouse_x: ${this["mouse_x"].toString()} , mouse_y: ${this["mouse_y"].toString()} , mouse_dx: ${this["mouse_dx"].toString()} , mouse_dy: ${this["mouse_dy"].toString()} , scroll_x: ${this["scroll_x"].toString()} , scroll_y: ${this["scroll_y"].toString()} , window_width: ${this["window_width"].toString()} , window_height: ${this["window_height"].toString()} , framebuffer_width: ${this["framebuffer_width"].toString()} , framebuffer_height: ${this["framebuffer_height"].toString()} }`
	},
	/** @type {u64} */
	frame_count: new u64(0),
	/** @type {gg__DOMEventType} */
	typ: undefined,
	/** @type {gg__KeyCode} */
	key_code: undefined,
	/** @type {u32} */
	char_code: new u32(0),
	/** @type {bool} */
	key_repeat: new bool(false),
	/** @type {u32} */
	modifiers: new u32(0),
	/** @type {gg__MouseButton} */
	mouse_button: undefined,
	/** @type {f32} */
	mouse_x: new f32(0),
	/** @type {f32} */
	mouse_y: new f32(0),
	/** @type {f32} */
	mouse_dx: new f32(0),
	/** @type {f32} */
	mouse_dy: new f32(0),
	/** @type {f32} */
	scroll_x: new f32(0),
	/** @type {f32} */
	scroll_y: new f32(0),
	/** @type {int} */
	window_width: new int(0),
	/** @type {int} */
	window_height: new int(0),
	/** @type {int} */
	framebuffer_width: new int(0),
	/** @type {int} */
	framebuffer_height: new int(0),
	$toJS() { return this; }
	};

/** @enum {number} */
const gg__DOMMouseButton = {
	invalid: -1,
	left: 0,
	right: 1,
	middle: 2,
};

/** @enum {number} */
const gg__DOMModifier = {
	shift: 1,
	ctrl: 2,
	alt: 4,
	super: 8,
	lmb: 256,
	rmb: 512,
	mmb: 1024,
};

/** @enum {number} */
const gg__DOMKeyCode = {
	invalid: 0,
	space: 32,
	apostrophe: 39,
	comma: 44,
	minus: 45,
	period: 46,
	slash: 47,
	_0: 48,
	_1: 49,
	_2: 50,
	_3: 51,
	_4: 52,
	_5: 53,
	_6: 54,
	_7: 55,
	_8: 56,
	_9: 57,
	semicolon: 59,
	equal: 61,
	a: 65,
	b: 66,
	c: 67,
	d: 68,
	e: 69,
	f: 70,
	g: 71,
	h: 72,
	i: 73,
	j: 74,
	k: 75,
	l: 76,
	m: 77,
	n: 78,
	o: 79,
	p: 80,
	q: 81,
	r: 82,
	s: 83,
	t: 84,
	u: 85,
	v: 86,
	w: 87,
	x: 88,
	y: 89,
	z: 90,
	left_bracket: 91,
	backslash: 92,
	right_bracket: 93,
	grave_accent: 96,
	world_1: 161,
	world_2: 162,
	escape: 256,
	enter: 257,
	tab: 258,
	backspace: 259,
	insert: 260,
	delete: 261,
	right: 262,
	left: 263,
	down: 264,
	up: 265,
	page_up: 266,
	page_down: 267,
	home: 268,
	end: 269,
	caps_lock: 280,
	scroll_lock: 281,
	num_lock: 282,
	print_screen: 283,
	pause: 284,
	f1: 290,
	f2: 291,
	f3: 292,
	f4: 293,
	f5: 294,
	f6: 295,
	f7: 296,
	f8: 297,
	f9: 298,
	f10: 299,
	f11: 300,
	f12: 301,
	f13: 302,
	f14: 303,
	f15: 304,
	f16: 305,
	f17: 306,
	f18: 307,
	f19: 308,
	f20: 309,
	f21: 310,
	f22: 311,
	f23: 312,
	f24: 313,
	f25: 314,
	kp_0: 320,
	kp_1: 321,
	kp_2: 322,
	kp_3: 323,
	kp_4: 324,
	kp_5: 325,
	kp_6: 326,
	kp_7: 327,
	kp_8: 328,
	kp_9: 329,
	kp_decimal: 330,
	kp_divide: 331,
	kp_multiply: 332,
	kp_subtract: 333,
	kp_add: 334,
	kp_enter: 335,
	kp_equal: 336,
	left_shift: 340,
	left_control: 341,
	left_alt: 342,
	left_super: 343,
	right_shift: 344,
	right_control: 345,
	right_alt: 346,
	right_super: 347,
	menu: 348,
};

/**
 * @constructor
 * @param {{width?: int, height?: int, use_ortho?: bool, retina?: bool, resizable?: bool, user_data?: voidptr, font_size?: int, create_window?: bool, window_title?: string, borderless_window?: bool, always_on_top?: bool, bg_color?: gx__Color, init_fn?: gg__FNCb, frame_fn?: gg__FNCb, native_frame_fn?: gg__FNCb, cleanup_fn?: gg__FNCb, fail_fn?: gg__FNFail, event_fn?: gg__FNEvent, quit_fn?: gg__FNEvent, keydown_fn?: gg__FNKeyDown, keyup_fn?: gg__FNKeyUp, char_fn?: gg__FNChar, move_fn?: gg__FNMove, click_fn?: gg__FNClick, unclick_fn?: gg__FNUnClick, leave_fn?: gg__FNEvent, enter_fn?: gg__FNEvent, resized_fn?: gg__FNEvent, scroll_fn?: gg__FNEvent, fullscreen?: bool, scale?: f32, sample_count?: int, swap_interval?: int, font_path?: string, custom_bold_font_path?: string, ui_mode?: bool, font_bytes_normal?: Array_byte, font_bytes_bold?: Array_byte, font_bytes_mono?: Array_byte, font_bytes_italic?: Array_byte, native_rendering?: bool, enable_dragndrop?: bool, max_dropped_files?: int, max_dropped_file_path_length?: int, canvas?: string}} init
*/
function gg__Config({ width = new int(0), height = new int(0), use_ortho = new bool(false), retina = new bool(false), resizable = new bool(false), user_data = new voidptr(null), font_size = new int(0), create_window = new bool(false), window_title = new string(""), borderless_window = new bool(false), always_on_top = new bool(false), bg_color = new gx__Color({}), init_fn = new voidptr(new int(0)), frame_fn = new voidptr(new int(0)), native_frame_fn = new voidptr(new int(0)), cleanup_fn = new voidptr(new int(0)), fail_fn = new voidptr(new int(0)), event_fn = new voidptr(new int(0)), quit_fn = new voidptr(new int(0)), keydown_fn = new voidptr(new int(0)), keyup_fn = new voidptr(new int(0)), char_fn = new voidptr(new int(0)), move_fn = new voidptr(new int(0)), click_fn = new voidptr(new int(0)), unclick_fn = new voidptr(new int(0)), leave_fn = new voidptr(new int(0)), enter_fn = new voidptr(new int(0)), resized_fn = new voidptr(new int(0)), scroll_fn = new voidptr(new int(0)), fullscreen = new bool(false), scale = new f32(1.0), sample_count = new int(0), swap_interval = new int(1), font_path = new string(""), custom_bold_font_path = new string(""), ui_mode = new bool(false), font_bytes_normal = empty_array(), font_bytes_bold = empty_array(), font_bytes_mono = empty_array(), font_bytes_italic = empty_array(), native_rendering = new bool(false), enable_dragndrop = new bool(false), max_dropped_files = new int(1), max_dropped_file_path_length = new int(2048), canvas = new string("") }) {
	this.width = width
	this.height = height
	this.use_ortho = use_ortho
	this.retina = retina
	this.resizable = resizable
	this.user_data = user_data
	this.font_size = font_size
	this.create_window = create_window
	this.window_title = window_title
	this.borderless_window = borderless_window
	this.always_on_top = always_on_top
	this.bg_color = bg_color
	this.init_fn = init_fn
	this.frame_fn = frame_fn
	this.native_frame_fn = native_frame_fn
	this.cleanup_fn = cleanup_fn
	this.fail_fn = fail_fn
	this.event_fn = event_fn
	this.quit_fn = quit_fn
	this.keydown_fn = keydown_fn
	this.keyup_fn = keyup_fn
	this.char_fn = char_fn
	this.move_fn = move_fn
	this.click_fn = click_fn
	this.unclick_fn = unclick_fn
	this.leave_fn = leave_fn
	this.enter_fn = enter_fn
	this.resized_fn = resized_fn
	this.scroll_fn = scroll_fn
	this.fullscreen = fullscreen
	this.scale = scale
	this.sample_count = sample_count
	this.swap_interval = swap_interval
	this.font_path = font_path
	this.custom_bold_font_path = custom_bold_font_path
	this.ui_mode = ui_mode
	this.font_bytes_normal = font_bytes_normal
	this.font_bytes_bold = font_bytes_bold
	this.font_bytes_mono = font_bytes_mono
	this.font_bytes_italic = font_bytes_italic
	this.native_rendering = native_rendering
	this.enable_dragndrop = enable_dragndrop
	this.max_dropped_files = max_dropped_files
	this.max_dropped_file_path_length = max_dropped_file_path_length
	this.canvas = canvas
};
gg__Config.prototype = {
	toString() {
		return `gg__Config { width: ${this["width"].toString()} , height: ${this["height"].toString()} , use_ortho: ${this["use_ortho"].toString()} , retina: ${this["retina"].toString()} , resizable: ${this["resizable"].toString()} , user_data: ${this["user_data"].toString()} , font_size: ${this["font_size"].toString()} , create_window: ${this["create_window"].toString()} , window_title: "${this["window_title"].toString()}", borderless_window: ${this["borderless_window"].toString()} , always_on_top: ${this["always_on_top"].toString()} , bg_color: ${this["bg_color"].toString()} , init_fn: ${this["init_fn"].toString()} , frame_fn: ${this["frame_fn"].toString()} , native_frame_fn: ${this["native_frame_fn"].toString()} , cleanup_fn: ${this["cleanup_fn"].toString()} , fail_fn: ${this["fail_fn"].toString()} , event_fn: ${this["event_fn"].toString()} , quit_fn: ${this["quit_fn"].toString()} , keydown_fn: ${this["keydown_fn"].toString()} , keyup_fn: ${this["keyup_fn"].toString()} , char_fn: ${this["char_fn"].toString()} , move_fn: ${this["move_fn"].toString()} , click_fn: ${this["click_fn"].toString()} , unclick_fn: ${this["unclick_fn"].toString()} , leave_fn: ${this["leave_fn"].toString()} , enter_fn: ${this["enter_fn"].toString()} , resized_fn: ${this["resized_fn"].toString()} , scroll_fn: ${this["scroll_fn"].toString()} , fullscreen: ${this["fullscreen"].toString()} , scale: ${this["scale"].toString()} , sample_count: ${this["sample_count"].toString()} , swap_interval: ${this["swap_interval"].toString()} , font_path: "${this["font_path"].toString()}", custom_bold_font_path: "${this["custom_bold_font_path"].toString()}", ui_mode: ${this["ui_mode"].toString()} , font_bytes_normal: ${this["font_bytes_normal"].toString()} , font_bytes_bold: ${this["font_bytes_bold"].toString()} , font_bytes_mono: ${this["font_bytes_mono"].toString()} , font_bytes_italic: ${this["font_bytes_italic"].toString()} , native_rendering: ${this["native_rendering"].toString()} , enable_dragndrop: ${this["enable_dragndrop"].toString()} , max_dropped_files: ${this["max_dropped_files"].toString()} , max_dropped_file_path_length: ${this["max_dropped_file_path_length"].toString()} , canvas: "${this["canvas"].toString()}"}`
	},
	/** @type {int} */
	width: new int(0),
	/** @type {int} */
	height: new int(0),
	/** @type {bool} */
	use_ortho: new bool(false),
	/** @type {bool} */
	retina: new bool(false),
	/** @type {bool} */
	resizable: new bool(false),
	/** @type {voidptr} */
	user_data: new voidptr(null),
	/** @type {int} */
	font_size: new int(0),
	/** @type {bool} */
	create_window: new bool(false),
	/** @type {string} */
	window_title: new string(""),
	/** @type {bool} */
	borderless_window: new bool(false),
	/** @type {bool} */
	always_on_top: new bool(false),
	/** @type {gx__Color} */
	bg_color: new gx__Color({}),
	/** @type {gg__FNCb} */
	init_fn: undefined,
	/** @type {gg__FNCb} */
	frame_fn: undefined,
	/** @type {gg__FNCb} */
	native_frame_fn: undefined,
	/** @type {gg__FNCb} */
	cleanup_fn: undefined,
	/** @type {gg__FNFail} */
	fail_fn: undefined,
	/** @type {gg__FNEvent} */
	event_fn: undefined,
	/** @type {gg__FNEvent} */
	quit_fn: undefined,
	/** @type {gg__FNKeyDown} */
	keydown_fn: undefined,
	/** @type {gg__FNKeyUp} */
	keyup_fn: undefined,
	/** @type {gg__FNChar} */
	char_fn: undefined,
	/** @type {gg__FNMove} */
	move_fn: undefined,
	/** @type {gg__FNClick} */
	click_fn: undefined,
	/** @type {gg__FNUnClick} */
	unclick_fn: undefined,
	/** @type {gg__FNEvent} */
	leave_fn: undefined,
	/** @type {gg__FNEvent} */
	enter_fn: undefined,
	/** @type {gg__FNEvent} */
	resized_fn: undefined,
	/** @type {gg__FNEvent} */
	scroll_fn: undefined,
	/** @type {bool} */
	fullscreen: new bool(false),
	/** @type {f32} */
	scale: new f32(0),
	/** @type {int} */
	sample_count: new int(0),
	/** @type {int} */
	swap_interval: new int(0),
	/** @type {string} */
	font_path: new string(""),
	/** @type {string} */
	custom_bold_font_path: new string(""),
	/** @type {bool} */
	ui_mode: new bool(false),
	/** @type {Array_byte} */
	font_bytes_normal: empty_array(),
	/** @type {Array_byte} */
	font_bytes_bold: empty_array(),
	/** @type {Array_byte} */
	font_bytes_mono: empty_array(),
	/** @type {Array_byte} */
	font_bytes_italic: empty_array(),
	/** @type {bool} */
	native_rendering: new bool(false),
	/** @type {bool} */
	enable_dragndrop: new bool(false),
	/** @type {int} */
	max_dropped_files: new int(0),
	/** @type {int} */
	max_dropped_file_path_length: new int(0),
	/** @type {string} */
	canvas: new string(""),
	$toJS() { return this; }
	};

/** @constant {gg__Size} */
let gg__size = undefined;

/**
 * @function
 * @returns {gg__Size}
*/
function gg__window_size() {
	try {
		return gg__size;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @constructor
 * @param {{render_text?: bool, image_cache?: Array_gg__Image, needs_refresh?: bool, ticks?: int, scale?: f32, width?: int, height?: int, window?: Window, config?: gg__Config, user_data?: voidptr, ui_mode?: bool, frame?: u64, mbtn_mask?: byte, mouse_pos_x?: int, mouse_pos_y?: int, mouse_dx?: int, mouse_dy?: int, scroll_x?: int, scroll_y?: int, key_repeat?: bool, context?: CanvasRenderingContext2D, canvas?: HTMLCanvasElement}} init
*/
function gg__Context({ render_text = new bool(true), image_cache = empty_array(), needs_refresh = new bool(true), ticks = new int(0), scale = new f32(1.0), width = new int(0), height = new int(0), window, config = new gg__Config({}), user_data = new voidptr(null), ui_mode = new bool(false), frame = new u64(0), mbtn_mask = new byte(0), mouse_pos_x = new int(0), mouse_pos_y = new int(0), mouse_dx = new int(0), mouse_dy = new int(0), scroll_x = new int(0), scroll_y = new int(0), key_repeat = new bool(false), context, canvas }) {
	this.render_text = render_text
	this.image_cache = image_cache
	this.needs_refresh = needs_refresh
	this.ticks = ticks
	this.scale = scale
	this.width = width
	this.height = height
	this.window = window
	this.config = config
	this.user_data = user_data
	this.ui_mode = ui_mode
	this.frame = frame
	this.mbtn_mask = mbtn_mask
	this.mouse_pos_x = mouse_pos_x
	this.mouse_pos_y = mouse_pos_y
	this.mouse_dx = mouse_dx
	this.mouse_dy = mouse_dy
	this.scroll_x = scroll_x
	this.scroll_y = scroll_y
	this.key_repeat = key_repeat
	this.context = context
	this.canvas = canvas
};
gg__Context.prototype = {
	toString() {
		return `gg__Context { render_text: ${this["render_text"].toString()} , image_cache: ${this["image_cache"].toString()} , needs_refresh: ${this["needs_refresh"].toString()} , ticks: ${this["ticks"].toString()} , scale: ${this["scale"].toString()} , width: ${this["width"].toString()} , height: ${this["height"].toString()} , window: ${this["window"].toString()} , config: ${this["config"].toString()} , user_data: ${this["user_data"].toString()} , ui_mode: ${this["ui_mode"].toString()} , frame: ${this["frame"].toString()} , mbtn_mask: ${this["mbtn_mask"].toString()} , mouse_pos_x: ${this["mouse_pos_x"].toString()} , mouse_pos_y: ${this["mouse_pos_y"].toString()} , mouse_dx: ${this["mouse_dx"].toString()} , mouse_dy: ${this["mouse_dy"].toString()} , scroll_x: ${this["scroll_x"].toString()} , scroll_y: ${this["scroll_y"].toString()} , key_repeat: ${this["key_repeat"].toString()} , context: ${this["context"].toString()} , canvas: ${this["canvas"].toString()} }`
	},
	/** @type {bool} */
	render_text: new bool(false),
	/** @type {Array_gg__Image} */
	image_cache: empty_array(),
	/** @type {bool} */
	needs_refresh: new bool(false),
	/** @type {int} */
	ticks: new int(0),
	/** @type {f32} */
	scale: new f32(0),
	/** @type {int} */
	width: new int(0),
	/** @type {int} */
	height: new int(0),
	/** @type {Window} */
	/** @type {gg__Config} */
	config: new gg__Config({}),
	/** @type {voidptr} */
	user_data: new voidptr(null),
	/** @type {bool} */
	ui_mode: new bool(false),
	/** @type {u64} */
	frame: new u64(0),
	/** @type {byte} */
	mbtn_mask: new byte(0),
	/** @type {int} */
	mouse_pos_x: new int(0),
	/** @type {int} */
	mouse_pos_y: new int(0),
	/** @type {int} */
	mouse_dx: new int(0),
	/** @type {int} */
	mouse_dy: new int(0),
	/** @type {int} */
	scroll_x: new int(0),
	/** @type {int} */
	scroll_y: new int(0),
	/** @type {bool} */
	key_repeat: new bool(false),
	/** @type {CanvasRenderingContext2D} */
	/** @type {HTMLCanvasElement} */
	$toJS() { return this; }
	};

/**
 * @function
 * @returns {CanvasRenderingContext2D}
*/
function gg__Context_get_js_context(_v_this) {
_v_this = new $ref(_v_this)
	try {
		return _v_this.val.context;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {HTMLElement} elem
 * @returns {HTMLCanvasElement}
*/
function gg__get_canvas(elem) {
	try {
		if (elem instanceof HTMLCanvasElement) {
			return elem;
		}
		
		else {
			builtin__panic (new string("gg: element is not an HTMLCanvasElement"));
		}
		;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {HTMLCanvasElement} canvas
 * @returns {CanvasRenderingContext2D}
*/
function gg__get_context(canvas) {
	try {
		/** @type {js__dom__CanvasContext} */
		const ctx = (function () {
		try {
		let tmp = 
		canvas.getContext(new string("2d").str, js_undefined());
if (tmp === null) throw "none";
		return tmp;
		} catch(err) {
			builtin__panic (new string("cannot get context"));
		}
		})()
		;
		if (ctx instanceof CanvasRenderingContext2D) {
			return ctx;
		}
		
		else {
			builtin__panic (new string("failed to get 2D context"));
		}
		;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {gg__Config} cfg
 * @returns {gg__Context}
*/
function gg__new_context(cfg) {
	try {
		/** @type {gg__Context} */
		let g = new $ref(new gg__Context({}));
		/** @type {voidptr} */
		g.val.user_data = cfg.user_data;
		/** @type {int} */
		g.val.width = new int(cfg.width);
		/** @type {int} */
		g.val.height = new int(cfg.height);
		/** @type {bool} */
		g.val.ui_mode = new bool(cfg.ui_mode);
		/** @type {gg__Size} */
		let sz = gg__size;
		/** @type {int} */
		sz.height = new int(g.val.height);
		/** @type {int} */
		sz.width = new int(g.val.width);
		/** @type {gg__Config} */
		g.val.config = cfg;
		if ((builtin__isnil(cfg.user_data)).valueOf()) {
			/** @type {voidptr} */
			g.val.user_data = g;
		}
		/** @type {Window} */
		g.val.window = js__dom__window();
		/** @type {Document} */
		const _v_document = js__dom__document;
		/** @type {HTMLElement} */
		const canvas_elem = (function () {
		try {
		let tmp = 
		_v_document.getElementById(cfg.canvas.str);
if (tmp === null) throw "none";
		return tmp;
		} catch(err) {
			builtin__panic (new string("gg: cannot get canvas element"));
		}
		})()
		;
		/** @type {HTMLCanvasElement} */
		const canvas = gg__get_canvas(canvas_elem);
		/** @type {HTMLCanvasElement} */
		g.val.canvas = canvas;
		/** @type {CanvasRenderingContext2D} */
		g.val.context = gg__get_context(g.val.canvas);
		/** @type {anon_fn_b4ecef44c914305a_js__event_6689} */
		const mouse_down_event_handler = (function () { 
		return function (event) {
			if (event instanceof MouseEvent) {
				/** @type {gg__Event} */
				const e = gg__Context_handle_mouse_event(g.valueOf(),event, gg__DOMEventType.mouse_down);
				if ((!builtin__isnil(g.val.config.event_fn).val ).valueOf()) {
					/** @type {gg__FNEvent} */
					const f = g.val.config.event_fn;
					f(e, g.val.config.user_data);
				}
				if ((!builtin__isnil(g.val.config.click_fn).val ).valueOf()) {
					/** @type {gg__FNClick} */
					const f = g.val.config.click_fn;
					f(e.mouse_x, e.mouse_y, e.mouse_button, g.val.config.user_data);
				}
			}
			
			else {
			}
			;
		}})()
		;
		/** @type {anon_fn_b4ecef44c914305a_js__event_7088} */
		const mouse_up_event_handler = (function () { 
		return function (event) {
			if (event instanceof MouseEvent) {
				/** @type {gg__Event} */
				const e = gg__Context_handle_mouse_event(g.valueOf(),event, gg__DOMEventType.mouse_up);
				if ((!builtin__isnil(g.val.config.event_fn).val ).valueOf()) {
					/** @type {gg__FNEvent} */
					const f = g.val.config.event_fn;
					f(e, g.val.config.user_data);
				}
				if ((!builtin__isnil(g.val.config.unclick_fn).val ).valueOf()) {
					/** @type {gg__FNUnClick} */
					const f = g.val.config.unclick_fn;
					f(e.mouse_x, e.mouse_y, e.mouse_button, g.val.config.user_data);
				}
			}
			
			else {
			}
			;
		}})()
		;
		/** @type {anon_fn_b4ecef44c914305a_js__event_7490} */
		const mouse_move_event_handler = (function () { 
		return function (event) {
			if (event instanceof MouseEvent) {
				/** @type {gg__Event} */
				const e = gg__Context_handle_mouse_event(g.valueOf(),event, gg__DOMEventType.mouse_move);
				if ((!builtin__isnil(g.val.config.event_fn).val ).valueOf()) {
					/** @type {gg__FNEvent} */
					const f = g.val.config.event_fn;
					f(e, g.val.config.user_data);
				}
				if ((!builtin__isnil(g.val.config.move_fn).val ).valueOf()) {
					/** @type {gg__FNMove} */
					const f = g.val.config.move_fn;
					f(e.mouse_x, e.mouse_y, g.val.config.user_data);
				}
			}
			
			else {
			}
			;
		}})()
		;
		/** @type {anon_fn_b4ecef44c914305a_js__event_7874} */
		const mouse_leave_event_handler = (function () { 
		return function (event) {
			if (event instanceof MouseEvent) {
				/** @type {gg__Event} */
				const e = gg__Context_handle_mouse_event(g.valueOf(),event, gg__DOMEventType.mouse_leave);
				if ((!builtin__isnil(g.val.config.event_fn).val ).valueOf()) {
					/** @type {gg__FNEvent} */
					const f = g.val.config.event_fn;
					f(e, g.val.config.user_data);
				}
				if ((!builtin__isnil(g.val.config.leave_fn).val ).valueOf()) {
					/** @type {gg__FNEvent} */
					const f = g.val.config.leave_fn;
					f(e, g.val.config.user_data);
				}
			}
			
			else {
			}
			;
		}})()
		;
		/** @type {anon_fn_b4ecef44c914305a_js__event_8242} */
		const mouse_enter_event_handler = (function () { 
		return function (event) {
			if (event instanceof MouseEvent) {
				/** @type {gg__Event} */
				const e = gg__Context_handle_mouse_event(g.valueOf(),event, gg__DOMEventType.mouse_enter);
				if ((!builtin__isnil(g.val.config.event_fn).val ).valueOf()) {
					/** @type {gg__FNEvent} */
					const f = g.val.config.event_fn;
					f(e, g.val.config.user_data);
				}
				if ((!builtin__isnil(g.val.config.enter_fn).val ).valueOf()) {
					/** @type {gg__FNEvent} */
					const f = g.val.config.enter_fn;
					f(e, g.val.config.user_data);
				}
			}
			
			else {
			}
			;
		}})()
		;
		/** @type {anon_fn_b4ecef44c914305a_js__event_8606} */
		const keydown_event_handler = (function () { 
		return function (event) {
			builtin__println (new string("keyboard"));
			if (event instanceof KeyboardEvent) {
				/** @type {gg__Event} */
				const e = gg__Context_handle_keyboard_event(g.valueOf(),event, gg__DOMEventType.key_down);
				if ((!builtin__isnil(g.val.config.event_fn).val ).valueOf()) {
					/** @type {gg__FNEvent} */
					const f = g.val.config.event_fn;
					f(e, g.val.config.user_data);
				}
				if ((!builtin__isnil(g.val.config.keydown_fn).val ).valueOf()) {
					/** @type {gg__FNKeyDown} */
					const f = g.val.config.keydown_fn;
					f(e.key_code, gg__Modifier.super, g.val.config.user_data);
				}
			}
			
			else {
			}
			;
		}})()
		;
		g.val.canvas.addEventListener(new string("mousedown").str, mouse_down_event_handler, {});
		js__dom__window().addEventListener(new string("mouseup").str, mouse_up_event_handler, {});
		g.val.canvas.addEventListener(new string("mousemove").str, mouse_move_event_handler, {});
		g.val.canvas.addEventListener(new string("mouseleave").str, mouse_leave_event_handler, {});
		g.val.canvas.addEventListener(new string("mouseenter").str, mouse_enter_event_handler, {});
		js__dom__document.addEventListener(new string("keydown").str, keydown_event_handler, {});
		return g;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function gg__Context_run(ctx) {
ctx = new $ref(ctx)
	try {
		gg__gg_animation_frame_fn(ctx);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function gg__Context_begin(ctx) {
ctx = new $ref(ctx)
	try {
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function gg__Context_end(ctx) {
ctx = new $ref(ctx)
	try {
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f32} x1
 * @param {f32} y1
 * @param {f32} x2
 * @param {f32} y2
 * @param {gx__Color} c
 * @returns {void}
*/
function gg__Context_draw_line(ctx, x1, y1, x2, y2, c) {
ctx = new $ref(ctx)
	try {
		ctx.val.context.beginPath();
		/** @type {js__dom__FillStyle} */
		ctx.val.context.strokeStyle = gx__Color_to_css_string(c,).str;
		ctx.val.context.moveTo(x1, y1);
		ctx.val.context.lineTo(x2, y2);
		ctx.val.context.stroke();
		ctx.val.context.closePath();
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function gg__Context_quit(ctx) {
ctx = new $ref(ctx)
	try {
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f32} x
 * @param {f32} y
 * @param {f32} w
 * @param {f32} h
 * @param {gx__Color} c
 * @returns {void}
*/
function gg__Context_draw_rect(ctx, x, y, w, h, c) {
ctx = new $ref(ctx)
	try {
		ctx.val.context.beginPath();
		/** @type {js__dom__FillStyle} */
		ctx.val.context.fillStyle = gx__Color_to_css_string(c,).str;
		ctx.val.context.fillRect(x, y, w, h);
		ctx.val.context.closePath();
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {gg__Context} g
 * @returns {void}
*/
function gg__gg_animation_frame_fn(g) {
g = new $ref(g)
	try {
		g.val.frame.val ++;
		g.val.context.clearRect(new int(0), new int(0), g.val.config.width, g.val.config.height);
		if ((!builtin__isnil(g.val.config.frame_fn).val ).valueOf()) {
			/** @type {gg__FNCb} */
			const f = g.val.config.frame_fn;
			f(g.val.user_data);
			/** @type {bool} */
			g.val.needs_refresh = new bool(new bool(false));
		}
		g.val.window.requestAnimationFrame((function () { 
		return function (time) {
			gg__gg_animation_frame_fn(g);
		}})()
		);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {MouseEvent} event
 * @param {gg__DOMEventType} typ
 * @returns {gg__Event}
*/
function gg__Context_handle_mouse_event(g, event, typ) {
g = new $ref(g)
	try {
		/** @type {gg__Event} */
		let e = new gg__Event({});
		/** @type {gg__DOMEventType} */
		e.typ = typ;
		/** @type {u64} */
		e.frame_count = new u64(g.val.frame);
		let _tmp86 = new int(event.button);
		
		if (vEq(_tmp86,new int(0))) {
			/** @type {gg__MouseButton} */
			e.mouse_button = gg__MouseButton.left;
		}
		else if (vEq(_tmp86,new int(1))) {
			/** @type {gg__MouseButton} */
			e.mouse_button = gg__MouseButton.middle;
		}
		else if (vEq(_tmp86,new int(2))) {
			/** @type {gg__MouseButton} */
			e.mouse_button = gg__MouseButton.right;
		}
		else {
			/** @type {gg__MouseButton} */
			e.mouse_button = gg__MouseButton.invalid;
		};
		/** @type {f32} */
		e.mouse_x = new f32(new int(event.offsetX));
		/** @type {f32} */
		e.mouse_y = new f32(new int(event.offsetY));
		/** @type {f32} */
		e.mouse_dx = new f32(new int(event.movementX));
		/** @type {f32} */
		e.mouse_dy = new f32(new int(event.movementY));
		/** @type {int} */
		const bitplace = new int(new int(event.button));
		/** @type {byte} */
		g.val.mbtn_mask.val = Math.floor(g.val.mbtn_mask | new byte(new byte(new int( new int(1).valueOf() << bitplace.valueOf()))));
		/** @type {int} */
		g.val.mouse_pos_x = new int(new int(event.offsetX));
		/** @type {int} */
		g.val.mouse_pos_y = new int(new int(event.offsetY));
		/** @type {int} */
		g.val.mouse_dx = new int(new int(event.movementX));
		/** @type {int} */
		g.val.mouse_dy = new int(new int(event.movementY));
		return e;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {KeyboardEvent} event
 * @param {gg__DOMEventType} typ
 * @returns {gg__Event}
*/
function gg__Context_handle_keyboard_event(g, event, typ) {
g = new $ref(g)
	try {
		/** @type {gg__Event} */
		let e = new gg__Event({});
		/** @type {gg__DOMEventType} */
		e.typ = typ;
		/** @type {u64} */
		e.frame_count = new u64(g.val.frame);
		let _tmp87 = new string(event.code);
		
		if (_tmp87.str === new string("Space").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.space;
		}
		else if (_tmp87.str === new string("Minus").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.minus;
		}
		else if (_tmp87.str === new string("Quote").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.apostrophe;
		}
		else if (_tmp87.str === new string("Comma").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.comma;
		}
		else if (_tmp87.str === new string("Period").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.period;
		}
		else if (_tmp87.str === new string("Digit0").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode._0;
		}
		else if (_tmp87.str === new string("Digit1").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode._1;
		}
		else if (_tmp87.str === new string("Digit2").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode._2;
		}
		else if (_tmp87.str === new string("Digit3").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode._3;
		}
		else if (_tmp87.str === new string("Digit4").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode._4;
		}
		else if (_tmp87.str === new string("Digit5").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode._5;
		}
		else if (_tmp87.str === new string("Digit6").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode._6;
		}
		else if (_tmp87.str === new string("Digit7").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode._7;
		}
		else if (_tmp87.str === new string("Digit8").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode._8;
		}
		else if (_tmp87.str === new string("Digit9").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode._9;
		}
		else if (_tmp87.str === new string("Semicolon").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.semicolon;
		}
		else if (_tmp87.str === new string("Equal").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.equal;
		}
		else if (_tmp87.str === new string("KeyA").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.a;
		}
		else if (_tmp87.str === new string("KeyB").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.b;
		}
		else if (_tmp87.str === new string("KeyC").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.c;
		}
		else if (_tmp87.str === new string("KeyD").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.d;
		}
		else if (_tmp87.str === new string("KeyE").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.e;
		}
		else if (_tmp87.str === new string("KeyF").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.f;
		}
		else if (_tmp87.str === new string("KeyG").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.g;
		}
		else if (_tmp87.str === new string("KeyH").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.h;
		}
		else if (_tmp87.str === new string("KeyI").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.i;
		}
		else if (_tmp87.str === new string("KeyJ").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.j;
		}
		else if (_tmp87.str === new string("KeyK").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.k;
		}
		else if (_tmp87.str === new string("KeyL").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.l;
		}
		else if (_tmp87.str === new string("KeyM").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.m;
		}
		else if (_tmp87.str === new string("KeyN").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.n;
		}
		else if (_tmp87.str === new string("KeyO").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.o;
		}
		else if (_tmp87.str === new string("KeyP").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.p;
		}
		else if (_tmp87.str === new string("KeyQ").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.q;
		}
		else if (_tmp87.str === new string("KeyR").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.r;
		}
		else if (_tmp87.str === new string("KeyS").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.s;
		}
		else if (_tmp87.str === new string("KeyT").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.t;
		}
		else if (_tmp87.str === new string("KeyU").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.u;
		}
		else if (_tmp87.str === new string("KeyV").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.v;
		}
		else if (_tmp87.str === new string("KeyW").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.w;
		}
		else if (_tmp87.str === new string("KeyX").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.x;
		}
		else if (_tmp87.str === new string("KeyY").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.y;
		}
		else if (_tmp87.str === new string("KeyZ").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.z;
		}
		else if (_tmp87.str === new string("BracketLeft").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.left_bracket;
		}
		else if (_tmp87.str === new string("BracketRight").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.right_bracket;
		}
		else if (_tmp87.str === new string("Backslash").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.backslash;
		}
		else if (_tmp87.str === new string("Backquote").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.grave_accent;
		}
		else if (_tmp87.str === new string("Escape").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.escape;
		}
		else if (_tmp87.str === new string("Enter").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.enter;
		}
		else if (_tmp87.str === new string("Tab").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.tab;
		}
		else if (_tmp87.str === new string("Backspace").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.backspace;
		}
		else if (_tmp87.str === new string("Insert").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.insert;
		}
		else if (_tmp87.str === new string("Delete").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.delete;
		}
		else if (_tmp87.str === new string("ArrowRight").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.right;
		}
		else if (_tmp87.str === new string("ArrowLeft").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.left;
		}
		else if (_tmp87.str === new string("ArrowUp").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.up;
		}
		else if (_tmp87.str === new string("ArrowDown").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.down;
		}
		else if (_tmp87.str === new string("PageUp").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.page_up;
		}
		else if (_tmp87.str === new string("PageDown").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.page_down;
		}
		else if (_tmp87.str === new string("Home").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.home;
		}
		else if (_tmp87.str === new string("End").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.end;
		}
		else if (_tmp87.str === new string("CapsLock").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.caps_lock;
		}
		else if (_tmp87.str === new string("ScrollLock").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.scroll_lock;
		}
		else if (_tmp87.str === new string("NumLock").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.num_lock;
		}
		else if (_tmp87.str === new string("PrintScreen").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.print_screen;
		}
		else if (_tmp87.str === new string("Pause").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.pause;
		}
		else if (_tmp87.str === new string("ShiftLeft").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.left_shift;
		}
		else if (_tmp87.str === new string("ShiftRight").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.right_shift;
		}
		else if (_tmp87.str === new string("AltLeft").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.left_alt;
		}
		else if (_tmp87.str === new string("AltRight").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.right_alt;
		}
		else if (_tmp87.str === new string("ControlLeft").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.left_control;
		}
		else if (_tmp87.str === new string("ControlRight").str) {
			/** @type {gg__KeyCode} */
			e.key_code = gg__KeyCode.right_control;
		}
		else {
			builtin__panic (new string(`todo: more keycodes (${new string(event.code)})`));
		};
		return e;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {gg__Size}
*/
function gg__screen_size() {
	try {
		return new gg__Size({});
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {gg__Size}
*/
function gg__Context_window_size(ctx) {
ctx = new $ref(ctx)
	try {
		return gg__window_size();
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {gx__Color} c
 * @returns {void}
*/
function gg__Context_set_bg_color(ctx, c) {
ctx = new $ref(ctx)
	try {
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace gg */
/**
 * @constructor
 * @param {{color?: gx__Color, line_type?: gg__PenLineType, thickness?: int}} init
*/
function gg__PenConfig({ color = new gx__Color({}), line_type = gg__PenLineType.solid, thickness = new int(1) }) {
	this.color = color
	this.line_type = line_type
	this.thickness = thickness
};
gg__PenConfig.prototype = {
	toString() {
		return `gg__PenConfig { color: ${this["color"].toString()} , line_type: ${this["line_type"].toString()} , thickness: ${this["thickness"].toString()} }`
	},
	/** @type {gx__Color} */
	color: new gx__Color({}),
	/** @type {gg__PenLineType} */
	line_type: undefined,
	/** @type {int} */
	thickness: new int(0),
	$toJS() { return this; }
	};

/**
 * @constructor
 * @param {{width?: int, height?: int}} init
*/
function gg__Size({ width = new int(0), height = new int(0) }) {
	this.width = width
	this.height = height
};
gg__Size.prototype = {
	toString() {
		return `gg__Size { width: ${this["width"].toString()} , height: ${this["height"].toString()} }`
	},
	/** @type {int} */
	width: new int(0),
	/** @type {int} */
	height: new int(0),
	$toJS() { return this; }
	};

/** @namespace gg */
/* [heap] */
/**
 * @constructor
 * @param {{id?: int, width?: int, height?: int, nr_channels?: int, ok?: bool, data?: voidptr, ext?: string, path?: string}} init
*/
function gg__Image({ id = new int(0), width = new int(0), height = new int(0), nr_channels = new int(0), ok = new bool(false), data = new voidptr(null), ext = new string(""), path = new string("") }) {
	this.id = id
	this.width = width
	this.height = height
	this.nr_channels = nr_channels
	this.ok = ok
	this.data = data
	this.ext = ext
	this.path = path
};
gg__Image.prototype = {
	toString() {
		return `gg__Image { id: ${this["id"].toString()} , width: ${this["width"].toString()} , height: ${this["height"].toString()} , nr_channels: ${this["nr_channels"].toString()} , ok: ${this["ok"].toString()} , data: ${this["data"].toString()} , ext: "${this["ext"].toString()}", path: "${this["path"].toString()}"}`
	},
	/** @type {int} */
	id: new int(0),
	/** @type {int} */
	width: new int(0),
	/** @type {int} */
	height: new int(0),
	/** @type {int} */
	nr_channels: new int(0),
	/** @type {bool} */
	ok: new bool(false),
	/** @type {voidptr} */
	data: new voidptr(null),
	/** @type {string} */
	ext: new string(""),
	/** @type {string} */
	path: new string(""),
	$toJS() { return this; }
	};

/**
 * @function
 * @param {gg__DrawImageConfig} config
 * @returns {void}
*/
function gg__Context_draw_image_with_config(ctx, config) {
ctx = new $ref(ctx)
	try {
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} path
 * @returns {gg__Image}
*/
function gg__Context_create_image(ctx, path) {
ctx = new $ref(ctx)
	try {
		return new gg__Image({});
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {Array_byte} bytes
 * @returns {gg__Image}
*/
function gg__Context_create_image_from_byte_array(ctx, bytes) {
ctx = new $ref(ctx)
	try {
		return new gg__Image({});
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace gg */
/**
 * @constructor
 * @param {{flip_x?: bool, flip_y?: bool, img?: gg__Image, img_id?: int, img_rect?: gg__Rect, part_rect?: gg__Rect, rotate?: int, z?: f32, color?: gx__Color}} init
*/
function gg__DrawImageConfig({ flip_x = new bool(false), flip_y = new bool(false), img = new voidptr(new int(0)), img_id = new int(0), img_rect = new gg__Rect({}), part_rect = new gg__Rect({}), rotate = new int(0), z = new f32(0), color = gx__white }) {
	this.flip_x = flip_x
	this.flip_y = flip_y
	this.img = img
	this.img_id = img_id
	this.img_rect = img_rect
	this.part_rect = part_rect
	this.rotate = rotate
	this.z = z
	this.color = color
};
gg__DrawImageConfig.prototype = {
	toString() {
		return `gg__DrawImageConfig { flip_x: ${this["flip_x"].toString()} , flip_y: ${this["flip_y"].toString()} , img: ${this["img"].toString()} , img_id: ${this["img_id"].toString()} , img_rect: ${this["img_rect"].toString()} , part_rect: ${this["part_rect"].toString()} , rotate: ${this["rotate"].toString()} , z: ${this["z"].toString()} , color: ${this["color"].toString()} }`
	},
	/** @type {bool} */
	flip_x: new bool(false),
	/** @type {bool} */
	flip_y: new bool(false),
	/** @type {gg__Image} */
	img: new gg__Image({}),
	/** @type {int} */
	img_id: new int(0),
	/** @type {gg__Rect} */
	img_rect: new gg__Rect({}),
	/** @type {gg__Rect} */
	part_rect: new gg__Rect({}),
	/** @type {int} */
	rotate: new int(0),
	/** @type {f32} */
	z: new f32(0),
	/** @type {gx__Color} */
	color: new gx__Color({}),
	$toJS() { return this; }
	};

/**
 * @constructor
 * @param {{x?: f32, y?: f32, width?: f32, height?: f32}} init
*/
function gg__Rect({ x = new f32(0), y = new f32(0), width = new f32(0), height = new f32(0) }) {
	this.x = x
	this.y = y
	this.width = width
	this.height = height
};
gg__Rect.prototype = {
	toString() {
		return `gg__Rect { x: ${this["x"].toString()} , y: ${this["y"].toString()} , width: ${this["width"].toString()} , height: ${this["height"].toString()} }`
	},
	/** @type {f32} */
	x: new f32(0),
	/** @type {f32} */
	y: new f32(0),
	/** @type {f32} */
	width: new f32(0),
	/** @type {f32} */
	height: new f32(0),
	$toJS() { return this; }
	};

/**
 * @function
 * @param {gg__Image} img
 * @returns {int}
*/
function gg__Context_cache_image(ctx, img) {
ctx = new $ref(ctx)
	try {
		array_push(ctx.val.image_cache,img,false);
		/** @type {int} */
		const image_idx = new int(new int( ctx.val.image_cache.len.valueOf() - new int(1).valueOf()));
		/** @type {int} */
		ctx.val.image_cache.arr.get(new int(image_idx.valueOf())).id = new int(image_idx);
		return image_idx;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} image_idx
 * @returns {gg__Image}
*/
function gg__Context_get_cached_image_by_idx(ctx, image_idx) {
ctx = new $ref(ctx)
	try {
		return new $ref(ctx.val.image_cache.arr.get(new int(image_idx.valueOf())));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} image_idx
 * @returns {void}
*/
function gg__Context_remove_cached_image_by_idx(ctx, image_idx) {
ctx = new $ref(ctx)
	try {
		array_delete(ctx.val.image_cache,image_idx);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {gg__Rect} img_rect
 * @param {gg__Rect} part_rect
 * @param {gg__Image} img_
 * @returns {void}
*/
function gg__Context_draw_image_part(ctx, img_rect, part_rect, img_) {
ctx = new $ref(ctx)
img_ = new $ref(img_)
	try {
		gg__Context_draw_image_with_config(ctx.valueOf(),(function() {
			let _tmp88 = new gg__DrawImageConfig({});
			_tmp88.img = img_;
			_tmp88.img_rect = img_rect;
			_tmp88.part_rect = part_rect;
			return _tmp88;
		})()
		);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f32} x
 * @param {f32} y
 * @param {f32} width
 * @param {f32} height
 * @param {gg__Image} img_
 * @returns {void}
*/
function gg__Context_draw_image_flipped(ctx, x, y, width, height, img_) {
ctx = new $ref(ctx)
img_ = new $ref(img_)
	try {
		gg__Context_draw_image_with_config(ctx.valueOf(),(function() {
			let _tmp89 = new gg__DrawImageConfig({});
			_tmp89.flip_x = new bool(true);
			_tmp89.img = img_;
			_tmp89.img_rect = (function() {
				let _tmp90 = new gg__Rect({});
				_tmp90.x = x;
				_tmp90.y = y;
				_tmp90.width = width;
				_tmp90.height = height;
				return _tmp90;
			})()
			;
			return _tmp89;
		})()
		);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f32} x
 * @param {f32} y
 * @param {f32} width
 * @param {f32} height
 * @param {int} id
 * @returns {void}
*/
function gg__Context_draw_image_by_id(ctx, x, y, width, height, id) {
ctx = new $ref(ctx)
	try {
		gg__Context_draw_image_with_config(ctx.valueOf(),(function() {
			let _tmp91 = new gg__DrawImageConfig({});
			_tmp91.img_id = id;
			_tmp91.img_rect = (function() {
				let _tmp92 = new gg__Rect({});
				_tmp92.x = x;
				_tmp92.y = y;
				_tmp92.width = width;
				_tmp92.height = height;
				return _tmp92;
			})()
			;
			return _tmp91;
		})()
		);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f32} x
 * @param {f32} y
 * @param {f32} z
 * @param {f32} width
 * @param {f32} height
 * @param {gg__Image} img_
 * @returns {void}
*/
function gg__Context_draw_image_3d(ctx, x, y, z, width, height, img_) {
ctx = new $ref(ctx)
img_ = new $ref(img_)
	try {
		gg__Context_draw_image_with_config(ctx.valueOf(),(function() {
			let _tmp93 = new gg__DrawImageConfig({});
			_tmp93.img = img_;
			_tmp93.img_rect = (function() {
				let _tmp94 = new gg__Rect({});
				_tmp94.x = x;
				_tmp94.y = y;
				_tmp94.width = width;
				_tmp94.height = height;
				return _tmp94;
			})()
			;
			_tmp93.z = z;
			return _tmp93;
		})()
		);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace gg */
function gg__Color(val) { return val;  }
/** @namespace gg */
/** @namespace gg */
/* [heap] */
/**
 * @constructor
 * @param {{stop_at_frame?: i64, screenshot_frames?: Array_u64, screenshot_folder?: string, screenshot_prefix?: string}} init
*/
function gg__SSRecorderSettings({ stop_at_frame = new int(-1), screenshot_frames = empty_array(), screenshot_folder = new string(""), screenshot_prefix = new string("") }) {
	this.stop_at_frame = stop_at_frame
	this.screenshot_frames = screenshot_frames
	this.screenshot_folder = screenshot_folder
	this.screenshot_prefix = screenshot_prefix
};
gg__SSRecorderSettings.prototype = {
	toString() {
		return `gg__SSRecorderSettings { stop_at_frame: ${this["stop_at_frame"].toString()} , screenshot_frames: ${this["screenshot_frames"].toString()} , screenshot_folder: "${this["screenshot_folder"].toString()}", screenshot_prefix: "${this["screenshot_prefix"].toString()}"}`
	},
	/** @type {i64} */
	stop_at_frame: new i64(0),
	/** @type {Array_u64} */
	screenshot_frames: empty_array(),
	/** @type {string} */
	screenshot_folder: new string(""),
	/** @type {string} */
	screenshot_prefix: new string(""),
	$toJS() { return this; }
	};

/** @namespace gg */
/**
 * @function
 * @param {int} x
 * @param {int} y
 * @param {string} text_
 * @param {gx__TextCfg} cfg
 * @returns {void}
*/
function gg__Context_draw_text(ctx, x, y, text_, cfg) {
ctx = new $ref(ctx)
	try {
		/** @type {js__dom__FillStyle} */
		gg__Context_get_js_context(ctx.valueOf(),).fillStyle = gx__Color_to_css_string(cfg.color,).str;
		/** @type {String} */
		gg__Context_get_js_context(ctx.valueOf(),).font = gx__TextCfg_to_css_string(cfg,).str;
		gg__Context_get_js_context(ctx.valueOf(),).fillText(text_.str, x, y);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} s
 * @returns {int}
*/
function gg__Context_text_width(ctx, s) {
ctx = new $ref(ctx)
	try {
		/** @type {TextMetrics} */
		const metrics = gg__Context_get_js_context(ctx.valueOf(),).measureText(s.str);
		return new int(metrics.width);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} s
 * @returns {int}
*/
function gg__Context_text_height(ctx, s) {
ctx = new $ref(ctx)
	try {
		/** @type {TextMetrics} */
		const metrics = gg__Context_get_js_context(ctx.valueOf(),).measureText(s.str);
		/** @type {Number} */
		const height = new JS__Number( metrics.actualBoundingBoxAscent.valueOf() + metrics.actualBoundingBoxDescent.valueOf());
		return new int(height);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} s
 * @returns {multi_return_int_int}
*/
function gg__Context_text_size(ctx, s) {
ctx = new $ref(ctx)
	try {
		/** @type {TextMetrics} */
		const metrics = gg__Context_get_js_context(ctx.valueOf(),).measureText(s.str);
		/** @type {Number} */
		const height = new JS__Number( metrics.actualBoundingBoxAscent.valueOf() + metrics.actualBoundingBoxDescent.valueOf());
		return [new int(metrics.width), new int(height)];
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {gx__TextCfg} cfg
 * @returns {void}
*/
function gg__Context_set_cfg(ctx, cfg) {
ctx = new $ref(ctx)
	try {
		/** @type {String} */
		gg__Context_get_js_context(ctx.valueOf(),).font = gx__TextCfg_to_css_string(cfg,).str;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace gg */
/**
 * @constructor
 * @param {{font_path?: string, custom_bold_font_path?: string, scale?: f32, font_size?: int, bytes_normal?: Array_byte, bytes_bold?: Array_byte, bytes_mono?: Array_byte, bytes_italic?: Array_byte}} init
*/
function gg__FTConfig({ font_path = new string(""), custom_bold_font_path = new string(""), scale = new f32(1.0), font_size = new int(0), bytes_normal = empty_array(), bytes_bold = empty_array(), bytes_mono = empty_array(), bytes_italic = empty_array() }) {
	this.font_path = font_path
	this.custom_bold_font_path = custom_bold_font_path
	this.scale = scale
	this.font_size = font_size
	this.bytes_normal = bytes_normal
	this.bytes_bold = bytes_bold
	this.bytes_mono = bytes_mono
	this.bytes_italic = bytes_italic
};
gg__FTConfig.prototype = {
	toString() {
		return `gg__FTConfig { font_path: "${this["font_path"].toString()}", custom_bold_font_path: "${this["custom_bold_font_path"].toString()}", scale: ${this["scale"].toString()} , font_size: ${this["font_size"].toString()} , bytes_normal: ${this["bytes_normal"].toString()} , bytes_bold: ${this["bytes_bold"].toString()} , bytes_mono: ${this["bytes_mono"].toString()} , bytes_italic: ${this["bytes_italic"].toString()} }`
	},
	/** @type {string} */
	font_path: new string(""),
	/** @type {string} */
	custom_bold_font_path: new string(""),
	/** @type {f32} */
	scale: new f32(0),
	/** @type {int} */
	font_size: new int(0),
	/** @type {Array_byte} */
	bytes_normal: empty_array(),
	/** @type {Array_byte} */
	bytes_bold: empty_array(),
	/** @type {Array_byte} */
	bytes_mono: empty_array(),
	/** @type {Array_byte} */
	bytes_italic: empty_array(),
	$toJS() { return this; }
	};

/**
 * @constructor
 * @param {{x?: int, y?: int, text?: string, cfg?: gx__TextCfg}} init
*/
function gg__StringToRender({ x = new int(0), y = new int(0), text = new string(""), cfg = new gx__TextCfg({}) }) {
	this.x = x
	this.y = y
	this.text = text
	this.cfg = cfg
};
gg__StringToRender.prototype = {
	toString() {
		return `gg__StringToRender { x: ${this["x"].toString()} , y: ${this["y"].toString()} , text: "${this["text"].toString()}", cfg: ${this["cfg"].toString()} }`
	},
	/** @type {int} */
	x: new int(0),
	/** @type {int} */
	y: new int(0),
	/** @type {string} */
	text: new string(""),
	/** @type {gx__TextCfg} */
	cfg: new gx__TextCfg({}),
	$toJS() { return this; }
	};

/** @namespace gg */
/* [inline] */
/**
 * @function
 * @returns {bool}
*/
function gg__MouseButtons_is_empty(e) {
e = new $ref(e)
	try {
		return new bool(new int((e).valueOf()).valueOf() == new int(0).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {gg__MouseButtons} flag
 * @returns {bool}
*/
function gg__MouseButtons_has(e, flag) {
e = new $ref(e)
	try {
		return new bool((new int( new int((e).valueOf()).valueOf() & (new int(flag)).valueOf())).valueOf() != new int(0).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {gg__MouseButtons} flag
 * @returns {bool}
*/
function gg__MouseButtons_all(e, flag) {
e = new $ref(e)
	try {
		return new bool((new int( new int((e).valueOf()).valueOf() & (new int(flag)).valueOf())).valueOf() == new int(flag).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {gg__MouseButtons} flag
 * @returns {void}
*/
function gg__MouseButtons_set(e, flag) {
e = new $ref(e)
	try {
		{
			/** @type {gg__MouseButtons} */
			(e).valueOf() = new gg__MouseButtons(new int( new int((e).valueOf()).valueOf() | (new int(flag)).valueOf()));
		}
		
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {gg__MouseButtons} flag
 * @returns {void}
*/
function gg__MouseButtons_clear(e, flag) {
e = new $ref(e)
	try {
		{
			/** @type {gg__MouseButtons} */
			(e).valueOf() = new gg__MouseButtons(new int( new int((e).valueOf()).valueOf() & ~(new int(flag)).val .valueOf()));
		}
		
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {gg__MouseButtons} flag
 * @returns {void}
*/
function gg__MouseButtons_toggle(e, flag) {
e = new $ref(e)
	try {
		{
			/** @type {gg__MouseButtons} */
			(e).valueOf() = new gg__MouseButtons(new int( new int((e).valueOf()).valueOf() ^ (new int(flag)).valueOf()));
		}
		
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @returns {bool}
*/
function gg__Modifier_is_empty(e) {
e = new $ref(e)
	try {
		return new bool(new int((e).valueOf()).valueOf() == new int(0).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {gg__Modifier} flag
 * @returns {bool}
*/
function gg__Modifier_has(e, flag) {
e = new $ref(e)
	try {
		return new bool((new int( new int((e).valueOf()).valueOf() & (new int(flag)).valueOf())).valueOf() != new int(0).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {gg__Modifier} flag
 * @returns {bool}
*/
function gg__Modifier_all(e, flag) {
e = new $ref(e)
	try {
		return new bool((new int( new int((e).valueOf()).valueOf() & (new int(flag)).valueOf())).valueOf() == new int(flag).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {gg__Modifier} flag
 * @returns {void}
*/
function gg__Modifier_set(e, flag) {
e = new $ref(e)
	try {
		{
			/** @type {gg__Modifier} */
			(e).valueOf() = new gg__Modifier(new int( new int((e).valueOf()).valueOf() | (new int(flag)).valueOf()));
		}
		
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {gg__Modifier} flag
 * @returns {void}
*/
function gg__Modifier_clear(e, flag) {
e = new $ref(e)
	try {
		{
			/** @type {gg__Modifier} */
			(e).valueOf() = new gg__Modifier(new int( new int((e).valueOf()).valueOf() & ~(new int(flag)).val .valueOf()));
		}
		
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {gg__Modifier} flag
 * @returns {void}
*/
function gg__Modifier_toggle(e, flag) {
e = new $ref(e)
	try {
		{
			/** @type {gg__Modifier} */
			(e).valueOf() = new gg__Modifier(new int( new int((e).valueOf()).valueOf() ^ (new int(flag)).valueOf()));
		}
		
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/* [inline] */
/**
 * @function
 * @param {f64} a
 * @returns {f64}
*/
function math__abs(a) {
	try {
		return Math.abs(a);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/* [deprecated] */
/**
 * @function
 * @deprecated
 * @param {f64} x
 * @returns {f64}
*/
function math__fabs(x) {
	try {
		if ((new bool(x.valueOf() > new f32(0.0).valueOf())).valueOf()) {
			return x;
		}
		return -x.val ;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/**
 * @function
 * @param {int} sign
 * @returns {f64}
*/
function math__inf(sign) {
	try {
		/** @type {f64} */
		let res = new f64(new f32(0.0));
		if ((new bool(sign.valueOf() >= new int(0).valueOf())).valueOf()) {
			res.val = Infinity
		} else {
			res.val = -Infinity
		}
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {f64}
*/
function math__nan() {
	try {
		/** @type {f64} */
		let res = new f64(new f32(0.0));
		res.val = NaN
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/** @constant {u64} */
let math__uvnan = undefined;
/** @constant {u64} */
let math__uvinf = undefined;
/** @constant {u64} */
let math__uvneginf = undefined;
/** @constant {u64} */
let math__uvone = undefined;
/** @constant {int} */
const math__mask = new int(0x7FF);
/** @constant {int} */
let math__shift = undefined;
/** @constant {int} */
const math__bias = new int(1023);
/** @constant {u64} */
let math__normalize_smallest_mask = undefined;
/** @constant {u64} */
let math__sign_mask = undefined;
/** @constant {u64} */
let math__frac_mask = undefined;

/**
 * @function
 * @param {int} sign
 * @returns {f64}
*/
function math__pure_v_but_overriden_by_js_inf(sign) {
	try {
		/** @type {u64} */
		const v = new u64(((new bool(sign.valueOf() >= new int(0).valueOf())).valueOf() ? math__uvinf : math__uvneginf));
		return math__f64_from_bits(v);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {f64}
*/
function math__pure_v_but_overriden_by_js_nan() {
	try {
		return math__f64_from_bits(math__uvnan);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} f
 * @returns {bool}
*/
function math__is_nan(f) {
	try {
		return new bool(f.valueOf() != f.valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} f
 * @param {int} sign
 * @returns {bool}
*/
function math__is_inf(f, sign) {
	try {
		return new bool( (new bool( new bool(sign.valueOf() >= new int(0).valueOf()).valueOf() && new bool(f.valueOf() > math__max_f64.valueOf()).valueOf())).valueOf() || (new bool( new bool(sign.valueOf() <= new int(0).valueOf()).valueOf() && new bool(f.valueOf() < -math__max_f64.val .valueOf()).valueOf())).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} f
 * @returns {bool}
*/
function math__is_finite(f) {
	try {
		return new bool( !math__is_nan(f).val .valueOf() && !math__is_inf(f, new int(0)).val .valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} x
 * @returns {multi_return_f64_int}
*/
function math__normalize(x) {
	try {
		/** @type {f64} */
		const smallest_normal = new f64(new f32(2.2250738585072014e-308));
		if ((new bool(math__abs(x).valueOf() < smallest_normal.valueOf())).valueOf()) {
			return [new f64( BigInt(x.valueOf()) * BigInt(math__normalize_smallest_mask.valueOf())), new int(-52)];
		}
		return [x, new int(0)];
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/* [inline] */
/**
 * @function
 * @param {f64} a
 * @returns {f64}
*/
function math__cbrt(a) {
	try {
		return Math.cbrt(a);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/**
 * @function
 * @param {f64} a
 * @returns {f64}
*/
function math__pure_v_but_overriden_by_js_cbrt(a) {
	try {
		/** @type {f64} */
		let x = new f64(a);
		/** @type {int} */
		const b1 = new int(new int(715094163));
		/** @type {int} */
		const b2 = new int(new int(696219795));
		/** @type {f64} */
		const c = new f64(new f32(5.42857142857142815906e-01));
		/** @type {f64} */
		const d = new f64(new f32(-7.05306122448979611050e-01));
		/** @type {f64} */
		const e_ = new f64(new f32(1.41428571428571436819e+00));
		/** @type {f64} */
		const f = new f64(new f32(1.60714285714285720630e+00));
		/** @type {f64} */
		const g = new f64(new f32(3.57142857142857150787e-01));
		/** @type {f64} */
		const smallest_normal = new f64(new f32(2.22507385850720138309e-308));
		if ((new bool( new bool( new bool(x.valueOf() == new f32(0.0).valueOf()).valueOf() || math__is_nan(x).valueOf()).valueOf() || math__is_inf(x, new int(0)).valueOf())).valueOf()) {
			return x;
		}
		/** @type {bool} */
		let sign = new bool(new bool(false));
		if ((new bool(x.valueOf() < new int(0).valueOf())).valueOf()) {
			/** @type {f64} */
			x = new f64(-x.val );
			/** @type {bool} */
			sign = new bool(new bool(true));
		}
		/** @type {f64} */
		let t = new f64(math__f64_from_bits(new u64( BigInt(math__f64_bits(x).valueOf()) / BigInt(new u64(new u64( BigInt(new int(3).valueOf()) + BigInt((new u64( BigInt(new u64(b1).valueOf()) << BigInt(new int(32).valueOf()))).valueOf()))).valueOf()))));
		if ((new bool(x.valueOf() < smallest_normal.valueOf())).valueOf()) {
			/** @type {f64} */
			t = new f64(new f64(new u64( BigInt(new u64(BigInt(1n)).valueOf()) << BigInt(new int(54).valueOf()))));
			/** @type {f64} */
			t.val = Math.floor(t * new f64(x));
			/** @type {f64} */
			t = new f64(math__f64_from_bits(new u64( BigInt(math__f64_bits(t).valueOf()) / BigInt(new u64(new u64( BigInt(new int(3).valueOf()) + BigInt((new u64( BigInt(new u64(b2).valueOf()) << BigInt(new int(32).valueOf()))).valueOf()))).valueOf()))));
		}
		/** @type {f64} */
		let r = new f64(new f64( new f64( t.valueOf() * t.valueOf()).valueOf() / x.valueOf()));
		/** @type {f64} */
		let s = new f64(new f64( c.valueOf() + new f64( r.valueOf() * t.valueOf()).valueOf()));
		/** @type {f64} */
		t.val = Math.floor(t * new f64(new f64( g.valueOf() + new f64( f.valueOf() / (new f64( new f64( s.valueOf() + e_.valueOf()).valueOf() + new f64( d.valueOf() / s.valueOf()).valueOf())).valueOf()).valueOf())));
		/** @type {f64} */
		t = new f64(math__f64_from_bits(new u64( BigInt(new u64( BigInt(math__f64_bits(t).valueOf()) & BigInt((new u64( BigInt(new u64(BigInt(0xffffffffcn)).valueOf()) << BigInt(new int(28).valueOf()))).valueOf())).valueOf()) + BigInt((new u64( BigInt(new u64(BigInt(1n)).valueOf()) << BigInt(new int(30).valueOf()))).valueOf()))));
		/** @type {f64} */
		s = new f64(new f64( t.valueOf() * t.valueOf()));
		/** @type {f64} */
		r = new f64(new f64( x.valueOf() / s.valueOf()));
		/** @type {f64} */
		const w = new f64(new f64( t.valueOf() + t.valueOf()));
		/** @type {f64} */
		r = new f64(new f64( (new f64( r.valueOf() - t.valueOf())).valueOf() / (new f64( w.valueOf() + r.valueOf())).valueOf()));
		/** @type {f64} */
		t = new f64(new f64( t.valueOf() + new f64( t.valueOf() * r.valueOf()).valueOf()));
		if ((sign).valueOf()) {
			/** @type {f64} */
			t = new f64(-t.val );
		}
		return t;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/** @constant {f64} */
const math__e = new f32(2.71828182845904523536028747135266249775724709369995957496696763);
/** @constant {f64} */
const math__pi = new f32(3.14159265358979323846264338327950288419716939937510582097494459);
/** @constant {f64} */
let math__pi_2 = undefined;
/** @constant {f64} */
let math__pi_4 = undefined;
/** @constant {f64} */
const math__phi = new f32(1.61803398874989484820458683436563811772030917980576286213544862);
/** @constant {f64} */
const math__tau = new f32(6.28318530717958647692528676655900576839433879875021164194988918);
/** @constant {f64} */
const math__sqrt2 = new f32(1.41421356237309504880168872420969807856967187537694807317667974);
/** @constant {f64} */
const math__sqrt_e = new f32(1.64872127070012814684865078781416357165377610071014801157507931);
/** @constant {f64} */
const math__sqrt_pi = new f32(1.77245385090551602729816748334114518279754945612238712821380779);
/** @constant {f64} */
const math__sqrt_tau = new f32(2.50662827463100050241576528481104525300698674060993831662992357);
/** @constant {f64} */
const math__sqrt_phi = new f32(1.27201964951406896425242246173749149171560804184009624861664038);
/** @constant {f64} */
const math__ln2 = new f32(0.693147180559945309417232121458176568075500134360255254120680009);
/** @constant {f64} */
let math__log2_e = undefined;
/** @constant {f64} */
const math__ln10 = new f32(2.30258509299404568401799145468436420760110148862877297603332790);
/** @constant {f64} */
let math__log10_e = undefined;

/** @constant {f64} */
const math__max_f32 = new f32(3.40282346638528859811704183484516925440e+38);
/** @constant {f64} */
const math__smallest_non_zero_f32 = new f32(1.401298464324817070923729583289916131280e-45);
/** @constant {f64} */
const math__max_f64 = new f32(1.797693134862315708145274237317043567981e+308);
/** @constant {f64} */
const math__smallest_non_zero_f64 = new f32(4.940656458412465441765687928682213723651e-324);

/** @constant {int} */
const math__max_i8 = new int(127);
/** @constant {int} */
const math__min_i8 = new int(-128);
/** @constant {int} */
const math__max_i16 = new int(32767);
/** @constant {int} */
const math__min_i16 = new int(-32768);
/** @constant {int} */
const math__max_i32 = new int(2147483647);
/** @constant {int} */
const math__min_i32 = new int(-2147483648);
/** @constant {i64} */
let math__min_i64 = undefined;
/** @constant {i64} */
let math__max_i64 = undefined;
/** @constant {int} */
const math__max_u8 = new int(255);
/** @constant {int} */
const math__max_u16 = new int(65535);
/** @constant {u32} */
let math__max_u32 = undefined;
/** @constant {u64} */
let math__max_u64 = undefined;

/** @namespace math */
/**
 * @function
 * @param {f64} x
 * @param {f64} y
 * @returns {f64}
*/
function math__mod(x, y) {
	try {
		return math__fmod(x, y);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} x
 * @param {f64} y
 * @returns {f64}
*/
function math__fmod(x, y) {
	try {
		if ((new bool( new bool( new bool( new bool(y.valueOf() == new int(0).valueOf()).valueOf() || math__is_inf(x, new int(0)).valueOf()).valueOf() || math__is_nan(x).valueOf()).valueOf() || math__is_nan(y).valueOf())).valueOf()) {
			return math__nan();
		}
		/** @type {f64} */
		const abs_y = new f64(math__abs(y));
		let [abs_y_fr, abs_y_exp] = math__frexp(abs_y);
		/** @type {f64} */
		let r = new f64(x);
		if ((new bool(x.valueOf() < new int(0).valueOf())).valueOf()) {
			/** @type {f64} */
			r = new f64(-x.val );
		}
		while (+new bool(r.valueOf() >= abs_y.valueOf())) {
			try { 
				let [rfr, rexp] = math__frexp(r);
				if ((new bool(rfr.valueOf() < abs_y_fr.valueOf())).valueOf()) {
					/** @type {int} */
					rexp = new int(new int( rexp.valueOf() - new int(1).valueOf()));
				}
				/** @type {f64} */
				r = new f64(new f64( r.valueOf() - math__ldexp(abs_y, new int( rexp.valueOf() - abs_y_exp.valueOf())).valueOf()));
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		if ((new bool(x.valueOf() < new int(0).valueOf())).valueOf()) {
			/** @type {f64} */
			r = new f64(-r.val );
		}
		return r;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {i64} a_
 * @param {i64} b_
 * @returns {i64}
*/
function math__gcd(a_, b_) {
	try {
		/** @type {i64} */
		let a = new i64(a_);
		/** @type {i64} */
		let b = new i64(b_);
		if ((new bool(a.valueOf() < new int(0).valueOf())).valueOf()) {
			/** @type {i64} */
			a = new i64(-a.val );
		}
		if ((new bool(b.valueOf() < new int(0).valueOf())).valueOf()) {
			/** @type {i64} */
			b = new i64(-b.val );
		}
		while (+new bool(b.valueOf() != new int(0).valueOf())) {
			try { 
				/** @type {i64} */
				a.val = a % new i64(b);
				if ((new bool(a.valueOf() == new int(0).valueOf())).valueOf()) {
					return b;
				}
				/** @type {i64} */
				b.val = b % new i64(a);
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return a;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {i64} a
 * @param {i64} b
 * @returns {multi_return_i64_i64_i64}
*/
function math__egcd(a, b) {
	try {
		/** @type {i64} */
		let old_r = new i64(a);
		/** @type {i64} */
		let r = new i64(b);
		/** @type {i64} */
		let old_s = new i64(new i64(BigInt(1n)));
		/** @type {i64} */
		let s = new i64(new i64(BigInt(0n)));
		/** @type {i64} */
		let old_t = new i64(new i64(BigInt(0n)));
		/** @type {i64} */
		let t = new i64(new i64(BigInt(1n)));
		while (+new bool(r.valueOf() != new int(0).valueOf())) {
			try { 
				/** @type {i64} */
				const quot = new i64(new i64( BigInt(old_r.valueOf()) / BigInt(r.valueOf())));
				/** @type {i64} */
				old_r = new i64(r);
				/** @type {i64} */
				r = new i64(new i64( BigInt(old_r.valueOf()) % BigInt(r.valueOf())));
				/** @type {i64} */
				old_s = new i64(s);
				/** @type {i64} */
				s = new i64(new i64( BigInt(old_s.valueOf()) - BigInt(new i64( BigInt(quot.valueOf()) * BigInt(s.valueOf())).valueOf())));
				/** @type {i64} */
				old_t = new i64(t);
				/** @type {i64} */
				t = new i64(new i64( BigInt(old_t.valueOf()) - BigInt(new i64( BigInt(quot.valueOf()) * BigInt(t.valueOf())).valueOf())));
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return [((new bool(old_r.valueOf() < new int(0).valueOf())).valueOf() ? -old_r.val  : old_r), old_s, old_t];
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {i64} a
 * @param {i64} b
 * @returns {i64}
*/
function math__lcm(a, b) {
	try {
		if ((new bool(a.valueOf() == new int(0).valueOf())).valueOf()) {
			return a;
		}
		/** @type {i64} */
		const res = new i64(new i64( BigInt(a.valueOf()) * BigInt((new i64( BigInt(b.valueOf()) / BigInt(math__gcd(b, a).valueOf()))).valueOf())));
		if ((new bool(res.valueOf() < new int(0).valueOf())).valueOf()) {
			return -res.val ;
		}
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/** @constant {f64} */
const math__erx = new f32(8.45062911510467529297e-01);
/** @constant {f64} */
const math__efx = new f32(1.28379167095512586316e-01);
/** @constant {f64} */
const math__efx8 = new f32(1.02703333676410069053e+00);
/** @constant {f64} */
const math__pp0 = new f32(1.28379167095512558561e-01);
/** @constant {f64} */
const math__pp1 = new f32(-3.25042107247001499370e-01);
/** @constant {f64} */
const math__pp2 = new f32(-2.84817495755985104766e-02);
/** @constant {f64} */
const math__pp3 = new f32(-5.77027029648944159157e-03);
/** @constant {f64} */
const math__pp4 = new f32(-2.37630166566501626084e-05);
/** @constant {f64} */
const math__qq1 = new f32(3.97917223959155352819e-01);
/** @constant {f64} */
const math__qq2 = new f32(6.50222499887672944485e-02);
/** @constant {f64} */
const math__qq3 = new f32(5.08130628187576562776e-03);
/** @constant {f64} */
const math__qq4 = new f32(1.32494738004321644526e-04);
/** @constant {f64} */
const math__qq5 = new f32(-3.96022827877536812320e-06);
/** @constant {f64} */
const math__pa0 = new f32(-2.36211856075265944077e-03);
/** @constant {f64} */
const math__pa1 = new f32(4.14856118683748331666e-01);
/** @constant {f64} */
const math__pa2 = new f32(-3.72207876035701323847e-01);
/** @constant {f64} */
const math__pa3 = new f32(3.18346619901161753674e-01);
/** @constant {f64} */
const math__pa4 = new f32(-1.10894694282396677476e-01);
/** @constant {f64} */
const math__pa5 = new f32(3.54783043256182359371e-02);
/** @constant {f64} */
const math__pa6 = new f32(-2.16637559486879084300e-03);
/** @constant {f64} */
const math__qa1 = new f32(1.06420880400844228286e-01);
/** @constant {f64} */
const math__qa2 = new f32(5.40397917702171048937e-01);
/** @constant {f64} */
const math__qa3 = new f32(7.18286544141962662868e-02);
/** @constant {f64} */
const math__qa4 = new f32(1.26171219808761642112e-01);
/** @constant {f64} */
const math__qa5 = new f32(1.36370839120290507362e-02);
/** @constant {f64} */
const math__qa6 = new f32(1.19844998467991074170e-02);
/** @constant {f64} */
const math__ra0 = new f32(-9.86494403484714822705e-03);
/** @constant {f64} */
const math__ra1 = new f32(-6.93858572707181764372e-01);
/** @constant {f64} */
const math__ra2 = new f32(-1.05586262253232909814e+01);
/** @constant {f64} */
const math__ra3 = new f32(-6.23753324503260060396e+01);
/** @constant {f64} */
const math__ra4 = new f32(-1.62396669462573470355e+02);
/** @constant {f64} */
const math__ra5 = new f32(-1.84605092906711035994e+02);
/** @constant {f64} */
const math__ra6 = new f32(-8.12874355063065934246e+01);
/** @constant {f64} */
const math__ra7 = new f32(-9.81432934416914548592e+00);
/** @constant {f64} */
const math__sa1 = new f32(1.96512716674392571292e+01);
/** @constant {f64} */
const math__sa2 = new f32(1.37657754143519042600e+02);
/** @constant {f64} */
const math__sa3 = new f32(4.34565877475229228821e+02);
/** @constant {f64} */
const math__sa4 = new f32(6.45387271733267880336e+02);
/** @constant {f64} */
const math__sa5 = new f32(4.29008140027567833386e+02);
/** @constant {f64} */
const math__sa6 = new f32(1.08635005541779435134e+02);
/** @constant {f64} */
const math__sa7 = new f32(6.57024977031928170135e+00);
/** @constant {f64} */
const math__sa8 = new f32(-6.04244152148580987438e-02);
/** @constant {f64} */
const math__rb0 = new f32(-9.86494292470009928597e-03);
/** @constant {f64} */
const math__rb1 = new f32(-7.99283237680523006574e-01);
/** @constant {f64} */
const math__rb2 = new f32(-1.77579549177547519889e+01);
/** @constant {f64} */
const math__rb3 = new f32(-1.60636384855821916062e+02);
/** @constant {f64} */
const math__rb4 = new f32(-6.37566443368389627722e+02);
/** @constant {f64} */
const math__rb5 = new f32(-1.02509513161107724954e+03);
/** @constant {f64} */
const math__rb6 = new f32(-4.83519191608651397019e+02);
/** @constant {f64} */
const math__sb1 = new f32(3.03380607434824582924e+01);
/** @constant {f64} */
const math__sb2 = new f32(3.25792512996573918826e+02);
/** @constant {f64} */
const math__sb3 = new f32(1.53672958608443695994e+03);
/** @constant {f64} */
const math__sb4 = new f32(3.19985821950859553908e+03);
/** @constant {f64} */
const math__sb5 = new f32(2.55305040643316442583e+03);
/** @constant {f64} */
const math__sb6 = new f32(4.74528541206955367215e+02);
/** @constant {f64} */
const math__sb7 = new f32(-2.24409524465858183362e+01);

/**
 * @function
 * @param {f64} a
 * @returns {f64}
*/
function math__erf(a) {
	try {
		/** @type {f64} */
		let x = new f64(a);
		/** @type {f64} */
		const very_tiny = new f64(new f32(2.848094538889218e-306));
		/** @type {f64} */
		const small_ = new f64(new f64( new f32(1.0).valueOf() / new f64(new u64( BigInt(new u64(BigInt(1n)).valueOf()) << BigInt(new int(28).valueOf()))).valueOf()));
		if ((math__is_nan(x)).valueOf()) {
			return math__nan();
		}
		if ((math__is_inf(x, new int(1))).valueOf()) {
			return new f32(1.0);
		}
		if ((math__is_inf(x, new int(-1))).valueOf()) {
			return new f64(new int(-1));
		}
		/** @type {bool} */
		let sign = new bool(new bool(false));
		if ((new bool(x.valueOf() < new int(0).valueOf())).valueOf()) {
			/** @type {f64} */
			x = new f64(-x.val );
			/** @type {bool} */
			sign = new bool(new bool(true));
		}
		if ((new bool(x.valueOf() < new f32(0.84375).valueOf())).valueOf()) {
			/** @type {f64} */
			let temp = new f64(new f32(0.0));
			if ((new bool(x.valueOf() < small_.valueOf())).valueOf()) {
				if ((new bool(x.valueOf() < very_tiny.valueOf())).valueOf()) {
					/** @type {f64} */
					temp = new f64(new f64( new f32(0.125).valueOf() * (new f64( new f64( new f32(8.0).valueOf() * x.valueOf()).valueOf() + new f64( math__efx8.valueOf() * x.valueOf()).valueOf())).valueOf()));
				} else {
					/** @type {f64} */
					temp = new f64(new f64( x.valueOf() + new f64( math__efx.valueOf() * x.valueOf()).valueOf()));
				}
			} else {
				/** @type {f64} */
				const z = new f64(new f64( x.valueOf() * x.valueOf()));
				/** @type {f64} */
				const r = new f64(new f64( math__pp0.valueOf() + new f64( z.valueOf() * (new f64( math__pp1.valueOf() + new f64( z.valueOf() * (new f64( math__pp2.valueOf() + new f64( z.valueOf() * (new f64( math__pp3.valueOf() + new f64( z.valueOf() * math__pp4.valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf()));
				/** @type {f64} */
				const s_ = new f64(new f64( new f32(1.0).valueOf() + new f64( z.valueOf() * (new f64( math__qq1.valueOf() + new f64( z.valueOf() * (new f64( math__qq2.valueOf() + new f64( z.valueOf() * (new f64( math__qq3.valueOf() + new f64( z.valueOf() * (new f64( math__qq4.valueOf() + new f64( z.valueOf() * math__qq5.valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf()));
				/** @type {f64} */
				const y = new f64(new f64( r.valueOf() / s_.valueOf()));
				/** @type {f64} */
				temp = new f64(new f64( x.valueOf() + new f64( x.valueOf() * y.valueOf()).valueOf()));
			}
			if ((sign).valueOf()) {
				return -temp.val ;
			}
			return temp;
		}
		if ((new bool(x.valueOf() < new f32(1.25).valueOf())).valueOf()) {
			/** @type {f64} */
			const s_ = new f64(new f64( x.valueOf() - new int(1).valueOf()));
			/** @type {f64} */
			const p = new f64(new f64( math__pa0.valueOf() + new f64( s_.valueOf() * (new f64( math__pa1.valueOf() + new f64( s_.valueOf() * (new f64( math__pa2.valueOf() + new f64( s_.valueOf() * (new f64( math__pa3.valueOf() + new f64( s_.valueOf() * (new f64( math__pa4.valueOf() + new f64( s_.valueOf() * (new f64( math__pa5.valueOf() + new f64( s_.valueOf() * math__pa6.valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf()));
			/** @type {f64} */
			const q = new f64(new f64( new f32(1.0).valueOf() + new f64( s_.valueOf() * (new f64( math__qa1.valueOf() + new f64( s_.valueOf() * (new f64( math__qa2.valueOf() + new f64( s_.valueOf() * (new f64( math__qa3.valueOf() + new f64( s_.valueOf() * (new f64( math__qa4.valueOf() + new f64( s_.valueOf() * (new f64( math__qa5.valueOf() + new f64( s_.valueOf() * math__qa6.valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf()));
			if ((sign).valueOf()) {
				return new f64( -math__erx.val .valueOf() - new f64( p.valueOf() / q.valueOf()).valueOf());
			}
			return new f64( math__erx.valueOf() + new f64( p.valueOf() / q.valueOf()).valueOf());
		}
		if ((new bool(x.valueOf() >= new int(6).valueOf())).valueOf()) {
			if ((sign).valueOf()) {
				return new int(-1);
			}
			return new f32(1.0);
		}
		/** @type {f64} */
		const s_ = new f64(new f64( new f32(1.0).valueOf() / (new f64( x.valueOf() * x.valueOf())).valueOf()));
		/** @type {f64} */
		let r = new f64(new f32(0.0));
		/** @type {f64} */
		let s = new f64(new f32(0.0));
		if ((new bool(x.valueOf() < new float_literal( new f32(1.0).valueOf() / new f32(0.35).valueOf()).valueOf())).valueOf()) {
			/** @type {f64} */
			r = new f64(new f64( math__ra0.valueOf() + new f64( s_.valueOf() * (new f64( math__ra1.valueOf() + new f64( s_.valueOf() * (new f64( math__ra2.valueOf() + new f64( s_.valueOf() * (new f64( math__ra3.valueOf() + new f64( s_.valueOf() * (new f64( math__ra4.valueOf() + new f64( s_.valueOf() * (new f64( math__ra5.valueOf() + new f64( s_.valueOf() * (new f64( math__ra6.valueOf() + new f64( s_.valueOf() * math__ra7.valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf()));
			/** @type {f64} */
			s = new f64(new f64( new f32(1.0).valueOf() + new f64( s_.valueOf() * (new f64( math__sa1.valueOf() + new f64( s_.valueOf() * (new f64( math__sa2.valueOf() + new f64( s_.valueOf() * (new f64( math__sa3.valueOf() + new f64( s_.valueOf() * (new f64( math__sa4.valueOf() + new f64( s_.valueOf() * (new f64( math__sa5.valueOf() + new f64( s_.valueOf() * (new f64( math__sa6.valueOf() + new f64( s_.valueOf() * (new f64( math__sa7.valueOf() + new f64( s_.valueOf() * math__sa8.valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf()));
		} else {
			/** @type {f64} */
			r = new f64(new f64( math__rb0.valueOf() + new f64( s_.valueOf() * (new f64( math__rb1.valueOf() + new f64( s_.valueOf() * (new f64( math__rb2.valueOf() + new f64( s_.valueOf() * (new f64( math__rb3.valueOf() + new f64( s_.valueOf() * (new f64( math__rb4.valueOf() + new f64( s_.valueOf() * (new f64( math__rb5.valueOf() + new f64( s_.valueOf() * math__rb6.valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf()));
			/** @type {f64} */
			s = new f64(new f64( new f32(1.0).valueOf() + new f64( s_.valueOf() * (new f64( math__sb1.valueOf() + new f64( s_.valueOf() * (new f64( math__sb2.valueOf() + new f64( s_.valueOf() * (new f64( math__sb3.valueOf() + new f64( s_.valueOf() * (new f64( math__sb4.valueOf() + new f64( s_.valueOf() * (new f64( math__sb5.valueOf() + new f64( s_.valueOf() * (new f64( math__sb6.valueOf() + new f64( s_.valueOf() * math__sb7.valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf()));
		}
		/** @type {f64} */
		const z = new f64(math__f64_from_bits(new u64( BigInt(math__f64_bits(x).valueOf()) & BigInt(new int(0xffffffff00000000).valueOf()))));
		/** @type {f64} */
		const r_ = new f64(new f64( math__exp(new f64( new f64( -z.val .valueOf() * z.valueOf()).valueOf() - new f32(0.5625).valueOf())).valueOf() * math__exp(new f64( new f64( (new f64( z.valueOf() - x.valueOf())).valueOf() * (new f64( z.valueOf() + x.valueOf())).valueOf()).valueOf() + new f64( r.valueOf() / s.valueOf()).valueOf())).valueOf()));
		if ((sign).valueOf()) {
			return new f64( new f64( r_.valueOf() / x.valueOf()).valueOf() - new f32(1.0).valueOf());
		}
		return new f64( new f32(1.0).valueOf() - new f64( r_.valueOf() / x.valueOf()).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} a
 * @returns {f64}
*/
function math__erfc(a) {
	try {
		/** @type {f64} */
		let x = new f64(a);
		/** @type {f64} */
		const tiny = new f64(new f64( new f32(1.0).valueOf() / new f64(new u64( BigInt(new u64(BigInt(1n)).valueOf()) << BigInt(new int(56).valueOf()))).valueOf()));
		if ((math__is_nan(x)).valueOf()) {
			return math__nan();
		}
		if ((math__is_inf(x, new int(1))).valueOf()) {
			return new f32(0.0);
		}
		if ((math__is_inf(x, new int(-1))).valueOf()) {
			return new f32(2.0);
		}
		/** @type {bool} */
		let sign = new bool(new bool(false));
		if ((new bool(x.valueOf() < new int(0).valueOf())).valueOf()) {
			/** @type {f64} */
			x = new f64(-x.val );
			/** @type {bool} */
			sign = new bool(new bool(true));
		}
		if ((new bool(x.valueOf() < new f32(0.84375).valueOf())).valueOf()) {
			/** @type {f64} */
			let temp = new f64(new f32(0.0));
			if ((new bool(x.valueOf() < tiny.valueOf())).valueOf()) {
				/** @type {f64} */
				temp = new f64(x);
			} else {
				/** @type {f64} */
				const z = new f64(new f64( x.valueOf() * x.valueOf()));
				/** @type {f64} */
				const r = new f64(new f64( math__pp0.valueOf() + new f64( z.valueOf() * (new f64( math__pp1.valueOf() + new f64( z.valueOf() * (new f64( math__pp2.valueOf() + new f64( z.valueOf() * (new f64( math__pp3.valueOf() + new f64( z.valueOf() * math__pp4.valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf()));
				/** @type {f64} */
				const s_ = new f64(new f64( new f32(1.0).valueOf() + new f64( z.valueOf() * (new f64( math__qq1.valueOf() + new f64( z.valueOf() * (new f64( math__qq2.valueOf() + new f64( z.valueOf() * (new f64( math__qq3.valueOf() + new f64( z.valueOf() * (new f64( math__qq4.valueOf() + new f64( z.valueOf() * math__qq5.valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf()));
				/** @type {f64} */
				const y = new f64(new f64( r.valueOf() / s_.valueOf()));
				if ((new bool(x.valueOf() < new f32(0.25).valueOf())).valueOf()) {
					/** @type {f64} */
					temp = new f64(new f64( x.valueOf() + new f64( x.valueOf() * y.valueOf()).valueOf()));
				} else {
					/** @type {f64} */
					temp = new f64(new f64( new f32(0.5).valueOf() + (new f64( new f64( x.valueOf() * y.valueOf()).valueOf() + (new f64( x.valueOf() - new f32(0.5).valueOf())).valueOf())).valueOf()));
				}
			}
			if ((sign).valueOf()) {
				return new f64( new f32(1.0).valueOf() + temp.valueOf());
			}
			return new f64( new f32(1.0).valueOf() - temp.valueOf());
		}
		if ((new bool(x.valueOf() < new f32(1.25).valueOf())).valueOf()) {
			/** @type {f64} */
			const s_ = new f64(new f64( x.valueOf() - new int(1).valueOf()));
			/** @type {f64} */
			const p = new f64(new f64( math__pa0.valueOf() + new f64( s_.valueOf() * (new f64( math__pa1.valueOf() + new f64( s_.valueOf() * (new f64( math__pa2.valueOf() + new f64( s_.valueOf() * (new f64( math__pa3.valueOf() + new f64( s_.valueOf() * (new f64( math__pa4.valueOf() + new f64( s_.valueOf() * (new f64( math__pa5.valueOf() + new f64( s_.valueOf() * math__pa6.valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf()));
			/** @type {f64} */
			const q = new f64(new f64( new f32(1.0).valueOf() + new f64( s_.valueOf() * (new f64( math__qa1.valueOf() + new f64( s_.valueOf() * (new f64( math__qa2.valueOf() + new f64( s_.valueOf() * (new f64( math__qa3.valueOf() + new f64( s_.valueOf() * (new f64( math__qa4.valueOf() + new f64( s_.valueOf() * (new f64( math__qa5.valueOf() + new f64( s_.valueOf() * math__qa6.valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf()));
			if ((sign).valueOf()) {
				return new f64( new float_literal( new f32(1.0).valueOf() + math__erx.valueOf()).valueOf() + new f64( p.valueOf() / q.valueOf()).valueOf());
			}
			return new f64( new float_literal( new f32(1.0).valueOf() - math__erx.valueOf()).valueOf() - new f64( p.valueOf() / q.valueOf()).valueOf());
		}
		if ((new bool(x.valueOf() < new int(28).valueOf())).valueOf()) {
			/** @type {f64} */
			const s_ = new f64(new f64( new f32(1.0).valueOf() / (new f64( x.valueOf() * x.valueOf())).valueOf()));
			/** @type {f64} */
			let r = new f64(new f32(0.0));
			/** @type {f64} */
			let s = new f64(new f32(0.0));
			if ((new bool(x.valueOf() < new float_literal( new f32(1.0).valueOf() / new f32(0.35).valueOf()).valueOf())).valueOf()) {
				/** @type {f64} */
				r = new f64(new f64( math__ra0.valueOf() + new f64( s_.valueOf() * (new f64( math__ra1.valueOf() + new f64( s_.valueOf() * (new f64( math__ra2.valueOf() + new f64( s_.valueOf() * (new f64( math__ra3.valueOf() + new f64( s_.valueOf() * (new f64( math__ra4.valueOf() + new f64( s_.valueOf() * (new f64( math__ra5.valueOf() + new f64( s_.valueOf() * (new f64( math__ra6.valueOf() + new f64( s_.valueOf() * math__ra7.valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf()));
				/** @type {f64} */
				s = new f64(new f64( new f32(1.0).valueOf() + new f64( s_.valueOf() * (new f64( math__sa1.valueOf() + new f64( s_.valueOf() * (new f64( math__sa2.valueOf() + new f64( s_.valueOf() * (new f64( math__sa3.valueOf() + new f64( s_.valueOf() * (new f64( math__sa4.valueOf() + new f64( s_.valueOf() * (new f64( math__sa5.valueOf() + new f64( s_.valueOf() * (new f64( math__sa6.valueOf() + new f64( s_.valueOf() * (new f64( math__sa7.valueOf() + new f64( s_.valueOf() * math__sa8.valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf()));
			} else {
				if ((new bool( sign.valueOf() && new bool(x.valueOf() > new int(6).valueOf()).valueOf())).valueOf()) {
					return new f32(2.0);
				}
				/** @type {f64} */
				r = new f64(new f64( math__rb0.valueOf() + new f64( s_.valueOf() * (new f64( math__rb1.valueOf() + new f64( s_.valueOf() * (new f64( math__rb2.valueOf() + new f64( s_.valueOf() * (new f64( math__rb3.valueOf() + new f64( s_.valueOf() * (new f64( math__rb4.valueOf() + new f64( s_.valueOf() * (new f64( math__rb5.valueOf() + new f64( s_.valueOf() * math__rb6.valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf()));
				/** @type {f64} */
				s = new f64(new f64( new f32(1.0).valueOf() + new f64( s_.valueOf() * (new f64( math__sb1.valueOf() + new f64( s_.valueOf() * (new f64( math__sb2.valueOf() + new f64( s_.valueOf() * (new f64( math__sb3.valueOf() + new f64( s_.valueOf() * (new f64( math__sb4.valueOf() + new f64( s_.valueOf() * (new f64( math__sb5.valueOf() + new f64( s_.valueOf() * (new f64( math__sb6.valueOf() + new f64( s_.valueOf() * math__sb7.valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf()));
			}
			/** @type {f64} */
			const z = new f64(math__f64_from_bits(new u64( BigInt(math__f64_bits(x).valueOf()) & BigInt(new int(0xffffffff00000000).valueOf()))));
			/** @type {f64} */
			const r_ = new f64(new f64( math__exp(new f64( new f64( -z.val .valueOf() * z.valueOf()).valueOf() - new f32(0.5625).valueOf())).valueOf() * math__exp(new f64( new f64( (new f64( z.valueOf() - x.valueOf())).valueOf() * (new f64( z.valueOf() + x.valueOf())).valueOf()).valueOf() + new f64( r.valueOf() / s.valueOf()).valueOf())).valueOf()));
			if ((sign).valueOf()) {
				return new f64( new f32(2.0).valueOf() - new f64( r_.valueOf() / x.valueOf()).valueOf());
			}
			return new f64( r_.valueOf() / x.valueOf());
		}
		if ((sign).valueOf()) {
			return new f32(2.0);
		}
		return new f32(0.0);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/* [inline] */
/**
 * @function
 * @param {f64} x
 * @returns {f64}
*/
function math__exp(x) {
	try {
		/** @type {f64} */
		let res = new f64(new f32(0.0));
		res.val = Math.exp(x)
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/** @constant {f64} */
let math__f64_max_exp = undefined;
/** @constant {f64} */
let math__f64_min_exp = undefined;
/** @constant {f64} */
const math__threshold = new f32(7.09782712893383973096e+02);
/** @constant {f64} */
const math__ln2_x56 = new f32(3.88162421113569373274e+01);
/** @constant {f64} */
const math__ln2_halfx3 = new f32(1.03972077083991796413e+00);
/** @constant {f64} */
const math__ln2_half = new f32(3.46573590279972654709e-01);
/** @constant {f64} */
const math__ln2hi = new f32(6.93147180369123816490e-01);
/** @constant {f64} */
const math__ln2lo = new f32(1.90821492927058770002e-10);
/** @constant {f64} */
const math__inv_ln2 = new f32(1.44269504088896338700e+00);
/** @constant {f64} */
const math__expm1_q1 = new f32(-3.33333333333331316428e-02);
/** @constant {f64} */
const math__expm1_q2 = new f32(1.58730158725481460165e-03);
/** @constant {f64} */
const math__expm1_q3 = new f32(-7.93650757867487942473e-05);
/** @constant {f64} */
const math__expm1_q4 = new f32(4.00821782732936239552e-06);
/** @constant {f64} */
const math__expm1_q5 = new f32(-2.01099218183624371326e-07);

/**
 * @function
 * @param {f64} x
 * @returns {f64}
*/
function math__pure_v_but_overriden_by_js_exp(x) {
	try {
		/** @type {f64} */
		const log2e = new f64(new f32(1.44269504088896338700e+00));
		/** @type {f64} */
		const overflow = new f64(new f32(7.09782712893383973096e+02));
		/** @type {f64} */
		const underflow = new f64(new f32(-7.45133219101941108420e+02));
		/** @type {f64} */
		const near_zero = new f64(new float_literal( new f32(1.0).valueOf() / (new int_literal( new int(1).valueOf() << new int(28).valueOf())).valueOf()));
		if ((new bool( math__is_nan(x).valueOf() || math__is_inf(x, new int(1)).valueOf())).valueOf()) {
			return x;
		}
		if ((math__is_inf(x, new int(-1))).valueOf()) {
			return new f32(0.0);
		}
		if ((new bool(x.valueOf() > overflow.valueOf())).valueOf()) {
			return math__inf(new int(1));
		}
		if ((new bool(x.valueOf() < underflow.valueOf())).valueOf()) {
			return new f32(0.0);
		}
		if ((new bool( new bool(-near_zero.val .valueOf() < x.valueOf()).valueOf() && new bool(x.valueOf() < near_zero.valueOf()).valueOf())).valueOf()) {
			return new f64( new f32(1.0).valueOf() + x.valueOf());
		}
		/** @type {int} */
		let k = new int(new int(0));
		if ((new bool(x.valueOf() < new int(0).valueOf())).valueOf()) {
			/** @type {int} */
			k = new int(new int(new f64( new f64( log2e.valueOf() * x.valueOf()).valueOf() - new f32(0.5).valueOf())));
		}
		if ((new bool(x.valueOf() > new int(0).valueOf())).valueOf()) {
			/** @type {int} */
			k = new int(new int(new f64( new f64( log2e.valueOf() * x.valueOf()).valueOf() + new f32(0.5).valueOf())));
		}
		/** @type {f64} */
		const hi = new f64(new f64( x.valueOf() - new f64( new f64(k).valueOf() * math__ln2hi.valueOf()).valueOf()));
		/** @type {f64} */
		const lo = new f64(new f64( new f64(k).valueOf() * math__ln2lo.valueOf()));
		return math__expmulti(hi, lo, k);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} x
 * @returns {f64}
*/
function math__exp2(x) {
	try {
		/** @type {f64} */
		const overflow = new f64(new f32(1.0239999999999999e+03));
		/** @type {f64} */
		const underflow = new f64(new f32(-1.0740e+03));
		if ((new bool( math__is_nan(x).valueOf() || math__is_inf(x, new int(1)).valueOf())).valueOf()) {
			return x;
		}
		if ((math__is_inf(x, new int(-1))).valueOf()) {
			return new int(0);
		}
		if ((new bool(x.valueOf() > overflow.valueOf())).valueOf()) {
			return math__inf(new int(1));
		}
		if ((new bool(x.valueOf() < underflow.valueOf())).valueOf()) {
			return new int(0);
		}
		/** @type {int} */
		let k = new int(new int(0));
		if ((new bool(x.valueOf() > new int(0).valueOf())).valueOf()) {
			/** @type {int} */
			k = new int(new int(new f64( x.valueOf() + new f32(0.5).valueOf())));
		}
		if ((new bool(x.valueOf() < new int(0).valueOf())).valueOf()) {
			/** @type {int} */
			k = new int(new int(new f64( x.valueOf() - new f32(0.5).valueOf())));
		}
		/** @type {f64} */
		let t = new f64(new f64( x.valueOf() - new f64(k).valueOf()));
		/** @type {f64} */
		const hi = new f64(new f64( t.valueOf() * math__ln2hi.valueOf()));
		/** @type {f64} */
		const lo = new f64(new f64( -t.val .valueOf() * math__ln2lo.valueOf()));
		return math__expmulti(hi, lo, k);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} frac
 * @param {int} exp
 * @returns {f64}
*/
function math__ldexp(frac, exp) {
	try {
		return math__scalbn(frac, exp);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} x
 * @returns {multi_return_f64_int}
*/
function math__frexp(x) {
	try {
		/** @type {u64} */
		let y = new u64(math__f64_bits(x));
		/** @type {int} */
		const ee = new int(new int(new u64( BigInt((new u64( BigInt(y.valueOf()) >> BigInt(new int(52).valueOf()))).valueOf()) & BigInt(new int(0x7ff).valueOf()))));
		if ((new bool(ee.valueOf() == new int(0).valueOf())).valueOf()) {
			if ((new bool(x.valueOf() != new f32(0.0).valueOf())).valueOf()) {
				/** @type {f64} */
				const x1p64 = new f64(math__f64_from_bits(new u64(BigInt(0x43f0000000000000n))));
				let [z, e_] = math__frexp(new f64( x.valueOf() * x1p64.valueOf()));
				return [z, new int( e_.valueOf() - new int(64).valueOf())];
			}
			return [x, new int(0)];
		} else if ((new bool(ee.valueOf() == new int(0x7ff).valueOf())).valueOf()) {
			return [x, new int(0)];
		}
		/** @type {int} */
		const e_ = new int(new int( ee.valueOf() - new int(0x3fe).valueOf()));
		/** @type {u64} */
		y.val = y & new u64(new u64(BigInt(0x800fffffffffffffn)));
		/** @type {u64} */
		y.val = y | new u64(new u64(BigInt(0x3fe0000000000000n)));
		return [math__f64_from_bits(y), e_];
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} x
 * @returns {f64}
*/
function math__expm1(x) {
	try {
		if ((new bool( math__is_inf(x, new int(1)).valueOf() || math__is_nan(x).valueOf())).valueOf()) {
			return x;
		}
		if ((math__is_inf(x, new int(-1))).valueOf()) {
			return new f64(new int(-1));
		}
		if ((new bool(math__abs(x).valueOf() < math__ln2.valueOf())).valueOf()) {
			/** @type {f64} */
			let i = new f64(new f32(1.0));
			/** @type {f64} */
			let sum = new f64(x);
			/** @type {f64} */
			let term = new f64(new f64( x.valueOf() / new f32(1.0).valueOf()));
			i.val ++;
			/** @type {f64} */
			term.val = Math.floor(term * new f64(new f64( x.valueOf() / new f64(i).valueOf())));
			/** @type {f64} */
			sum.val = Math.floor(sum + new f64(term));
			while (+new bool(math__abs(term).valueOf() > new f64( math__abs(sum).valueOf() * math__internal__f64_epsilon.valueOf()).valueOf())) {
				try { 
					i.val ++;
					/** @type {f64} */
					term.val = Math.floor(term * new f64(new f64( x.valueOf() / new f64(i).valueOf())));
					/** @type {f64} */
					sum.val = Math.floor(sum + new f64(term));
				} catch (e) {
				 if (e instanceof BreakException) { break; }
				 else if (e instanceof ContinueException) { continue; }
				 else { throw e; } }
			}
			
			return sum;
		} else {
			return new f64( math__exp(x).valueOf() - new int(1).valueOf());
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} hi
 * @param {f64} lo
 * @param {int} k
 * @returns {f64}
*/
function math__expmulti(hi, lo, k) {
	try {
		/** @type {f64} */
		const exp_p1 = new f64(new f32(1.66666666666666657415e-01));
		/** @type {f64} */
		const exp_p2 = new f64(new f32(-2.77777777770155933842e-03));
		/** @type {f64} */
		const exp_p3 = new f64(new f32(6.61375632143793436117e-05));
		/** @type {f64} */
		const exp_p4 = new f64(new f32(-1.65339022054652515390e-06));
		/** @type {f64} */
		const exp_p5 = new f64(new f32(4.13813679705723846039e-08));
		/** @type {f64} */
		const r = new f64(new f64( hi.valueOf() - lo.valueOf()));
		/** @type {f64} */
		const t = new f64(new f64( r.valueOf() * r.valueOf()));
		/** @type {f64} */
		const c = new f64(new f64( r.valueOf() - new f64( t.valueOf() * (new f64( exp_p1.valueOf() + new f64( t.valueOf() * (new f64( exp_p2.valueOf() + new f64( t.valueOf() * (new f64( exp_p3.valueOf() + new f64( t.valueOf() * (new f64( exp_p4.valueOf() + new f64( t.valueOf() * exp_p5.valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf()));
		/** @type {f64} */
		const y = new f64(new f64( new int(1).valueOf() - (new f64( (new f64( lo.valueOf() - new f64( (new f64( r.valueOf() * c.valueOf())).valueOf() / (new f64( new int(2).valueOf() - c.valueOf())).valueOf()).valueOf())).valueOf() - hi.valueOf())).valueOf()));
		return math__ldexp(y, k);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/**
 * @function
 * @param {f64} n
 * @returns {f64}
*/
function math__factorial(n) {
	try {
		if ((new bool(n.valueOf() >= math__factorials_table.len.valueOf())).valueOf()) {
			return math__max_f64;
		}
		if ((new bool( new bool(n.valueOf() == new f64(new i64(n)).valueOf()).valueOf() && new bool(n.valueOf() >= new f32(0.0).valueOf()).valueOf())).valueOf()) {
			return math__factorials_table.arr.get(new int(new i64(n).valueOf()));
		}
		return math__gamma(new f64( n.valueOf() + new f32(1.0).valueOf()));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} n
 * @returns {f64}
*/
function math__log_factorial(n) {
	try {
		if ((new bool(n.valueOf() < new int(0).valueOf())).valueOf()) {
			return -math__max_f64.val ;
		}
		if ((new bool(n.valueOf() != new f64(new i64(n)).valueOf())).valueOf()) {
			return math__log_gamma(new f64( n.valueOf() + new int(1).valueOf()));
		} else if ((new bool(n.valueOf() < math__log_factorials_table.len.valueOf())).valueOf()) {
			return math__log_factorials_table.arr.get(new int(new i64(n).valueOf()));
		}
		return math__log_factorial_asymptotic_expansion(new int(n));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} n
 * @returns {f64}
*/
function math__log_factorial_asymptotic_expansion(n) {
	try {
		/** @type {int} */
		const m = new int(new int(6));
		/** @type {Array_f64} */
		let term = new array(new array_buffer({arr: [], len: new int(0), cap: new int(0)}));
		/** @type {f64} */
		const xx = new f64(new f64(new int( (new int( n.valueOf() + new int(1).valueOf())).valueOf() * (new int( n.valueOf() + new int(1).valueOf())).valueOf())));
		/** @type {f64} */
		let xj = new f64(new f64(new int( n.valueOf() + new int(1).valueOf())));
		/** @type {f64} */
		const log_factorial = new f64(new f64( new f64( math__log_sqrt_2pi.valueOf() - xj.valueOf()).valueOf() + new f64( (new f64( xj.valueOf() - new f32(0.5).valueOf())).valueOf() * math__log(xj).valueOf()).valueOf()));
		/** @type {int} */
		let i = new int(new int(0));
		for (i = new int(new int(0)); +new bool(i.valueOf() < m.valueOf()); i.val ++) {
			try { 
				array_push(term,new f64( math__bernoulli.arr.get(new int(i.valueOf())).valueOf() / xj.valueOf()),false);
				xj.val = Math.floor(xj * new f64(xx)); } catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		/** @type {f64} */
		let sum = new f64(term.arr.get(new int(new int( m.valueOf() - new int(1).valueOf()).valueOf())));
		for (i = new int(new int( m.valueOf() - new int(2).valueOf())); +new bool(i.valueOf() >= new int(0).valueOf()); i.val --) {
			try { 
				if ((new bool(math__abs(sum).valueOf() <= math__abs(term.arr.get(new int(i.valueOf()))).valueOf())).valueOf()) {
					break;
				}
				sum = new f64(term.arr.get(new int(i.valueOf()))); } catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		while (+new bool(i.valueOf() >= new int(0).valueOf())) {
			try { 
				/** @type {f64} */
				sum.val = Math.floor(sum + new f64(term.arr.get(new int(i.valueOf()))));
				i.val --;
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return new f64( log_factorial.valueOf() + sum.valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} n
 * @returns {i64}
*/
function math__factoriali(n) {
	try {
		if ((new bool(n.valueOf() <= new int(0).valueOf())).valueOf()) {
			return new i64(BigInt(1n));
		}
		if ((new bool(n.valueOf() < new int(21).valueOf())).valueOf()) {
			return new i64(math__factorials_table.arr.get(new int(n.valueOf())));
		}
		return new i64(BigInt(-1n));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/** @constant {f64} */
const math__log_sqrt_2pi = new f32(9.18938533204672741780329736e-1);
/** @constant {Array_f64} */
let math__bernoulli = undefined;
/** @constant {Array_f64} */
let math__factorials_table = undefined;
/** @constant {Array_f64} */
let math__log_factorials_table = undefined;

/** @namespace math */
/* [inline] */
/**
 * @function
 * @param {f64} x
 * @returns {f64}
*/
function math__ceil(x) {
	try {
		return Math.ceil(x);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {f64} x
 * @returns {f64}
*/
function math__floor(x) {
	try {
		return Math.floor(x);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {f64} x
 * @returns {f64}
*/
function math__round(x) {
	try {
		return Math.round(x);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {f64} x
 * @returns {f64}
*/
function math__trunc(x) {
	try {
		return Math.trunc(x);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/**
 * @function
 * @param {f64} x
 * @returns {f64}
*/
function math__pure_v_but_overriden_by_js_floor(x) {
	try {
		if ((new bool( new bool( new bool(x.valueOf() == new int(0).valueOf()).valueOf() || math__is_nan(x).valueOf()).valueOf() || math__is_inf(x, new int(0)).valueOf())).valueOf()) {
			return x;
		}
		if ((new bool(x.valueOf() < new int(0).valueOf())).valueOf()) {
			let [d, fract] = math__modf(-x.val );
			if ((new bool(fract.valueOf() != new f32(0.0).valueOf())).valueOf()) {
				/** @type {f64} */
				d = new f64(new f64( d.valueOf() + new int(1).valueOf()));
			}
			return -d.val ;
		}
		let [d, ] = math__modf(x);
		return d;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} x
 * @returns {f64}
*/
function math__pure_v_but_overriden_by_js_ceil(x) {
	try {
		return -math__floor(-x.val ).val ;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} x
 * @returns {f64}
*/
function math__pure_v_but_overriden_by_js_trunc(x) {
	try {
		if ((new bool( new bool( new bool(x.valueOf() == new int(0).valueOf()).valueOf() || math__is_nan(x).valueOf()).valueOf() || math__is_inf(x, new int(0)).valueOf())).valueOf()) {
			return x;
		}
		let [d, ] = math__modf(x);
		return d;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} x
 * @returns {f64}
*/
function math__pure_v_but_overriden_by_js_round(x) {
	try {
		if ((new bool( new bool( new bool(x.valueOf() == new int(0).valueOf()).valueOf() || math__is_nan(x).valueOf()).valueOf() || math__is_inf(x, new int(0)).valueOf())).valueOf()) {
			return x;
		}
		/** @type {f64} */
		let y = new f64(math__floor(x));
		/** @type {f64} */
		let r = new f64(new f64( x.valueOf() - y.valueOf()));
		if ((new bool(r.valueOf() > new f32(0.5).valueOf())).valueOf()) {
			{
			}
			
		}
		if ((new bool(r.valueOf() == new f32(0.5).valueOf())).valueOf()) {
			/** @type {f64} */
			r = new f64(new f64( y.valueOf() - new f64( new f32(2.0).valueOf() * math__floor(new f64( new f32(0.5).valueOf() * y.valueOf())).valueOf()).valueOf()));
			if ((new bool(r.valueOf() == new f32(1.0).valueOf())).valueOf()) {
				rndup:
				/** @type {f64} */
				y.val = Math.floor(y + new f64(new f32(1.0)));
			}
		}
		return y;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} x
 * @returns {f64}
*/
function math__round_to_even(x) {
	try {
		/** @type {u64} */
		let bits = new u64(math__f64_bits(x));
		/** @type {u64} */
		let e_ = new u64(new u64( BigInt((new u64( BigInt(bits.valueOf()) >> BigInt(math__shift.valueOf()))).valueOf()) & BigInt(math__mask.valueOf())));
		if ((new bool(e_.valueOf() >= math__bias.valueOf())).valueOf()) {
			/** @type {u64} */
			const half_minus_ulp = new u64(new u64( BigInt(new u64(new u64( BigInt(new u64(BigInt(1n)).valueOf()) << BigInt((new int_literal( math__shift.valueOf() - new int(1).valueOf())).valueOf()))).valueOf()) - BigInt(new int(1).valueOf())));
			/** @type {u64} */
			e_.val = e_ - new u64(new u64(math__bias));
			/** @type {u64} */
			bits.val = bits + new u64(new u64( BigInt((new u64( BigInt(half_minus_ulp.valueOf()) + BigInt(new u64( BigInt((new u64( BigInt(bits.valueOf()) >> BigInt((new u64( BigInt(math__shift.valueOf()) - BigInt(e_.valueOf()))).valueOf()))).valueOf()) & BigInt(new int(1).valueOf())).valueOf()))).valueOf()) >> BigInt(e_.valueOf())));
			/** @type {u64} */
			bits.val = bits & new u64(new u64( BigInt(math__frac_mask.valueOf()) >> BigInt(e_.valueOf())));
			/** @type {u64} */
			bits.val = bits ^ new u64(new u64( BigInt(math__frac_mask.valueOf()) >> BigInt(e_.valueOf())));
		} else if ((new bool( new bool(e_.valueOf() == new int_literal( math__bias.valueOf() - new int(1).valueOf()).valueOf()).valueOf() && new bool(new u64( BigInt(bits.valueOf()) & BigInt(math__frac_mask.valueOf())).valueOf() != new int(0).valueOf()).valueOf())).valueOf()) {
			/** @type {u64} */
			bits = new u64(new u64( BigInt(new u64( BigInt(bits.valueOf()) & BigInt(math__sign_mask.valueOf())).valueOf()) | BigInt(math__uvone.valueOf())));
		} else {
			/** @type {u64} */
			bits.val = bits & new u64(math__sign_mask);
		}
		return math__f64_from_bits(bits);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/**
 * @function
 * @param {f64} x
 * @returns {multi_return_f64_f64}
*/
function math__stirling(x) {
	try {
		if ((new bool(x.valueOf() > new int(200).valueOf())).valueOf()) {
			return [math__inf(new int(1)), new f32(1.0)];
		}
		/** @type {f64} */
		const sqrt_two_pi = new f64(new f32(2.506628274631000502417));
		/** @type {f64} */
		const max_stirling = new f64(new f32(143.01608));
		/** @type {f64} */
		let w = new f64(new f64( new f32(1.0).valueOf() / x.valueOf()));
		/** @type {f64} */
		w = new f64(new f64( new f32(1.0).valueOf() + new f64( w.valueOf() * (new f64( new f64( (new f64( new f64( (new f64( new f64( (new f64( new f64( math__gamma_s.arr.get(new int(new int(0).valueOf())).valueOf() * w.valueOf()).valueOf() + math__gamma_s.arr.get(new int(new int(1).valueOf())).valueOf())).valueOf() * w.valueOf()).valueOf() + math__gamma_s.arr.get(new int(new int(2).valueOf())).valueOf())).valueOf() * w.valueOf()).valueOf() + math__gamma_s.arr.get(new int(new int(3).valueOf())).valueOf())).valueOf() * w.valueOf()).valueOf() + math__gamma_s.arr.get(new int(new int(4).valueOf())).valueOf())).valueOf()).valueOf()));
		/** @type {f64} */
		let y1 = new f64(math__exp(x));
		/** @type {f64} */
		let y2 = new f64(new f32(1.0));
		if ((new bool(x.valueOf() > max_stirling.valueOf())).valueOf()) {
			/** @type {f64} */
			const v = new f64(math__pow(x, new f64( new f64( new f32(0.5).valueOf() * x.valueOf()).valueOf() - new f32(0.25).valueOf())));
			/** @type {f64} */
			const y1_ = new f64(y1);
			/** @type {f64} */
			y1 = new f64(v);
			/** @type {f64} */
			y2 = new f64(new f64( v.valueOf() / y1_.valueOf()));
		} else {
			/** @type {f64} */
			y1 = new f64(new f64( math__pow(x, new f64( x.valueOf() - new f32(0.5).valueOf())).valueOf() / y1.valueOf()));
		}
		return [y1, new f64( new f64( new f64(sqrt_two_pi).valueOf() * w.valueOf()).valueOf() * y2.valueOf())];
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} a
 * @returns {f64}
*/
function math__gamma(a) {
	try {
		/** @type {f64} */
		let x = new f64(a);
		/** @type {f64} */
		const euler = new f64(new f32(0.57721566490153286060651209008240243104215933593992));
		if ((new bool( new bool( math__is_neg_int(x).valueOf() || math__is_inf(x, new int(-1)).valueOf()).valueOf() || math__is_nan(x).valueOf())).valueOf()) {
			return math__nan();
		}
		if ((math__is_inf(x, new int(1))).valueOf()) {
			return math__inf(new int(1));
		}
		if ((new bool(x.valueOf() == new f32(0.0).valueOf())).valueOf()) {
			return math__copysign(math__inf(new int(1)), x);
		}
		/** @type {f64} */
		let q = new f64(math__abs(x));
		/** @type {f64} */
		let p = new f64(math__floor(q));
		if ((new bool(q.valueOf() > new int(33).valueOf())).valueOf()) {
			if ((new bool(x.valueOf() >= new int(0).valueOf())).valueOf()) {
				let [y1, y2] = math__stirling(x);
				return new f64( y1.valueOf() * y2.valueOf());
			}
			/** @type {int} */
			let signgam = new int(new int(1));
			/** @type {i64} */
			const ip = new i64(new i64(p));
			if ((new bool((new i64( BigInt(ip.valueOf()) & BigInt(new int(1).valueOf()))).valueOf() == new int(0).valueOf())).valueOf()) {
				/** @type {int} */
				signgam = new int(new int(-1));
			}
			/** @type {f64} */
			let z = new f64(new f64( q.valueOf() - p.valueOf()));
			if ((new bool(z.valueOf() > new f32(0.5).valueOf())).valueOf()) {
				/** @type {f64} */
				p = new f64(new f64( p.valueOf() + new int(1).valueOf()));
				/** @type {f64} */
				z = new f64(new f64( q.valueOf() - p.valueOf()));
			}
			/** @type {f64} */
			z = new f64(new f64( q.valueOf() * math__sin(new f64( math__pi.valueOf() * z.valueOf())).valueOf()));
			if ((new bool(z.valueOf() == new int(0).valueOf())).valueOf()) {
				return math__inf(signgam);
			}
			let [sq1, sq2] = math__stirling(q);
			/** @type {f64} */
			const absz = new f64(math__abs(z));
			/** @type {f64} */
			const d = new f64(new f64( new f64( absz.valueOf() * sq1.valueOf()).valueOf() * sq2.valueOf()));
			if ((math__is_inf(d, new int(0))).valueOf()) {
				/** @type {f64} */
				z = new f64(new f64( new f64( new f64( math__pi.valueOf() / absz.valueOf()).valueOf() / sq1.valueOf()).valueOf() / sq2.valueOf()));
			} else {
				/** @type {f64} */
				z = new f64(new f64( math__pi.valueOf() / d.valueOf()));
			}
			return new f64( new f64(signgam).valueOf() * z.valueOf());
		}
		/** @type {f64} */
		let z = new f64(new f32(1.0));
		while (+new bool(x.valueOf() >= new int(3).valueOf())) {
			try { 
				/** @type {f64} */
				x = new f64(new f64( x.valueOf() - new int(1).valueOf()));
				/** @type {f64} */
				z = new f64(new f64( z.valueOf() * x.valueOf()));
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		while (+new bool(x.valueOf() < new int(0).valueOf())) {
			try { 
				if ((new bool(x.valueOf() > new f32(-1e-09).valueOf())).valueOf()) {
					{
					}
					
				}
				/** @type {f64} */
				z = new f64(new f64( z.valueOf() / x.valueOf()));
				/** @type {f64} */
				x = new f64(new f64( x.valueOf() + new int(1).valueOf()));
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		while (+new bool(x.valueOf() < new int(2).valueOf())) {
			try { 
				if ((new bool(x.valueOf() < new f32(1e-09).valueOf())).valueOf()) {
					{
					}
					
				}
				/** @type {f64} */
				z = new f64(new f64( z.valueOf() / x.valueOf()));
				/** @type {f64} */
				x = new f64(new f64( x.valueOf() + new int(1).valueOf()));
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		if ((new bool(x.valueOf() == new int(2).valueOf())).valueOf()) {
			return z;
		}
		/** @type {f64} */
		x = new f64(new f64( x.valueOf() - new int(2).valueOf()));
		/** @type {f64} */
		p = new f64(new f64( new f64( (new f64( new f64( (new f64( new f64( (new f64( new f64( (new f64( new f64( (new f64( new f64( x.valueOf() * math__gamma_p.arr.get(new int(new int(0).valueOf())).valueOf()).valueOf() + math__gamma_p.arr.get(new int(new int(1).valueOf())).valueOf())).valueOf() * x.valueOf()).valueOf() + math__gamma_p.arr.get(new int(new int(2).valueOf())).valueOf())).valueOf() * x.valueOf()).valueOf() + math__gamma_p.arr.get(new int(new int(3).valueOf())).valueOf())).valueOf() * x.valueOf()).valueOf() + math__gamma_p.arr.get(new int(new int(4).valueOf())).valueOf())).valueOf() * x.valueOf()).valueOf() + math__gamma_p.arr.get(new int(new int(5).valueOf())).valueOf())).valueOf() * x.valueOf()).valueOf() + math__gamma_p.arr.get(new int(new int(6).valueOf())).valueOf()));
		/** @type {f64} */
		q = new f64(new f64( new f64( (new f64( new f64( (new f64( new f64( (new f64( new f64( (new f64( new f64( (new f64( new f64( (new f64( new f64( x.valueOf() * math__gamma_q.arr.get(new int(new int(0).valueOf())).valueOf()).valueOf() + math__gamma_q.arr.get(new int(new int(1).valueOf())).valueOf())).valueOf() * x.valueOf()).valueOf() + math__gamma_q.arr.get(new int(new int(2).valueOf())).valueOf())).valueOf() * x.valueOf()).valueOf() + math__gamma_q.arr.get(new int(new int(3).valueOf())).valueOf())).valueOf() * x.valueOf()).valueOf() + math__gamma_q.arr.get(new int(new int(4).valueOf())).valueOf())).valueOf() * x.valueOf()).valueOf() + math__gamma_q.arr.get(new int(new int(5).valueOf())).valueOf())).valueOf() * x.valueOf()).valueOf() + math__gamma_q.arr.get(new int(new int(6).valueOf())).valueOf())).valueOf() * x.valueOf()).valueOf() + math__gamma_q.arr.get(new int(new int(7).valueOf())).valueOf()));
		if ((new bool(true)).valueOf()) {
			return new f64( new f64( z.valueOf() * p.valueOf()).valueOf() / q.valueOf());
		}
		small:
		if ((new bool(x.valueOf() == new int(0).valueOf())).valueOf()) {
			return math__inf(new int(1));
		}
		return new f64( z.valueOf() / (new f64( (new f64( new f32(1.0).valueOf() + new f64( euler.valueOf() * x.valueOf()).valueOf())).valueOf() * x.valueOf())).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} x
 * @returns {f64}
*/
function math__log_gamma(x) {
	try {
		let [y, ] = math__log_gamma_sign(x);
		return y;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} a
 * @returns {multi_return_f64_int}
*/
function math__log_gamma_sign(a) {
	try {
		/** @type {f64} */
		let x = new f64(a);
		/** @type {f64} */
		const ymin = new f64(new f32(1.461632144968362245));
		/** @type {f64} */
		const tiny = new f64(math__exp2(new int(-70)));
		/** @type {f64} */
		const two52 = new f64(math__exp2(new int(52)));
		/** @type {f64} */
		const two58 = new f64(math__exp2(new int(58)));
		/** @type {f64} */
		const tc = new f64(new f32(1.46163214496836224576e+00));
		/** @type {f64} */
		const tf = new f64(new f32(-1.21486290535849611461e-01));
		/** @type {f64} */
		const tt = new f64(new f32(-3.63867699703950536541e-18));
		/** @type {int} */
		let sign = new int(new int(1));
		if ((math__is_nan(x)).valueOf()) {
			return [x, sign];
		}
		if ((math__is_inf(x, new int(1))).valueOf()) {
			return [x, sign];
		}
		if ((new bool(x.valueOf() == new f32(0.0).valueOf())).valueOf()) {
			return [math__inf(new int(1)), sign];
		}
		/** @type {bool} */
		let neg = new bool(new bool(false));
		if ((new bool(x.valueOf() < new int(0).valueOf())).valueOf()) {
			/** @type {f64} */
			x = new f64(-x.val );
			/** @type {bool} */
			neg = new bool(new bool(true));
		}
		if ((new bool(x.valueOf() < tiny.valueOf())).valueOf()) {
			if ((neg).valueOf()) {
				/** @type {int} */
				sign = new int(new int(-1));
			}
			return [-math__log(x).val , sign];
		}
		/** @type {f64} */
		let nadj = new f64(new f32(0.0));
		if ((neg).valueOf()) {
			if ((new bool(x.valueOf() >= two52.valueOf())).valueOf()) {
				return [math__inf(new int(1)), sign];
			}
			/** @type {f64} */
			const t = new f64(math__sin_pi(x));
			if ((new bool(t.valueOf() == new int(0).valueOf())).valueOf()) {
				return [math__inf(new int(1)), sign];
			}
			/** @type {f64} */
			nadj = new f64(math__log(new f64( math__pi.valueOf() / math__abs(new f64( t.valueOf() * x.valueOf())).valueOf())));
			if ((new bool(t.valueOf() < new int(0).valueOf())).valueOf()) {
				/** @type {int} */
				sign = new int(new int(-1));
			}
		}
		/** @type {f64} */
		let lgamma = new f64(new f32(0.0));
		if ((new bool( new bool(x.valueOf() == new int(1).valueOf()).valueOf() || new bool(x.valueOf() == new int(2).valueOf()).valueOf())).valueOf()) {
			return [new f32(0.0), sign];
		} else if ((new bool(x.valueOf() < new int(2).valueOf())).valueOf()) {
			/** @type {f64} */
			let y = new f64(new f32(0.0));
			/** @type {int} */
			let i = new int(new int(0));
			if ((new bool(x.valueOf() <= new f32(0.9).valueOf())).valueOf()) {
				/** @type {f64} */
				lgamma = new f64(-math__log(x).val );
				if ((new bool(x.valueOf() >= (new f64( new f64( ymin.valueOf() - new int(1).valueOf()).valueOf() + new f32(0.27).valueOf())).valueOf())).valueOf()) {
					/** @type {f64} */
					y = new f64(new f64( new f32(1.0).valueOf() - x.valueOf()));
					/** @type {int} */
					i = new int(new int(0));
				} else if ((new bool(x.valueOf() >= (new f64( new f64( ymin.valueOf() - new int(1).valueOf()).valueOf() - new f32(0.27).valueOf())).valueOf())).valueOf()) {
					/** @type {f64} */
					y = new f64(new f64( x.valueOf() - (new f64( tc.valueOf() - new int(1).valueOf())).valueOf()));
					/** @type {int} */
					i = new int(new int(1));
				} else {
					/** @type {f64} */
					y = new f64(x);
					/** @type {int} */
					i = new int(new int(2));
				}
			} else {
				/** @type {f64} */
				lgamma = new f64(new int(0));
				if ((new bool(x.valueOf() >= (new f64( ymin.valueOf() + new f32(0.27).valueOf())).valueOf())).valueOf()) {
					/** @type {f64} */
					y = new f64(new f64( new f64(new int(2)).valueOf() - x.valueOf()));
					/** @type {int} */
					i = new int(new int(0));
				} else if ((new bool(x.valueOf() >= (new f64( ymin.valueOf() - new f32(0.27).valueOf())).valueOf())).valueOf()) {
					/** @type {f64} */
					y = new f64(new f64( x.valueOf() - tc.valueOf()));
					/** @type {int} */
					i = new int(new int(1));
				} else {
					/** @type {f64} */
					y = new f64(new f64( x.valueOf() - new int(1).valueOf()));
					/** @type {int} */
					i = new int(new int(2));
				}
			}
			if ((new bool(i.valueOf() == new int(0).valueOf())).valueOf()) {
				/** @type {f64} */
				const z = new f64(new f64( y.valueOf() * y.valueOf()));
				/** @type {f64} */
				const gamma_p1 = new f64(new f64( math__lgamma_a.arr.get(new int(new int(0).valueOf())).valueOf() + new f64( z.valueOf() * (new f64( math__lgamma_a.arr.get(new int(new int(2).valueOf())).valueOf() + new f64( z.valueOf() * (new f64( math__lgamma_a.arr.get(new int(new int(4).valueOf())).valueOf() + new f64( z.valueOf() * (new f64( math__lgamma_a.arr.get(new int(new int(6).valueOf())).valueOf() + new f64( z.valueOf() * (new f64( math__lgamma_a.arr.get(new int(new int(8).valueOf())).valueOf() + new f64( z.valueOf() * math__lgamma_a.arr.get(new int(new int(10).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf()));
				/** @type {f64} */
				const gamma_p2 = new f64(new f64( z.valueOf() * (new f64( math__lgamma_a.arr.get(new int(new int(1).valueOf())).valueOf() + new f64( z.valueOf() * (new f64( math__lgamma_a.arr.get(new int(new int(3).valueOf())).valueOf() + new f64( z.valueOf() * (new f64( math__lgamma_a.arr.get(new int(new int(5).valueOf())).valueOf() + new f64( z.valueOf() * (new f64( math__lgamma_a.arr.get(new int(new int(7).valueOf())).valueOf() + new f64( z.valueOf() * (new f64( math__lgamma_a.arr.get(new int(new int(9).valueOf())).valueOf() + new f64( z.valueOf() * math__lgamma_a.arr.get(new int(new int(11).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()));
				/** @type {f64} */
				const p = new f64(new f64( new f64( y.valueOf() * gamma_p1.valueOf()).valueOf() + gamma_p2.valueOf()));
				/** @type {f64} */
				lgamma.val = Math.floor(lgamma + new f64((new f64( p.valueOf() - new f64( new f32(0.5).valueOf() * y.valueOf()).valueOf()))));
			} else if ((new bool(i.valueOf() == new int(1).valueOf())).valueOf()) {
				/** @type {f64} */
				const z = new f64(new f64( y.valueOf() * y.valueOf()));
				/** @type {f64} */
				const w = new f64(new f64( z.valueOf() * y.valueOf()));
				/** @type {f64} */
				const gamma_p1 = new f64(new f64( math__lgamma_t.arr.get(new int(new int(0).valueOf())).valueOf() + new f64( w.valueOf() * (new f64( math__lgamma_t.arr.get(new int(new int(3).valueOf())).valueOf() + new f64( w.valueOf() * (new f64( math__lgamma_t.arr.get(new int(new int(6).valueOf())).valueOf() + new f64( w.valueOf() * (new f64( math__lgamma_t.arr.get(new int(new int(9).valueOf())).valueOf() + new f64( w.valueOf() * math__lgamma_t.arr.get(new int(new int(12).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf()));
				/** @type {f64} */
				const gamma_p2 = new f64(new f64( math__lgamma_t.arr.get(new int(new int(1).valueOf())).valueOf() + new f64( w.valueOf() * (new f64( math__lgamma_t.arr.get(new int(new int(4).valueOf())).valueOf() + new f64( w.valueOf() * (new f64( math__lgamma_t.arr.get(new int(new int(7).valueOf())).valueOf() + new f64( w.valueOf() * (new f64( math__lgamma_t.arr.get(new int(new int(10).valueOf())).valueOf() + new f64( w.valueOf() * math__lgamma_t.arr.get(new int(new int(13).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf()));
				/** @type {f64} */
				const gamma_p3 = new f64(new f64( math__lgamma_t.arr.get(new int(new int(2).valueOf())).valueOf() + new f64( w.valueOf() * (new f64( math__lgamma_t.arr.get(new int(new int(5).valueOf())).valueOf() + new f64( w.valueOf() * (new f64( math__lgamma_t.arr.get(new int(new int(8).valueOf())).valueOf() + new f64( w.valueOf() * (new f64( math__lgamma_t.arr.get(new int(new int(11).valueOf())).valueOf() + new f64( w.valueOf() * math__lgamma_t.arr.get(new int(new int(14).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf()));
				/** @type {f64} */
				const p = new f64(new f64( new f64( z.valueOf() * gamma_p1.valueOf()).valueOf() - (new f64( tt.valueOf() - new f64( w.valueOf() * (new f64( gamma_p2.valueOf() + new f64( y.valueOf() * gamma_p3.valueOf()).valueOf())).valueOf()).valueOf())).valueOf()));
				/** @type {f64} */
				lgamma.val = Math.floor(lgamma + new f64((new f64( tf.valueOf() + p.valueOf()))));
			} else if ((new bool(i.valueOf() == new int(2).valueOf())).valueOf()) {
				/** @type {f64} */
				const gamma_p1 = new f64(new f64( y.valueOf() * (new f64( math__lgamma_u.arr.get(new int(new int(0).valueOf())).valueOf() + new f64( y.valueOf() * (new f64( math__lgamma_u.arr.get(new int(new int(1).valueOf())).valueOf() + new f64( y.valueOf() * (new f64( math__lgamma_u.arr.get(new int(new int(2).valueOf())).valueOf() + new f64( y.valueOf() * (new f64( math__lgamma_u.arr.get(new int(new int(3).valueOf())).valueOf() + new f64( y.valueOf() * (new f64( math__lgamma_u.arr.get(new int(new int(4).valueOf())).valueOf() + new f64( y.valueOf() * math__lgamma_u.arr.get(new int(new int(5).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()));
				/** @type {f64} */
				const gamma_p2 = new f64(new f64( new f32(1.0).valueOf() + new f64( y.valueOf() * (new f64( math__lgamma_v.arr.get(new int(new int(1).valueOf())).valueOf() + new f64( y.valueOf() * (new f64( math__lgamma_v.arr.get(new int(new int(2).valueOf())).valueOf() + new f64( y.valueOf() * (new f64( math__lgamma_v.arr.get(new int(new int(3).valueOf())).valueOf() + new f64( y.valueOf() * (new f64( math__lgamma_v.arr.get(new int(new int(4).valueOf())).valueOf() + new f64( y.valueOf() * math__lgamma_v.arr.get(new int(new int(5).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf()));
				/** @type {f64} */
				lgamma.val = Math.floor(lgamma + new f64((new f64( new f64( new f32(-0.5).valueOf() * y.valueOf()).valueOf() + new f64( gamma_p1.valueOf() / gamma_p2.valueOf()).valueOf()))));
			}
		} else if ((new bool(x.valueOf() < new int(8).valueOf())).valueOf()) {
			/** @type {int} */
			const i = new int(new int(x));
			/** @type {f64} */
			const y = new f64(new f64( x.valueOf() - new f64(i).valueOf()));
			/** @type {f64} */
			const p = new f64(new f64( y.valueOf() * (new f64( math__lgamma_s.arr.get(new int(new int(0).valueOf())).valueOf() + new f64( y.valueOf() * (new f64( math__lgamma_s.arr.get(new int(new int(1).valueOf())).valueOf() + new f64( y.valueOf() * (new f64( math__lgamma_s.arr.get(new int(new int(2).valueOf())).valueOf() + new f64( y.valueOf() * (new f64( math__lgamma_s.arr.get(new int(new int(3).valueOf())).valueOf() + new f64( y.valueOf() * (new f64( math__lgamma_s.arr.get(new int(new int(4).valueOf())).valueOf() + new f64( y.valueOf() * (new f64( math__lgamma_s.arr.get(new int(new int(5).valueOf())).valueOf() + new f64( y.valueOf() * math__lgamma_s.arr.get(new int(new int(6).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()));
			/** @type {f64} */
			const q = new f64(new f64( new f32(1.0).valueOf() + new f64( y.valueOf() * (new f64( math__lgamma_r.arr.get(new int(new int(1).valueOf())).valueOf() + new f64( y.valueOf() * (new f64( math__lgamma_r.arr.get(new int(new int(2).valueOf())).valueOf() + new f64( y.valueOf() * (new f64( math__lgamma_r.arr.get(new int(new int(3).valueOf())).valueOf() + new f64( y.valueOf() * (new f64( math__lgamma_r.arr.get(new int(new int(4).valueOf())).valueOf() + new f64( y.valueOf() * (new f64( math__lgamma_r.arr.get(new int(new int(5).valueOf())).valueOf() + new f64( y.valueOf() * math__lgamma_r.arr.get(new int(new int(6).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf()));
			/** @type {f64} */
			lgamma = new f64(new f64( new f64( new f32(0.5).valueOf() * y.valueOf()).valueOf() + new f64( p.valueOf() / q.valueOf()).valueOf()));
			/** @type {f64} */
			let z = new f64(new f32(1.0));
			if ((new bool(i.valueOf() == new int(7).valueOf())).valueOf()) {
				/** @type {f64} */
				z.val = Math.floor(z * new f64((new f64( y.valueOf() + new int(6).valueOf()))));
				/** @type {f64} */
				z.val = Math.floor(z * new f64((new f64( y.valueOf() + new int(5).valueOf()))));
				/** @type {f64} */
				z.val = Math.floor(z * new f64((new f64( y.valueOf() + new int(4).valueOf()))));
				/** @type {f64} */
				z.val = Math.floor(z * new f64((new f64( y.valueOf() + new int(3).valueOf()))));
				/** @type {f64} */
				z.val = Math.floor(z * new f64((new f64( y.valueOf() + new int(2).valueOf()))));
				/** @type {f64} */
				lgamma.val = Math.floor(lgamma + new f64(math__log(z)));
			} else if ((new bool(i.valueOf() == new int(6).valueOf())).valueOf()) {
				/** @type {f64} */
				z.val = Math.floor(z * new f64((new f64( y.valueOf() + new int(5).valueOf()))));
				/** @type {f64} */
				z.val = Math.floor(z * new f64((new f64( y.valueOf() + new int(4).valueOf()))));
				/** @type {f64} */
				z.val = Math.floor(z * new f64((new f64( y.valueOf() + new int(3).valueOf()))));
				/** @type {f64} */
				z.val = Math.floor(z * new f64((new f64( y.valueOf() + new int(2).valueOf()))));
				/** @type {f64} */
				lgamma.val = Math.floor(lgamma + new f64(math__log(z)));
			} else if ((new bool(i.valueOf() == new int(5).valueOf())).valueOf()) {
				/** @type {f64} */
				z.val = Math.floor(z * new f64((new f64( y.valueOf() + new int(4).valueOf()))));
				/** @type {f64} */
				z.val = Math.floor(z * new f64((new f64( y.valueOf() + new int(3).valueOf()))));
				/** @type {f64} */
				z.val = Math.floor(z * new f64((new f64( y.valueOf() + new int(2).valueOf()))));
				/** @type {f64} */
				lgamma.val = Math.floor(lgamma + new f64(math__log(z)));
			} else if ((new bool(i.valueOf() == new int(4).valueOf())).valueOf()) {
				/** @type {f64} */
				z.val = Math.floor(z * new f64((new f64( y.valueOf() + new int(3).valueOf()))));
				/** @type {f64} */
				z.val = Math.floor(z * new f64((new f64( y.valueOf() + new int(2).valueOf()))));
				/** @type {f64} */
				lgamma.val = Math.floor(lgamma + new f64(math__log(z)));
			} else if ((new bool(i.valueOf() == new int(3).valueOf())).valueOf()) {
				/** @type {f64} */
				z.val = Math.floor(z * new f64((new f64( y.valueOf() + new int(2).valueOf()))));
				/** @type {f64} */
				lgamma.val = Math.floor(lgamma + new f64(math__log(z)));
			}
		} else if ((new bool(x.valueOf() < two58.valueOf())).valueOf()) {
			/** @type {f64} */
			const t = new f64(math__log(x));
			/** @type {f64} */
			const z = new f64(new f64( new f32(1.0).valueOf() / x.valueOf()));
			/** @type {f64} */
			const y = new f64(new f64( z.valueOf() * z.valueOf()));
			/** @type {f64} */
			const w = new f64(new f64( math__lgamma_w.arr.get(new int(new int(0).valueOf())).valueOf() + new f64( z.valueOf() * (new f64( math__lgamma_w.arr.get(new int(new int(1).valueOf())).valueOf() + new f64( y.valueOf() * (new f64( math__lgamma_w.arr.get(new int(new int(2).valueOf())).valueOf() + new f64( y.valueOf() * (new f64( math__lgamma_w.arr.get(new int(new int(3).valueOf())).valueOf() + new f64( y.valueOf() * (new f64( math__lgamma_w.arr.get(new int(new int(4).valueOf())).valueOf() + new f64( y.valueOf() * (new f64( math__lgamma_w.arr.get(new int(new int(5).valueOf())).valueOf() + new f64( y.valueOf() * math__lgamma_w.arr.get(new int(new int(6).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf()));
			/** @type {f64} */
			lgamma = new f64(new f64( new f64( (new f64( x.valueOf() - new f32(0.5).valueOf())).valueOf() * (new f64( t.valueOf() - new f32(1.0).valueOf())).valueOf()).valueOf() + w.valueOf()));
		} else {
			/** @type {f64} */
			lgamma = new f64(new f64( x.valueOf() * (new f64( math__log(x).valueOf() - new f32(1.0).valueOf())).valueOf()));
		}
		if ((neg).valueOf()) {
			/** @type {f64} */
			lgamma = new f64(new f64( nadj.valueOf() - lgamma.valueOf()));
		}
		return [lgamma, sign];
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} x_
 * @returns {f64}
*/
function math__sin_pi(x_) {
	try {
		/** @type {f64} */
		let x = new f64(x_);
		/** @type {f64} */
		const two52 = new f64(math__exp2(new int(52)));
		/** @type {f64} */
		const two53 = new f64(math__exp2(new int(53)));
		if ((new bool(x.valueOf() < new f32(0.25).valueOf())).valueOf()) {
			return -math__sin(new f64( math__pi.valueOf() * x.valueOf())).val ;
		}
		/** @type {f64} */
		let z = new f64(math__floor(x));
		/** @type {int} */
		let n = new int(new int(0));
		if ((new bool(z.valueOf() != x.valueOf())).valueOf()) {
			/** @type {f64} */
			x = new f64(math__mod(x, new int(2)));
			/** @type {int} */
			n = new int(new int(new f64( x.valueOf() * new int(4).valueOf())));
		} else {
			if ((new bool(x.valueOf() >= two53.valueOf())).valueOf()) {
				/** @type {f64} */
				x = new f64(new int(0));
				/** @type {int} */
				n = new int(new int(0));
			} else {
				if ((new bool(x.valueOf() < two52.valueOf())).valueOf()) {
					/** @type {f64} */
					z = new f64(new f64( x.valueOf() + two52.valueOf()));
				}
				/** @type {int} */
				n = new int(new int( new int(1).valueOf() & new int(math__f64_bits(z)).valueOf()));
				/** @type {f64} */
				x = new f64(new f64(n));
				/** @type {int} */
				n.val = Math.floor(n << new int(new int(2)));
			}
		}
		if ((new bool(n.valueOf() == new int(0).valueOf())).valueOf()) {
			/** @type {f64} */
			x = new f64(math__sin(new f64( math__pi.valueOf() * x.valueOf())));
		} else if ((new bool( new bool(n.valueOf() == new int(1).valueOf()).valueOf() || new bool(n.valueOf() == new int(2).valueOf()).valueOf())).valueOf()) {
			/** @type {f64} */
			x = new f64(math__cos(new f64( math__pi.valueOf() * (new f64( new f32(0.5).valueOf() - x.valueOf())).valueOf())));
		} else if ((new bool( new bool(n.valueOf() == new int(3).valueOf()).valueOf() || new bool(n.valueOf() == new int(4).valueOf()).valueOf())).valueOf()) {
			/** @type {f64} */
			x = new f64(math__sin(new f64( math__pi.valueOf() * (new f64( new f32(1.0).valueOf() - x.valueOf())).valueOf())));
		} else if ((new bool( new bool(n.valueOf() == new int(5).valueOf()).valueOf() || new bool(n.valueOf() == new int(6).valueOf()).valueOf())).valueOf()) {
			/** @type {f64} */
			x = new f64(-math__cos(new f64( math__pi.valueOf() * (new f64( x.valueOf() - new f32(1.5).valueOf())).valueOf())).val );
		} else {
			/** @type {f64} */
			x = new f64(math__sin(new f64( math__pi.valueOf() * (new f64( x.valueOf() - new int(2).valueOf())).valueOf())));
		}
		return -x.val ;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/** @constant {Array_f64} */
let math__gamma_p = undefined;
/** @constant {Array_f64} */
let math__gamma_q = undefined;
/** @constant {Array_f64} */
let math__gamma_s = undefined;
/** @constant {Array_f64} */
let math__lgamma_a = undefined;
/** @constant {Array_f64} */
let math__lgamma_r = undefined;
/** @constant {Array_f64} */
let math__lgamma_s = undefined;
/** @constant {Array_f64} */
let math__lgamma_t = undefined;
/** @constant {Array_f64} */
let math__lgamma_u = undefined;
/** @constant {Array_f64} */
let math__lgamma_v = undefined;
/** @constant {Array_f64} */
let math__lgamma_w = undefined;

/** @namespace math */
/**
 * @function
 * @param {f64} x
 * @param {f64} y
 * @returns {f64}
*/
function math__hypot(x, y) {
	try {
		if ((new bool( math__is_inf(x, new int(0)).valueOf() || math__is_inf(y, new int(0)).valueOf())).valueOf()) {
			return math__inf(new int(1));
		}
		if ((new bool( math__is_nan(x).valueOf() || math__is_nan(y).valueOf())).valueOf()) {
			return math__nan();
		}
		/** @type {f64} */
		let result = new f64(new f32(0.0));
		if ((new bool( new bool(x.valueOf() != new f32(0.0).valueOf()).valueOf() || new bool(y.valueOf() != new f32(0.0).valueOf()).valueOf())).valueOf()) {
			/** @type {f64} */
			const abs_x = new f64(math__abs(x));
			/** @type {f64} */
			const abs_y = new f64(math__abs(y));
			let [min, max] = math__minmax(abs_x, abs_y);
			/** @type {f64} */
			const rat = new f64(new f64( min.valueOf() / max.valueOf()));
			/** @type {f64} */
			const root_term = new f64(math__sqrt(new f64( new f32(1.0).valueOf() + new f64( rat.valueOf() * rat.valueOf()).valueOf())));
			if ((new bool(max.valueOf() < new f64( math__max_f64.valueOf() / root_term.valueOf()).valueOf())).valueOf()) {
				/** @type {f64} */
				result = new f64(new f64( max.valueOf() * root_term.valueOf()));
			} else {
				builtin__panic (new string("overflow in hypot_e function"));
			}
		}
		return result;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/**
 * @function
 * @param {f64} x
 * @returns {f64}
*/
function math__acosh(x) {
	try {
		if ((new bool(x.valueOf() == new f32(0.0).valueOf())).valueOf()) {
			return new f32(0.0);
		} else if ((new bool(x.valueOf() > new float_literal( new f32(1.0).valueOf() / math__internal__sqrt_f64_epsilon.valueOf()).valueOf())).valueOf()) {
			return new f64( math__log(x).valueOf() + new float_literal( math__pi.valueOf() * new int(2).valueOf()).valueOf());
		} else if ((new bool(x.valueOf() > new f32(2.0).valueOf())).valueOf()) {
			return math__log(new f64( new f64( new f32(2.0).valueOf() * x.valueOf()).valueOf() - new f64( new f32(1.0).valueOf() / (new f64( math__sqrt(new f64( new f64( x.valueOf() * x.valueOf()).valueOf() - new f32(1.0).valueOf())).valueOf() + x.valueOf())).valueOf()).valueOf()));
		} else if ((new bool(x.valueOf() > new f32(1.0).valueOf())).valueOf()) {
			/** @type {f64} */
			const t = new f64(new f64( x.valueOf() - new f32(1.0).valueOf()));
			return math__log1p(new f64( t.valueOf() + math__sqrt(new f64( new f64( new f32(2.0).valueOf() * t.valueOf()).valueOf() + new f64( t.valueOf() * t.valueOf()).valueOf())).valueOf()));
		} else if ((new bool(x.valueOf() == new f32(1.0).valueOf())).valueOf()) {
			return new f32(0.0);
		} else {
			return math__nan();
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} x
 * @returns {f64}
*/
function math__asinh(x) {
	try {
		/** @type {f64} */
		const a = new f64(math__abs(x));
		/** @type {f64} */
		const s = new f64(((new bool(x.valueOf() < new int(0).valueOf())).valueOf() ? new f32(-1.0) : new f32(1.0)));
		if ((new bool(a.valueOf() > new float_literal( new f32(1.0).valueOf() / math__internal__sqrt_f64_epsilon.valueOf()).valueOf())).valueOf()) {
			return new f64( s.valueOf() * (new f64( math__log(a).valueOf() + new float_literal( math__pi.valueOf() * new f32(2.0).valueOf()).valueOf())).valueOf());
		} else if ((new bool(a.valueOf() > new f32(2.0).valueOf())).valueOf()) {
			return new f64( s.valueOf() * math__log(new f64( new f64( new f32(2.0).valueOf() * a.valueOf()).valueOf() + new f64( new f32(1.0).valueOf() / (new f64( a.valueOf() + math__sqrt(new f64( new f64( a.valueOf() * a.valueOf()).valueOf() + new f32(1.0).valueOf())).valueOf())).valueOf()).valueOf())).valueOf());
		} else if ((new bool(a.valueOf() > math__internal__sqrt_f64_epsilon.valueOf())).valueOf()) {
			/** @type {f64} */
			const a2 = new f64(new f64( a.valueOf() * a.valueOf()));
			return new f64( s.valueOf() * math__log1p(new f64( a.valueOf() + new f64( a2.valueOf() / (new f64( new f32(1.0).valueOf() + math__sqrt(new f64( new f32(1.0).valueOf() + a2.valueOf())).valueOf())).valueOf()).valueOf())).valueOf());
		} else {
			return x;
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} x
 * @returns {f64}
*/
function math__atanh(x) {
	try {
		/** @type {f64} */
		const a = new f64(math__abs(x));
		/** @type {f64} */
		const s = new f64(((new bool(x.valueOf() < new int(0).valueOf())).valueOf() ? new f32(-1.0) : new f32(1.0)));
		if ((new bool(a.valueOf() > new f32(1.0).valueOf())).valueOf()) {
			return math__nan();
		} else if ((new bool(a.valueOf() == new f32(1.0).valueOf())).valueOf()) {
			return ((new bool(x.valueOf() < new int(0).valueOf())).valueOf() ? math__inf(new int(-1)) : math__inf(new int(1)));
		} else if ((new bool(a.valueOf() >= new f32(0.5).valueOf())).valueOf()) {
			return new f64( new f64( s.valueOf() * new f32(0.5).valueOf()).valueOf() * math__log1p(new f64( new f64( new f32(2.0).valueOf() * a.valueOf()).valueOf() / (new f64( new f32(1.0).valueOf() - a.valueOf())).valueOf())).valueOf());
		} else if ((new bool(a.valueOf() > math__internal__f64_epsilon.valueOf())).valueOf()) {
			return new f64( new f64( s.valueOf() * new f32(0.5).valueOf()).valueOf() * math__log1p(new f64( new f64( new f32(2.0).valueOf() * a.valueOf()).valueOf() + new f64( new f64( new f64( new f32(2.0).valueOf() * a.valueOf()).valueOf() * a.valueOf()).valueOf() / (new f64( new f32(1.0).valueOf() - a.valueOf())).valueOf()).valueOf())).valueOf());
		} else {
			return x;
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/* [inline] */
/**
 * @function
 * @param {f64} a
 * @returns {f64}
*/
function math__acos(a) {
	try {
		return Math.acos(a);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {f64} a
 * @returns {f64}
*/
function math__asin(a) {
	try {
		return Math.asin(a);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {f64} a
 * @returns {f64}
*/
function math__atan(a) {
	try {
		return Math.atan(a);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {f64} a
 * @param {f64} b
 * @returns {f64}
*/
function math__atan2(a, b) {
	try {
		return Math.atan2(a, b);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/** @constant {f64} */
const math__morebits = new f32(6.123233995736765886130e-17);
/** @constant {f64} */
const math__tan3pio8 = new f32(2.41421356237309504880);

/* [inline] */
/**
 * @function
 * @param {f64} x
 * @returns {f64}
*/
function math__xatan(x) {
	try {
		/** @type {f64} */
		const xatan_p0 = new f64(new f32(-8.750608600031904122785e-01));
		/** @type {f64} */
		const xatan_p1 = new f64(new f32(-1.615753718733365076637e+01));
		/** @type {f64} */
		const xatan_p2 = new f64(new f32(-7.500855792314704667340e+01));
		/** @type {f64} */
		const xatan_p3 = new f64(new f32(-1.228866684490136173410e+02));
		/** @type {f64} */
		const xatan_p4 = new f64(new f32(-6.485021904942025371773e+01));
		/** @type {f64} */
		const xatan_q0 = new f64(new f32(2.485846490142306297962e+01));
		/** @type {f64} */
		const xatan_q1 = new f64(new f32(1.650270098316988542046e+02));
		/** @type {f64} */
		const xatan_q2 = new f64(new f32(4.328810604912902668951e+02));
		/** @type {f64} */
		const xatan_q3 = new f64(new f32(4.853903996359136964868e+02));
		/** @type {f64} */
		const xatan_q4 = new f64(new f32(1.945506571482613964425e+02));
		/** @type {f64} */
		let z = new f64(new f64( x.valueOf() * x.valueOf()));
		/** @type {f64} */
		z = new f64(new f64( new f64( z.valueOf() * (new f64( new f64( (new f64( new f64( (new f64( new f64( (new f64( new f64( xatan_p0.valueOf() * z.valueOf()).valueOf() + xatan_p1.valueOf())).valueOf() * z.valueOf()).valueOf() + xatan_p2.valueOf())).valueOf() * z.valueOf()).valueOf() + xatan_p3.valueOf())).valueOf() * z.valueOf()).valueOf() + xatan_p4.valueOf())).valueOf()).valueOf() / (new f64( new f64( (new f64( new f64( (new f64( new f64( (new f64( new f64( (new f64( z.valueOf() + xatan_q0.valueOf())).valueOf() * z.valueOf()).valueOf() + xatan_q1.valueOf())).valueOf() * z.valueOf()).valueOf() + xatan_q2.valueOf())).valueOf() * z.valueOf()).valueOf() + xatan_q3.valueOf())).valueOf() * z.valueOf()).valueOf() + xatan_q4.valueOf())).valueOf()));
		/** @type {f64} */
		z = new f64(new f64( new f64( x.valueOf() * z.valueOf()).valueOf() + x.valueOf()));
		return z;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {f64} x
 * @returns {f64}
*/
function math__satan(x) {
	try {
		if ((new bool(x.valueOf() <= new f32(0.66).valueOf())).valueOf()) {
			return math__xatan(x);
		}
		if ((new bool(x.valueOf() > math__tan3pio8.valueOf())).valueOf()) {
			return new f64( new f64( new float_literal( math__pi.valueOf() / new f32(2.0).valueOf()).valueOf() - math__xatan(new f64( new f32(1.0).valueOf() / x.valueOf())).valueOf()).valueOf() + new f64(math__morebits).valueOf());
		}
		return new f64( new f64( new float_literal( math__pi.valueOf() / new int(4).valueOf()).valueOf() + math__xatan(new f64( (new f64( x.valueOf() - new f32(1.0).valueOf())).valueOf() / (new f64( x.valueOf() + new f32(1.0).valueOf())).valueOf())).valueOf()).valueOf() + new f64( new f32(0.5).valueOf() * new f64(math__morebits).valueOf()).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} x
 * @returns {f64}
*/
function math__pure_v_but_overriden_by_js_atan(x) {
	try {
		if ((new bool(x.valueOf() == new int(0).valueOf())).valueOf()) {
			return x;
		}
		if ((new bool(x.valueOf() > new int(0).valueOf())).valueOf()) {
			return math__satan(x);
		}
		return -math__satan(-x.val ).val ;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} y
 * @param {f64} x
 * @returns {f64}
*/
function math__pure_v_but_overriden_by_js_atan2(y, x) {
	try {
		if ((new bool( math__is_nan(y).valueOf() || math__is_nan(x).valueOf())).valueOf()) {
			return math__nan();
		}
		if ((new bool(y.valueOf() == new f32(0.0).valueOf())).valueOf()) {
			if ((new bool( new bool(x.valueOf() >= new int(0).valueOf()).valueOf() && !math__signbit(x).val .valueOf())).valueOf()) {
				return math__copysign(new int(0), y);
			}
			return math__copysign(math__pi, y);
		}
		if ((new bool(x.valueOf() == new f32(0.0).valueOf())).valueOf()) {
			return math__copysign(new float_literal( math__pi.valueOf() / new f32(2.0).valueOf()), y);
		}
		if ((math__is_inf(x, new int(0))).valueOf()) {
			if ((math__is_inf(x, new int(1))).valueOf()) {
				if ((math__is_inf(y, new int(0))).valueOf()) {
					return math__copysign(new float_literal( math__pi.valueOf() / new int(4).valueOf()), y);
				}
				return math__copysign(new int(0), y);
			}
			if ((math__is_inf(y, new int(0))).valueOf()) {
				return math__copysign(new float_literal( new float_literal( new f32(3.0).valueOf() * math__pi.valueOf()).valueOf() / new f32(4.0).valueOf()), y);
			}
			return math__copysign(math__pi, y);
		}
		if ((math__is_inf(y, new int(0))).valueOf()) {
			return math__copysign(new float_literal( math__pi.valueOf() / new f32(2.0).valueOf()), y);
		}
		/** @type {f64} */
		const q = new f64(math__atan(new f64( y.valueOf() / x.valueOf())));
		if ((new bool(x.valueOf() < new int(0).valueOf())).valueOf()) {
			if ((new bool(q.valueOf() <= new int(0).valueOf())).valueOf()) {
				return new f64( q.valueOf() + math__pi.valueOf());
			}
			return new f64( q.valueOf() - math__pi.valueOf());
		}
		return q;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} x_
 * @returns {f64}
*/
function math__pure_v_but_overriden_by_js_asin(x_) {
	try {
		/** @type {f64} */
		let x = new f64(x_);
		if ((new bool(x.valueOf() == new f32(0.0).valueOf())).valueOf()) {
			return x;
		}
		/** @type {bool} */
		let sign = new bool(new bool(false));
		if ((new bool(x.valueOf() < new f32(0.0).valueOf())).valueOf()) {
			/** @type {f64} */
			x = new f64(-x.val );
			/** @type {bool} */
			sign = new bool(new bool(true));
		}
		if ((new bool(x.valueOf() > new f32(1.0).valueOf())).valueOf()) {
			return math__nan();
		}
		/** @type {f64} */
		let temp = new f64(math__sqrt(new f64( new f32(1.0).valueOf() - new f64( x.valueOf() * x.valueOf()).valueOf())));
		if ((new bool(x.valueOf() > new f32(0.7).valueOf())).valueOf()) {
			/** @type {f64} */
			temp = new f64(new f64( new float_literal( math__pi.valueOf() / new f32(2.0).valueOf()).valueOf() - math__satan(new f64( temp.valueOf() / x.valueOf())).valueOf()));
		} else {
			/** @type {f64} */
			temp = new f64(math__satan(new f64( x.valueOf() / temp.valueOf())));
		}
		if ((sign).valueOf()) {
			/** @type {f64} */
			temp = new f64(-temp.val );
		}
		return temp;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {f64} x
 * @returns {f64}
*/
function math__pure_v_but_overriden_by_js_acos(x) {
	try {
		if ((new bool( (new bool(x.valueOf() < new f32(-1.0).valueOf())).valueOf() || (new bool(x.valueOf() > new f32(1.0).valueOf())).valueOf())).valueOf()) {
			return math__nan();
		}
		if ((new bool(x.valueOf() > new f32(0.5).valueOf())).valueOf()) {
			return new f64( new f32(2.0).valueOf() * math__asin(math__sqrt(new f64( new f32(0.5).valueOf() - new f64( new f32(0.5).valueOf() * x.valueOf()).valueOf()))).valueOf());
		}
		/** @type {f64} */
		let z = new f64(new f64( new f64( math__pi.valueOf() / new f32(4.0).valueOf()).valueOf() - math__asin(x).valueOf()));
		/** @type {f64} */
		z = new f64(new f64( z.valueOf() + math__morebits.valueOf()));
		/** @type {f64} */
		z = new f64(new f64( z.valueOf() + new f64( math__pi.valueOf() / new f32(4.0).valueOf()).valueOf()));
		return z;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/**
 * @function
 * @param {f64} x
 * @param {f64} b
 * @returns {f64}
*/
function math__log_n(x, b) {
	try {
		/** @type {f64} */
		const y = new f64(math__log(x));
		/** @type {f64} */
		const z = new f64(math__log(b));
		return new f64( y.valueOf() / z.valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} x
 * @returns {f64}
*/
function math__log10(x) {
	try {
		return new f64( math__log(x).valueOf() * (new float_literal( new f32(1.0).valueOf() / math__ln10.valueOf())).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} x
 * @returns {f64}
*/
function math__log2(x) {
	try {
		let [frac, exp] = math__frexp(x);
		if ((new bool(frac.valueOf() == new f32(0.5).valueOf())).valueOf()) {
			return new f64(new int( exp.valueOf() - new int(1).valueOf()));
		}
		return new f64( new f64( math__log(frac).valueOf() * (new float_literal( new f32(1.0).valueOf() / math__ln2.valueOf())).valueOf()).valueOf() + new f64(exp).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} x
 * @returns {f64}
*/
function math__log1p(x) {
	try {
		/** @type {f64} */
		const y = new f64(new f64( new f32(1.0).valueOf() + x.valueOf()));
		/** @type {f64} */
		const z = new f64(new f64( y.valueOf() - new f32(1.0).valueOf()));
		return new f64( math__log(y).valueOf() - new f64( (new f64( z.valueOf() - x.valueOf())).valueOf() / y.valueOf()).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} x
 * @returns {f64}
*/
function math__log_b(x) {
	try {
		if ((new bool(x.valueOf() == new int(0).valueOf())).valueOf()) {
			return math__inf(new int(-1));
		}
		if ((math__is_inf(x, new int(0))).valueOf()) {
			return math__inf(new int(1));
		}
		if ((math__is_nan(x)).valueOf()) {
			return x;
		}
		return new f64(math__ilog_b_(x));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} x
 * @returns {int}
*/
function math__ilog_b(x) {
	try {
		if ((new bool(x.valueOf() == new int(0).valueOf())).valueOf()) {
			return math__min_i32;
		}
		if ((math__is_nan(x)).valueOf()) {
			return math__max_i32;
		}
		if ((math__is_inf(x, new int(0))).valueOf()) {
			return math__max_i32;
		}
		return math__ilog_b_(x);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} x_
 * @returns {int}
*/
function math__ilog_b_(x_) {
	try {
		let [x, exp] = math__normalize(x_);
		return new int( new int( new int(new u64( BigInt((new u64( BigInt(math__f64_bits(x).valueOf()) >> BigInt(math__shift.valueOf()))).valueOf()) & BigInt(math__mask.valueOf()))).valueOf() - math__bias.valueOf()).valueOf() + exp.valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} a
 * @returns {f64}
*/
function math__log(a) {
	try {
		/** @type {f64} */
		const ln2_hi = new f64(new f32(6.93147180369123816490e-01));
		/** @type {f64} */
		const ln2_lo = new f64(new f32(1.90821492927058770002e-10));
		/** @type {f64} */
		const l1 = new f64(new f32(6.666666666666735130e-01));
		/** @type {f64} */
		const l2 = new f64(new f32(3.999999999940941908e-01));
		/** @type {f64} */
		const l3 = new f64(new f32(2.857142874366239149e-01));
		/** @type {f64} */
		const l4 = new f64(new f32(2.222219843214978396e-01));
		/** @type {f64} */
		const l5 = new f64(new f32(1.818357216161805012e-01));
		/** @type {f64} */
		const l6 = new f64(new f32(1.531383769920937332e-01));
		/** @type {f64} */
		const l7 = new f64(new f32(1.479819860511658591e-01));
		/** @type {f64} */
		const x = new f64(a);
		if ((new bool( math__is_nan(x).valueOf() || math__is_inf(x, new int(1)).valueOf())).valueOf()) {
			return x;
		} else if ((new bool(x.valueOf() < new int(0).valueOf())).valueOf()) {
			return math__nan();
		} else if ((new bool(x.valueOf() == new int(0).valueOf())).valueOf()) {
			return math__inf(new int(-1));
		}
		let [f1, ki] = math__frexp(x);
		if ((new bool(f1.valueOf() < new float_literal( math__sqrt2.valueOf() / new int(2).valueOf()).valueOf())).valueOf()) {
			/** @type {f64} */
			f1.val = Math.floor(f1 * new f64(new int(2)));
			ki.val --;
		}
		/** @type {f64} */
		const f = new f64(new f64( f1.valueOf() - new int(1).valueOf()));
		/** @type {f64} */
		const k = new f64(new f64(ki));
		/** @type {f64} */
		const s = new f64(new f64( f.valueOf() / (new f64( new int(2).valueOf() + f.valueOf())).valueOf()));
		/** @type {f64} */
		const s2 = new f64(new f64( s.valueOf() * s.valueOf()));
		/** @type {f64} */
		const s4 = new f64(new f64( s2.valueOf() * s2.valueOf()));
		/** @type {f64} */
		const t1 = new f64(new f64( s2.valueOf() * (new f64( l1.valueOf() + new f64( s4.valueOf() * (new f64( l3.valueOf() + new f64( s4.valueOf() * (new f64( l5.valueOf() + new f64( s4.valueOf() * l7.valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()));
		/** @type {f64} */
		const t2 = new f64(new f64( s4.valueOf() * (new f64( l2.valueOf() + new f64( s4.valueOf() * (new f64( l4.valueOf() + new f64( s4.valueOf() * l6.valueOf()).valueOf())).valueOf()).valueOf())).valueOf()));
		/** @type {f64} */
		const r = new f64(new f64( t1.valueOf() + t2.valueOf()));
		/** @type {f64} */
		const hfsq = new f64(new f64( new f64( new f32(0.5).valueOf() * f.valueOf()).valueOf() * f.valueOf()));
		return new f64( new f64( k.valueOf() * ln2_hi.valueOf()).valueOf() - (new f64( (new f64( hfsq.valueOf() - (new f64( new f64( s.valueOf() * (new f64( hfsq.valueOf() + r.valueOf())).valueOf()).valueOf() + new f64( k.valueOf() * ln2_lo.valueOf()).valueOf())).valueOf())).valueOf() - f.valueOf())).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/**
 * @function
 * @param {f64} a
 * @returns {f64}
*/
function math__aprox_sin(a) {
	try {
		/** @type {f64} */
		const a0 = new f64(new f32(1.91059300966915117e-31));
		/** @type {f64} */
		const a1 = new f64(new f32(1.00086760103908896));
		/** @type {f64} */
		const a2 = new f64(new f32(-1.21276126894734565e-2));
		/** @type {f64} */
		const a3 = new f64(new f32(-1.38078780785773762e-1));
		/** @type {f64} */
		const a4 = new f64(new f32(-2.67353392911981221e-2));
		/** @type {f64} */
		const a5 = new f64(new f32(2.08026600266304389e-2));
		/** @type {f64} */
		const a6 = new f64(new f32(-3.03996055049204407e-3));
		/** @type {f64} */
		const a7 = new f64(new f32(1.38235642404333740e-4));
		return new f64( a0.valueOf() + new f64( a.valueOf() * (new f64( a1.valueOf() + new f64( a.valueOf() * (new f64( a2.valueOf() + new f64( a.valueOf() * (new f64( a3.valueOf() + new f64( a.valueOf() * (new f64( a4.valueOf() + new f64( a.valueOf() * (new f64( a5.valueOf() + new f64( a.valueOf() * (new f64( a6.valueOf() + new f64( a.valueOf() * a7.valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} a
 * @returns {f64}
*/
function math__aprox_cos(a) {
	try {
		/** @type {f64} */
		const a0 = new f64(new f32(9.9995999154986614e-1));
		/** @type {f64} */
		const a1 = new f64(new f32(1.2548995793001028e-3));
		/** @type {f64} */
		const a2 = new f64(new f32(-5.0648546280678015e-1));
		/** @type {f64} */
		const a3 = new f64(new f32(1.2942246466519995e-2));
		/** @type {f64} */
		const a4 = new f64(new f32(2.8668384702547972e-2));
		/** @type {f64} */
		const a5 = new f64(new f32(7.3726485210586547e-3));
		/** @type {f64} */
		const a6 = new f64(new f32(-3.8510875386947414e-3));
		/** @type {f64} */
		const a7 = new f64(new f32(4.7196604604366623e-4));
		/** @type {f64} */
		const a8 = new f64(new f32(-1.8776444013090451e-5));
		return new f64( a0.valueOf() + new f64( a.valueOf() * (new f64( a1.valueOf() + new f64( a.valueOf() * (new f64( a2.valueOf() + new f64( a.valueOf() * (new f64( a3.valueOf() + new f64( a.valueOf() * (new f64( a4.valueOf() + new f64( a.valueOf() * (new f64( a5.valueOf() + new f64( a.valueOf() * (new f64( a6.valueOf() + new f64( a.valueOf() * (new f64( a7.valueOf() + new f64( a.valueOf() * a8.valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf())).valueOf()).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {f64} x
 * @param {f64} y
 * @returns {f64}
*/
function math__copysign(x, y) {
	try {
		return math__f64_from_bits(new u64( BigInt((new u64( BigInt(math__f64_bits(x).valueOf()) & BigInt(~math__sign_mask.val .valueOf()))).valueOf()) | BigInt((new u64( BigInt(math__f64_bits(y).valueOf()) & BigInt(math__sign_mask.valueOf()))).valueOf())));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {f64} radians
 * @returns {f64}
*/
function math__degrees(radians) {
	try {
		return new f64( radians.valueOf() * (new float_literal( new f32(180.0).valueOf() / math__pi.valueOf())).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [params] */
/**
 * @constructor
 * @param {{base?: int, reverse?: bool}} init
*/
function math__DigitParams({ base = new int(10), reverse = new bool(false) }) {
	this.base = base
	this.reverse = reverse
};
math__DigitParams.prototype = {
	toString() {
		return `math__DigitParams { base: ${this["base"].toString()} , reverse: ${this["reverse"].toString()} }`
	},
	/** @type {int} */
	base: new int(0),
	/** @type {bool} */
	reverse: new bool(false),
	$toJS() { return this; }
	};

/**
 * @function
 * @param {i64} num
 * @param {math__DigitParams} params
 * @returns {Array_int}
*/
function math__digits(num, params) {
	try {
		/** @type {int} */
		let b = new int(params.base);
		if ((new bool(b.valueOf() < new int(2).valueOf())).valueOf()) {
			builtin__panic (new string(`digits: Cannot find digits of n with base ${int_str(b)}`));
		}
		/** @type {i64} */
		let n = new i64(num);
		/** @type {int} */
		let sign = new int(new int(1));
		if ((new bool(n.valueOf() < new int(0).valueOf())).valueOf()) {
			/** @type {int} */
			sign = new int(new int(-1));
			/** @type {i64} */
			n = new i64(-n.val );
		}
		/** @type {Array_int} */
		let res = new array(new array_buffer({arr: [], len: new int(0), cap: new int(0)}));
		if ((new bool(n.valueOf() == new int(0).valueOf())).valueOf()) {
			array_push(res,new int(0),false);
			return res;
		}
		while (+new bool(n.valueOf() != new int(0).valueOf())) {
			try { 
				/** @type {i64} */
				const next_n = new i64(new i64( BigInt(n.valueOf()) / BigInt(b.valueOf())));
				array_push(res,new int(new i64( BigInt(n.valueOf()) - BigInt(new i64( BigInt(next_n.valueOf()) * BigInt(b.valueOf())).valueOf()))),false);
				/** @type {i64} */
				n = new i64(next_n);
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		if ((new bool(sign.valueOf() == new int(-1).valueOf())).valueOf()) {
			/** @type {int} */
			res.arr.set(new int(new int( res.len.valueOf() - new int(1).valueOf()).valueOf()),new int(res.arr.get(new int(new int( res.len.valueOf() - new int(1).valueOf()).valueOf())).val * new int(sign)));
		}
		if ((params.reverse).valueOf()) {
			/** @type {Array_int} */
			res = array_reverse(res,);
		}
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {i64} number
 * @returns {int}
*/
function math__count_digits(number) {
	try {
		/** @type {i64} */
		let n = new i64(number);
		if ((new bool(n.valueOf() == new int(0).valueOf())).valueOf()) {
			return new int(1);
		}
		/** @type {int} */
		let c = new int(new int(0));
		while (+new bool(n.valueOf() != new int(0).valueOf())) {
			try { 
				/** @type {i64} */
				n = new i64(new i64( BigInt(n.valueOf()) / BigInt(new int(10).valueOf())));
				c.val ++;
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return c;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} a
 * @param {f64} b
 * @returns {multi_return_f64_f64}
*/
function math__minmax(a, b) {
	try {
		if ((new bool(a.valueOf() < b.valueOf())).valueOf()) {
			return [a, b];
		}
		return [b, a];
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {f64} x
 * @param {f64} a
 * @param {f64} b
 * @returns {f64}
*/
function math__clamp(x, a, b) {
	try {
		if ((new bool(x.valueOf() < a.valueOf())).valueOf()) {
			return a;
		}
		if ((new bool(x.valueOf() > b.valueOf())).valueOf()) {
			return b;
		}
		return x;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {f64} n
 * @returns {f64}
*/
function math__sign(n) {
	try {
		if ((math__is_nan(n)).valueOf()) {
			return math__nan();
		}
		return math__copysign(new f32(1.0), n);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {f64} n
 * @returns {int}
*/
function math__signi(n) {
	try {
		return new int(math__copysign(1, n));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {f64} degrees
 * @returns {f64}
*/
function math__radians(degrees) {
	try {
		return new f64( degrees.valueOf() * (new float_literal( math__pi.valueOf() / new f32(180.0).valueOf())).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {f64} x
 * @returns {bool}
*/
function math__signbit(x) {
	try {
		return new bool(new u64( BigInt(math__f64_bits(x).valueOf()) & BigInt(math__sign_mask.valueOf())).valueOf() != new int(0).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} a
 * @param {f64} b
 * @param {f64} tol
 * @returns {bool}
*/
function math__tolerance(a, b, tol) {
	try {
		/** @type {f64} */
		let ee = new f64(tol);
		if ((new bool(a.valueOf() == b.valueOf())).valueOf()) {
			return new bool(true);
		}
		/** @type {f64} */
		let d = new f64(new f64( a.valueOf() - b.valueOf()));
		if ((new bool(d.valueOf() < new int(0).valueOf())).valueOf()) {
			/** @type {f64} */
			d = new f64(-d.val );
		}
		if ((new bool(b.valueOf() != new int(0).valueOf())).valueOf()) {
			/** @type {f64} */
			ee = new f64(new f64( ee.valueOf() * b.valueOf()));
			if ((new bool(ee.valueOf() < new int(0).valueOf())).valueOf()) {
				/** @type {f64} */
				ee = new f64(-ee.val );
			}
		}
		return new bool(d.valueOf() < ee.valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} a
 * @param {f64} b
 * @returns {bool}
*/
function math__close(a, b) {
	try {
		return math__tolerance(a, b, new f32(1e-14));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} a
 * @param {f64} b
 * @returns {bool}
*/
function math__veryclose(a, b) {
	try {
		return math__tolerance(a, b, new f32(4e-16));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} a
 * @param {f64} b
 * @returns {bool}
*/
function math__alike(a, b) {
	try {
		if ((new bool( math__is_nan(a).valueOf() && math__is_nan(b).valueOf())).valueOf()) {
			return new bool(true);
		} else if ((new bool(a.valueOf() == b.valueOf())).valueOf()) {
			return new bool(math__signbit(a).valueOf() == math__signbit(b).valueOf());
		}
		return new bool(false);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} x
 * @returns {bool}
*/
function math__is_odd_int(x) {
	try {
		let [xi, xf] = math__modf(x);
		return new bool( new bool(xf.valueOf() == new int(0).valueOf()).valueOf() && new bool((new i64( BigInt(new i64(xi).valueOf()) & BigInt(new int(1).valueOf()))).valueOf() == new int(1).valueOf()).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} x
 * @returns {bool}
*/
function math__is_neg_int(x) {
	try {
		if ((new bool(x.valueOf() < new int(0).valueOf())).valueOf()) {
			let [, xf] = math__modf(x);
			return new bool(xf.valueOf() == new int(0).valueOf());
		}
		return new bool(false);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/* [inline] */
/**
 * @function
 * @param {int} a
 * @param {int} b
 * @returns {int}
*/
function math__min_T_int(a, b) {
	try {
		return ((new bool(a.valueOf() < b.valueOf())).valueOf() ? a : b);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/** @constant {f64} */
const math__modf_maxpowtwo = new f32(4.503599627370496000e+15);

/**
 * @function
 * @param {f64} f
 * @returns {multi_return_f64_f64}
*/
function math__modf(f) {
	try {
		/** @type {f64} */
		const abs_f = new f64(math__abs(f));
		/** @type {f64} */
		let i = new f64(new f32(0.0));
		if ((new bool(abs_f.valueOf() >= math__modf_maxpowtwo.valueOf())).valueOf()) {
			/** @type {f64} */
			i = new f64(f);
		} else {
			/** @type {f64} */
			i = new f64(new f64( abs_f.valueOf() + math__modf_maxpowtwo.valueOf()));
			/** @type {f64} */
			i.val = Math.floor(i - new f64(math__modf_maxpowtwo));
			while (+new bool(i.valueOf() > abs_f.valueOf())) {
				try { 
					/** @type {f64} */
					i.val = Math.floor(i - new f64(new f32(1.0)));
				} catch (e) {
				 if (e instanceof BreakException) { break; }
				 else if (e instanceof ContinueException) { continue; }
				 else { throw e; } }
			}
			
			if ((new bool(f.valueOf() < new f32(0.0).valueOf())).valueOf()) {
				/** @type {f64} */
				i = new f64(-i.val );
			}
		}
		return [i, new f64( f.valueOf() - i.valueOf())];
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/**
 * @function
 * @param {f32} x
 * @param {f32} y
 * @returns {f32}
*/
function math__nextafter32(x, y) {
	try {
		/** @type {f32} */
		let r = new f32(new f32(0.0));
		if ((new bool( math__is_nan(new f64(x)).valueOf() || math__is_nan(new f64(y)).valueOf())).valueOf()) {
			/** @type {f32} */
			r = new f32(new f32(math__nan()));
		} else if ((new bool(x.valueOf() == y.valueOf())).valueOf()) {
			/** @type {f32} */
			r = new f32(x);
		} else if ((new bool(x.valueOf() == new int(0).valueOf())).valueOf()) {
			/** @type {f32} */
			r = new f32(new f32(math__copysign(new f64(math__f32_from_bits(new int(1))), new f64(y))));
		} else if ((new bool((new bool(y.valueOf() > x.valueOf())).valueOf() == (new bool(x.valueOf() > new int(0).valueOf())).valueOf())).valueOf()) {
			/** @type {f32} */
			r = new f32(math__f32_from_bits(new u32( math__f32_bits(x).valueOf() + new int(1).valueOf())));
		} else {
			/** @type {f32} */
			r = new f32(math__f32_from_bits(new u32( math__f32_bits(x).valueOf() - new int(1).valueOf())));
		}
		return r;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} x
 * @param {f64} y
 * @returns {f64}
*/
function math__nextafter(x, y) {
	try {
		/** @type {f64} */
		let r = new f64(new f32(0.0));
		if ((new bool( math__is_nan(x).valueOf() || math__is_nan(y).valueOf())).valueOf()) {
			/** @type {f64} */
			r = new f64(math__nan());
		} else if ((new bool(x.valueOf() == y.valueOf())).valueOf()) {
			/** @type {f64} */
			r = new f64(x);
		} else if ((new bool(x.valueOf() == new int(0).valueOf())).valueOf()) {
			/** @type {f64} */
			r = new f64(math__copysign(math__f64_from_bits(new int(1)), y));
		} else if ((new bool((new bool(y.valueOf() > x.valueOf())).valueOf() == (new bool(x.valueOf() > new int(0).valueOf())).valueOf())).valueOf()) {
			/** @type {f64} */
			r = new f64(math__f64_from_bits(new u64( BigInt(math__f64_bits(x).valueOf()) + BigInt(new int(1).valueOf()))));
		} else {
			/** @type {f64} */
			r = new f64(math__f64_from_bits(new u64( BigInt(math__f64_bits(x).valueOf()) - BigInt(new int(1).valueOf()))));
		}
		return r;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/**
 * @function
 * @param {Array_f64} c
 * @param {int} n
 * @param {f64} x
 * @returns {f64}
*/
function math__poly_n_eval(c, n, x) {
	try {
		if ((new bool(c.len.valueOf() == new int(0).valueOf())).valueOf()) {
			builtin__panic (new string("coeficients can not be empty"));
		}
		/** @type {int} */
		const len = new int(new int(math__min_T_int(c.len, n)));
		/** @type {f64} */
		let ans = new f64(c.arr.get(new int(new int( len.valueOf() - new int(1).valueOf()).valueOf())));
		for (const e of array_slice(c,new int(0), new int( len.valueOf() - new int(1).valueOf()))) {
			try { 
				/** @type {f64} */
				ans = new f64(new f64( e.valueOf() + new f64( x.valueOf() * ans.valueOf()).valueOf()));
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return ans;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {Array_f64} c
 * @param {int} n
 * @param {f64} x
 * @returns {f64}
*/
function math__poly_n_1_eval(c, n, x) {
	try {
		if ((new bool(c.len.valueOf() == new int(0).valueOf())).valueOf()) {
			builtin__panic (new string("coeficients can not be empty"));
		}
		/** @type {int} */
		const len = new int(new int( new int(math__min_T_int(c.len, n)).valueOf() - new int(1).valueOf()));
		/** @type {f64} */
		let ans = new f64(c.arr.get(new int(new int( len.valueOf() - new int(1).valueOf()).valueOf())));
		for (const e of array_slice(c,new int(0), new int( len.valueOf() - new int(1).valueOf()))) {
			try { 
				/** @type {f64} */
				ans = new f64(new f64( e.valueOf() + new f64( x.valueOf() * ans.valueOf()).valueOf()));
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return ans;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {Array_f64} c
 * @param {f64} x
 * @returns {f64}
*/
function math__poly_eval(c, x) {
	try {
		return math__poly_n_eval(c, c.len, x);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {Array_f64} c
 * @param {f64} x
 * @returns {f64}
*/
function math__poly_1_eval(c, x) {
	try {
		return math__poly_n_1_eval(c, c.len, x);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @constructor
 * @param {{c?: Array_f64, order?: int, a?: f64, b?: f64}} init
*/
function math__ChebSeries({ c = empty_array(), order = new int(0), a = new f64(0), b = new f64(0) }) {
	this.c = c
	this.order = order
	this.a = a
	this.b = b
};
math__ChebSeries.prototype = {
	toString() {
		return `math__ChebSeries { c: ${this["c"].toString()} , order: ${this["order"].toString()} , a: ${this["a"].toString()} , b: ${this["b"].toString()} }`
	},
	/** @type {Array_f64} */
	c: empty_array(),
	/** @type {int} */
	order: new int(0),
	/** @type {f64} */
	a: new f64(0),
	/** @type {f64} */
	b: new f64(0),
	$toJS() { return this; }
	};

/**
 * @function
 * @param {f64} x
 * @returns {multi_return_f64_f64}
*/
function math__ChebSeries_eval_e(cs, x) {
	try {
		/** @type {f64} */
		let d = new f64(new f32(0.0));
		/** @type {f64} */
		let dd = new f64(new f32(0.0));
		/** @type {f64} */
		const y = new f64(new f64( (new f64( new f64( new f64( new f32(2.0).valueOf() * x.valueOf()).valueOf() - cs.a.valueOf()).valueOf() - cs.b.valueOf())).valueOf() / (new f64( cs.b.valueOf() - cs.a.valueOf())).valueOf()));
		/** @type {f64} */
		const y2 = new f64(new f64( new f32(2.0).valueOf() * y.valueOf()));
		/** @type {f64} */
		let e_ = new f64(new f32(0.0));
		/** @type {f64} */
		let temp = new f64(new f32(0.0));
		for (let j = new int(cs.order); +new bool(j.valueOf() >= new int(1).valueOf()); j.val --) {
			try { 
				temp = new f64(d); d = new f64(new f64( new f64( new f64( y2.valueOf() * d.valueOf()).valueOf() - dd.valueOf()).valueOf() + cs.c.arr.get(new int(j.valueOf())).valueOf())); e_.val = Math.floor(e_ + new f64(new f64( new f64( math__abs(new f64( y2.valueOf() * temp.valueOf())).valueOf() + math__abs(dd).valueOf()).valueOf() + math__abs(cs.c.arr.get(new int(j.valueOf()))).valueOf()))); dd = new f64(temp); } catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		/** @type {f64} */
		temp = new f64(d);
		/** @type {f64} */
		d = new f64(new f64( new f64( new f64( y.valueOf() * d.valueOf()).valueOf() - dd.valueOf()).valueOf() + new f64( new f32(0.5).valueOf() * cs.c.arr.get(new int(new int(0).valueOf())).valueOf()).valueOf()));
		/** @type {f64} */
		e_.val = Math.floor(e_ + new f64(new f64( new f64( math__abs(new f64( y.valueOf() * temp.valueOf())).valueOf() + math__abs(dd).valueOf()).valueOf() + new f64( new f32(0.5).valueOf() * math__abs(cs.c.arr.get(new int(new int(0).valueOf()))).valueOf()).valueOf())));
		return [d, new f64( new f64( new f64(math__internal__f64_epsilon).valueOf() * e_.valueOf()).valueOf() + math__abs(cs.c.arr.get(new int(cs.order.valueOf()))).valueOf())];
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/** @constant {Array_f64} */
let math__pow10tab = undefined;
/** @constant {Array_f64} */
let math__pow10postab32 = undefined;
/** @constant {Array_f64} */
let math__pow10negtab32 = undefined;

/* [inline] */
/**
 * @function
 * @param {f32} a
 * @param {f32} b
 * @returns {f32}
*/
function math__powf(a, b) {
	try {
		return new f32(math__pow(a, b));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} n
 * @returns {f64}
*/
function math__pow10(n) {
	try {
		if ((new bool( new bool(new int(0).valueOf() <= n.valueOf()).valueOf() && new bool(n.valueOf() <= new int(308).valueOf()).valueOf())).valueOf()) {
			return new f64( math__pow10postab32.arr.get(new int(new u32( new u32(n).valueOf() / new int(32).valueOf()).valueOf())).valueOf() * math__pow10tab.arr.get(new int(new u32( new u32(n).valueOf() % new int(32).valueOf()).valueOf())).valueOf());
		}
		if ((new bool( new bool(new int(-323).valueOf() <= n.valueOf()).valueOf() && new bool(n.valueOf() <= new int(0).valueOf()).valueOf())).valueOf()) {
			return new f64( math__pow10negtab32.arr.get(new int(new u32( new u32(-n.val ).valueOf() / new int(32).valueOf()).valueOf())).valueOf() / math__pow10tab.arr.get(new int(new u32( new u32(-n.val ).valueOf() % new int(32).valueOf()).valueOf())).valueOf());
		}
		if ((new bool(n.valueOf() > new int(0).valueOf())).valueOf()) {
			return math__inf(new int(1));
		}
		return new f32(0.0);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {i64} a
 * @param {i64} b
 * @returns {i64}
*/
function math__powi(a, b) {
	try {
		/** @type {i64} */
		let b_ = new i64(b);
		/** @type {i64} */
		let p = new i64(a);
		/** @type {i64} */
		let v = new i64(new i64(BigInt(1n)));
		if ((new bool(b_.valueOf() < new int(0).valueOf())).valueOf()) {
			if ((new bool(a.valueOf() == new int(0).valueOf())).valueOf()) {
				return new int(-1);
			}
			return ((new bool(new i64( BigInt(a.valueOf()) * BigInt(a.valueOf())).valueOf() != new int(1).valueOf())).valueOf() ? new int(0) : ((new bool((new i64( BigInt(b_.valueOf()) & BigInt(new int(1).valueOf()))).valueOf() > new int(0).valueOf())).valueOf() ? a : new int(1)));
		}
		for (; +new bool(b_.valueOf() > new int(0).valueOf()); ) {
			try { 
				if ((new bool(new i64( BigInt(b_.valueOf()) & BigInt(new int(1).valueOf())).valueOf() > new int(0).valueOf())).valueOf()) {
					v.val = v * new i64(p); }
				p.val = p * new i64(p); b_.val = b_ >> new i64(new int(1)); } catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return v;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} x
 * @param {f64} y
 * @returns {f64}
*/
function math__pow(x, y) {
	try {
		if ((new bool( new bool(y.valueOf() == new int(0).valueOf()).valueOf() || new bool(x.valueOf() == new int(1).valueOf()).valueOf())).valueOf()) {
			return new int(1);
		} else if ((new bool(y.valueOf() == new int(1).valueOf())).valueOf()) {
			return x;
		} else if ((new bool( math__is_nan(x).valueOf() || math__is_nan(y).valueOf())).valueOf()) {
			return math__nan();
		} else if ((new bool(x.valueOf() == new int(0).valueOf())).valueOf()) {
			if ((new bool(y.valueOf() < new int(0).valueOf())).valueOf()) {
				if ((math__is_odd_int(y)).valueOf()) {
					return math__copysign(math__inf(new int(1)), x);
				}
				return math__inf(new int(1));
			} else if ((new bool(y.valueOf() > new int(0).valueOf())).valueOf()) {
				if ((math__is_odd_int(y)).valueOf()) {
					return x;
				}
				return new int(0);
			}
		} else if ((math__is_inf(y, new int(0))).valueOf()) {
			if ((new bool(x.valueOf() == new int(-1).valueOf())).valueOf()) {
				return new int(1);
			} else if ((new bool((new bool(math__abs(x).valueOf() < new int(1).valueOf())).valueOf() == math__is_inf(y, new int(1)).valueOf())).valueOf()) {
				return new int(0);
			} else {
				return math__inf(new int(1));
			}
		} else if ((math__is_inf(x, new int(0))).valueOf()) {
			if ((math__is_inf(x, new int(-1))).valueOf()) {
				return math__pow(new f64( new int(1).valueOf() / x.valueOf()), -y.val );
			}
			if ((new bool(y.valueOf() < new int(0).valueOf())).valueOf()) {
				return new int(0);
			} else if ((new bool(y.valueOf() > new int(0).valueOf())).valueOf()) {
				return math__inf(new int(1));
			}
		} else if ((new bool(y.valueOf() == new f32(0.5).valueOf())).valueOf()) {
			return math__sqrt(x);
		} else if ((new bool(y.valueOf() == new f32(-0.5).valueOf())).valueOf()) {
			return new f64( new int(1).valueOf() / math__sqrt(x).valueOf());
		}
		let [yi, yf] = math__modf(math__abs(y));
		if ((new bool( new bool(yf.valueOf() != new int(0).valueOf()).valueOf() && new bool(x.valueOf() < new int(0).valueOf()).valueOf())).valueOf()) {
			return math__nan();
		}
		if ((new bool(yi.valueOf() >= (new u64( BigInt(new u64(BigInt(1n)).valueOf()) << BigInt(new int(63).valueOf()))).valueOf())).valueOf()) {
			if ((new bool(x.valueOf() == new int(-1).valueOf())).valueOf()) {
				return new int(1);
			} else if ((new bool((new bool(math__abs(x).valueOf() < new int(1).valueOf())).valueOf() == (new bool(y.valueOf() > new int(0).valueOf())).valueOf())).valueOf()) {
				return new int(0);
			} else {
				return math__inf(new int(1));
			}
		}
		/** @type {f64} */
		let a1 = new f64(new f32(1.0));
		/** @type {int} */
		let ae = new int(new int(0));
		if ((new bool(yf.valueOf() != new int(0).valueOf())).valueOf()) {
			if ((new bool(yf.valueOf() > new f32(0.5).valueOf())).valueOf()) {
				yf.val --;
				yi.val ++;
			}
			/** @type {f64} */
			a1 = new f64(math__exp(new f64( yf.valueOf() * math__log(x).valueOf())));
		}
		let [x1, xe] = math__frexp(x);
		for (let i = new i64(new i64(yi)); +new bool(i.valueOf() != new int(0).valueOf()); i.val = i >> new i64(new int(1))) {
			try { 
				if ((new bool( new bool(xe.valueOf() < new int(new u32(new u32( new int(-1).valueOf() << new int(12).valueOf()))).valueOf()).valueOf() || new bool(new int_literal( new int(1).valueOf() << new int(12).valueOf()).valueOf() < xe.valueOf()).valueOf())).valueOf()) {
					ae.val = Math.floor(ae + new int(xe)); break;
				}
				if ((new bool(new i64( BigInt(i.valueOf()) & BigInt(new int(1).valueOf())).valueOf() == new int(1).valueOf())).valueOf()) {
					a1.val = Math.floor(a1 * new f64(x1)); ae.val = Math.floor(ae + new int(xe)); }
				x1.val = Math.floor(x1 * new f64(x1)); xe.val = Math.floor(xe << new int(new int(1))); if ((new bool(x1.valueOf() < new f32(.5).valueOf())).valueOf()) {
					x1.val = Math.floor(x1 + new f64(x1)); xe.val --;
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		if ((new bool(y.valueOf() < new int(0).valueOf())).valueOf()) {
			/** @type {f64} */
			a1 = new f64(new f64( new int(1).valueOf() / a1.valueOf()));
			/** @type {int} */
			ae = new int(-ae.val );
		}
		return math__ldexp(a1, ae);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/* [inline] */
/**
 * @function
 * @param {f64} x
 * @returns {f64}
*/
function math__q_rsqrt(x) {
	try {
		/** @type {f64} */
		const x_half = new f64(new f64( new f32(0.5).valueOf() * x.valueOf()));
		/** @type {i64} */
		let i = new i64(new i64(math__f64_bits(x)));
		/** @type {i64} */
		i = new i64(new i64( BigInt(new int(0x5fe6eb50c7b537a9).valueOf()) - BigInt((new i64( BigInt(i.valueOf()) >> BigInt(new int(1).valueOf()))).valueOf())));
		/** @type {f64} */
		let j = new f64(math__f64_from_bits(new u64(i)));
		/** @type {f64} */
		j.val = Math.floor(j * new f64((new f64( new f32(1.5).valueOf() - new f64( new f64( x_half.valueOf() * j.valueOf()).valueOf() * j.valueOf()).valueOf()))));
		/** @type {f64} */
		j.val = Math.floor(j * new f64((new f64( new f32(1.5).valueOf() - new f64( new f64( x_half.valueOf() * j.valueOf()).valueOf() * j.valueOf()).valueOf()))));
		return j;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/**
 * @function
 * @param {f64} x
 * @param {int} n_
 * @returns {f64}
*/
function math__scalbn(x, n_) {
	try {
		/** @type {int} */
		let n = new int(n_);
		/** @type {f64} */
		const x1p1023 = new f64(math__f64_from_bits(new u64(BigInt(0x7fe0000000000000n))));
		/** @type {f64} */
		const x1p53 = new f64(math__f64_from_bits(new u64(BigInt(0x4340000000000000n))));
		/** @type {f64} */
		const x1p_1022 = new f64(math__f64_from_bits(new u64(BigInt(0x0010000000000000n))));
		/** @type {f64} */
		let y = new f64(x);
		if ((new bool(n.valueOf() > new int(1023).valueOf())).valueOf()) {
			/** @type {f64} */
			y.val = Math.floor(y * new f64(x1p1023));
			/** @type {int} */
			n.val = Math.floor(n - new int(new int(1023)));
			if ((new bool(n.valueOf() > new int(1023).valueOf())).valueOf()) {
				/** @type {f64} */
				y.val = Math.floor(y * new f64(x1p1023));
				/** @type {int} */
				n.val = Math.floor(n - new int(new int(1023)));
				if ((new bool(n.valueOf() > new int(1023).valueOf())).valueOf()) {
					/** @type {int} */
					n = new int(new int(1023));
				}
			}
		} else if ((new bool(n.valueOf() < new int(-1022).valueOf())).valueOf()) {
			/** @type {f64} */
			y.val = Math.floor(y * new f64(new f64( x1p_1022.valueOf() * x1p53.valueOf())));
			/** @type {int} */
			n.val = Math.floor(n + new int(new int_literal( new int(1022).valueOf() - new int(53).valueOf())));
			if ((new bool(n.valueOf() < new int(-1022).valueOf())).valueOf()) {
				/** @type {f64} */
				y.val = Math.floor(y * new f64(new f64( x1p_1022.valueOf() * x1p53.valueOf())));
				/** @type {int} */
				n.val = Math.floor(n + new int(new int_literal( new int(1022).valueOf() - new int(53).valueOf())));
				if ((new bool(n.valueOf() < new int(-1022).valueOf())).valueOf()) {
					/** @type {int} */
					n = new int(new int(-1022));
				}
			}
		}
		return new f64( y.valueOf() * math__f64_from_bits(new u64( BigInt(new u64((new int( new int(0x3ff).valueOf() + n.valueOf()))).valueOf()) << BigInt(new int(52).valueOf()))).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/* [inline] */
/**
 * @function
 * @param {f64} a
 * @returns {f64}
*/
function math__cos(a) {
	try {
		return Math.cos(a);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {f64} a
 * @returns {f64}
*/
function math__sin(a) {
	try {
		return Math.sin(a);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/** @constant {Array_f64} */
let math__sin_data = undefined;
/** @constant {math__ChebSeries} */
let math__sin_cs = undefined;
/** @constant {Array_f64} */
let math__cos_data = undefined;
/** @constant {math__ChebSeries} */
let math__cos_cs = undefined;

/**
 * @function
 * @param {f64} x
 * @returns {f64}
*/
function math__pure_v_but_overriden_by_js_sin(x) {
	try {
		/** @type {f64} */
		const p1 = new f64(new f32(7.85398125648498535156e-1));
		/** @type {f64} */
		const p2 = new f64(new f32(3.77489470793079817668e-8));
		/** @type {f64} */
		const p3 = new f64(new f32(2.69515142907905952645e-15));
		/** @type {int} */
		const sgn_x = new int(((new bool(x.valueOf() < new int(0).valueOf())).valueOf() ? new int(-1) : new int(1)));
		/** @type {f64} */
		const abs_x = new f64(math__abs(x));
		if ((new bool(abs_x.valueOf() < math__internal__root4_f64_epsilon.valueOf())).valueOf()) {
			/** @type {f64} */
			const x2 = new f64(new f64( x.valueOf() * x.valueOf()));
			return new f64( x.valueOf() * (new f64( new f32(1.0).valueOf() - new f64( x2.valueOf() / new f32(6.0).valueOf()).valueOf())).valueOf());
		} else {
			/** @type {int} */
			let sgn_result = new int(sgn_x);
			/** @type {f64} */
			let y = new f64(math__floor(new f64( abs_x.valueOf() / (new float_literal( new f32(0.25).valueOf() * math__pi.valueOf())).valueOf())));
			/** @type {int} */
			let octant = new int(new int(new f64( y.valueOf() - math__ldexp(math__floor(math__ldexp(y, new int(-3))), new int(3)).valueOf())));
			if ((new bool((new int( octant.valueOf() & new int(1).valueOf())).valueOf() == new int(1).valueOf())).valueOf()) {
				octant.val ++;
				/** @type {int} */
				octant.val = Math.floor(octant & new int(new int(7)));
				/** @type {f64} */
				y.val = Math.floor(y + new f64(new f32(1.0)));
			}
			if ((new bool(octant.valueOf() > new int(3).valueOf())).valueOf()) {
				/** @type {int} */
				octant.val = Math.floor(octant - new int(new int(4)));
				/** @type {int} */
				sgn_result = new int(-sgn_result.val );
			}
			/** @type {f64} */
			const z = new f64(new f64( (new f64( (new f64( abs_x.valueOf() - new f64( y.valueOf() * p1.valueOf()).valueOf())).valueOf() - new f64( y.valueOf() * p2.valueOf()).valueOf())).valueOf() - new f64( y.valueOf() * p3.valueOf()).valueOf()));
			/** @type {f64} */
			let result = new f64(new f32(0.0));
			if ((new bool(octant.valueOf() == new int(0).valueOf())).valueOf()) {
				/** @type {f64} */
				const t = new f64(new f64( new f64( new f64( new f32(8.0).valueOf() * math__abs(z).valueOf()).valueOf() / math__pi.valueOf()).valueOf() - new f32(1.0).valueOf()));
				let [sin_cs_val, ] = math__ChebSeries_eval_e(math__sin_cs,t);
				/** @type {f64} */
				result = new f64(new f64( z.valueOf() * (new f64( new f32(1.0).valueOf() + new f64( new f64( z.valueOf() * z.valueOf()).valueOf() * sin_cs_val.valueOf()).valueOf())).valueOf()));
			} else {
				/** @type {f64} */
				const t = new f64(new f64( new f64( new f64( new f32(8.0).valueOf() * math__abs(z).valueOf()).valueOf() / math__pi.valueOf()).valueOf() - new f32(1.0).valueOf()));
				let [cos_cs_val, ] = math__ChebSeries_eval_e(math__cos_cs,t);
				/** @type {f64} */
				result = new f64(new f64( new f32(1.0).valueOf() - new f64( new f64( new f64( new f32(0.5).valueOf() * z.valueOf()).valueOf() * z.valueOf()).valueOf() * (new f64( new f32(1.0).valueOf() - new f64( new f64( z.valueOf() * z.valueOf()).valueOf() * cos_cs_val.valueOf()).valueOf())).valueOf()).valueOf()));
			}
			/** @type {f64} */
			result.val = Math.floor(result * new f64(sgn_result));
			return result;
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} x
 * @returns {f64}
*/
function math__pure_v_but_overriden_by_js_cos(x) {
	try {
		/** @type {f64} */
		const p1 = new f64(new f32(7.85398125648498535156e-1));
		/** @type {f64} */
		const p2 = new f64(new f32(3.77489470793079817668e-8));
		/** @type {f64} */
		const p3 = new f64(new f32(2.69515142907905952645e-15));
		/** @type {f64} */
		const abs_x = new f64(math__abs(x));
		if ((new bool(abs_x.valueOf() < math__internal__root4_f64_epsilon.valueOf())).valueOf()) {
			/** @type {f64} */
			const x2 = new f64(new f64( x.valueOf() * x.valueOf()));
			return new f64( new f32(1.0).valueOf() - new f64( new f32(0.5).valueOf() * x2.valueOf()).valueOf());
		} else {
			/** @type {int} */
			let sgn_result = new int(new int(1));
			/** @type {f64} */
			let y = new f64(math__floor(new f64( abs_x.valueOf() / (new float_literal( new f32(0.25).valueOf() * math__pi.valueOf())).valueOf())));
			/** @type {int} */
			let octant = new int(new int(new f64( y.valueOf() - math__ldexp(math__floor(math__ldexp(y, new int(-3))), new int(3)).valueOf())));
			if ((new bool((new int( octant.valueOf() & new int(1).valueOf())).valueOf() == new int(1).valueOf())).valueOf()) {
				octant.val ++;
				/** @type {int} */
				octant.val = Math.floor(octant & new int(new int(7)));
				/** @type {f64} */
				y.val = Math.floor(y + new f64(new f32(1.0)));
			}
			if ((new bool(octant.valueOf() > new int(3).valueOf())).valueOf()) {
				/** @type {int} */
				octant.val = Math.floor(octant - new int(new int(4)));
				/** @type {int} */
				sgn_result = new int(-sgn_result.val );
			}
			if ((new bool(octant.valueOf() > new int(1).valueOf())).valueOf()) {
				/** @type {int} */
				sgn_result = new int(-sgn_result.val );
			}
			/** @type {f64} */
			const z = new f64(new f64( (new f64( (new f64( abs_x.valueOf() - new f64( y.valueOf() * p1.valueOf()).valueOf())).valueOf() - new f64( y.valueOf() * p2.valueOf()).valueOf())).valueOf() - new f64( y.valueOf() * p3.valueOf()).valueOf()));
			/** @type {f64} */
			let result = new f64(new f32(0.0));
			if ((new bool(octant.valueOf() == new int(0).valueOf())).valueOf()) {
				/** @type {f64} */
				const t = new f64(new f64( new f64( new f64( new f32(8.0).valueOf() * math__abs(z).valueOf()).valueOf() / math__pi.valueOf()).valueOf() - new f32(1.0).valueOf()));
				let [cos_cs_val, ] = math__ChebSeries_eval_e(math__cos_cs,t);
				/** @type {f64} */
				result = new f64(new f64( new f32(1.0).valueOf() - new f64( new f64( new f64( new f32(0.5).valueOf() * z.valueOf()).valueOf() * z.valueOf()).valueOf() * (new f64( new f32(1.0).valueOf() - new f64( new f64( z.valueOf() * z.valueOf()).valueOf() * cos_cs_val.valueOf()).valueOf())).valueOf()).valueOf()));
			} else {
				/** @type {f64} */
				const t = new f64(new f64( new f64( new f64( new f32(8.0).valueOf() * math__abs(z).valueOf()).valueOf() / math__pi.valueOf()).valueOf() - new f32(1.0).valueOf()));
				let [sin_cs_val, ] = math__ChebSeries_eval_e(math__sin_cs,t);
				/** @type {f64} */
				result = new f64(new f64( z.valueOf() * (new f64( new f32(1.0).valueOf() + new f64( new f64( z.valueOf() * z.valueOf()).valueOf() * sin_cs_val.valueOf()).valueOf())).valueOf()));
			}
			/** @type {f64} */
			result.val = Math.floor(result * new f64(sgn_result));
			return result;
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {f32} a
 * @returns {f32}
*/
function math__cosf(a) {
	try {
		return new f32(math__cos(a));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {f32} a
 * @returns {f32}
*/
function math__sinf(a) {
	try {
		return new f32(math__sin(a));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} x
 * @returns {multi_return_f64_f64}
*/
function math__sincos(x) {
	try {
		/** @type {f64} */
		const p1 = new f64(new f32(7.85398125648498535156e-1));
		/** @type {f64} */
		const p2 = new f64(new f32(3.77489470793079817668e-8));
		/** @type {f64} */
		const p3 = new f64(new f32(2.69515142907905952645e-15));
		/** @type {int} */
		const sgn_x = new int(((new bool(x.valueOf() < new int(0).valueOf())).valueOf() ? new int(-1) : new int(1)));
		/** @type {f64} */
		const abs_x = new f64(math__abs(x));
		if ((new bool(abs_x.valueOf() < math__internal__root4_f64_epsilon.valueOf())).valueOf()) {
			/** @type {f64} */
			const x2 = new f64(new f64( x.valueOf() * x.valueOf()));
			return [new f64( x.valueOf() * (new f64( new f32(1.0).valueOf() - new f64( x2.valueOf() / new f32(6.0).valueOf()).valueOf())).valueOf()), new f64( new f32(1.0).valueOf() - new f64( new f32(0.5).valueOf() * x2.valueOf()).valueOf())];
		} else {
			/** @type {int} */
			let sgn_result_sin = new int(sgn_x);
			/** @type {int} */
			let sgn_result_cos = new int(new int(1));
			/** @type {f64} */
			let y = new f64(math__floor(new f64( abs_x.valueOf() / (new float_literal( new f32(0.25).valueOf() * math__pi.valueOf())).valueOf())));
			/** @type {int} */
			let octant = new int(new int(new f64( y.valueOf() - math__ldexp(math__floor(math__ldexp(y, new int(-3))), new int(3)).valueOf())));
			if ((new bool((new int( octant.valueOf() & new int(1).valueOf())).valueOf() == new int(1).valueOf())).valueOf()) {
				octant.val ++;
				/** @type {int} */
				octant.val = Math.floor(octant & new int(new int(7)));
				/** @type {f64} */
				y.val = Math.floor(y + new f64(new f32(1.0)));
			}
			if ((new bool(octant.valueOf() > new int(3).valueOf())).valueOf()) {
				/** @type {int} */
				octant.val = Math.floor(octant - new int(new int(4)));
				/** @type {int} */
				sgn_result_sin = new int(-sgn_result_sin.val );
				/** @type {int} */
				sgn_result_cos = new int(-sgn_result_cos.val );
			}
			/** @type {int} */
			sgn_result_cos = new int(((new bool(octant.valueOf() > new int(1).valueOf())).valueOf() ? -sgn_result_cos.val  : sgn_result_cos));
			/** @type {f64} */
			const z = new f64(new f64( (new f64( (new f64( abs_x.valueOf() - new f64( y.valueOf() * p1.valueOf()).valueOf())).valueOf() - new f64( y.valueOf() * p2.valueOf()).valueOf())).valueOf() - new f64( y.valueOf() * p3.valueOf()).valueOf()));
			/** @type {f64} */
			const t = new f64(new f64( new f64( new f64( new f32(8.0).valueOf() * math__abs(z).valueOf()).valueOf() / math__pi.valueOf()).valueOf() - new f32(1.0).valueOf()));
			let [sin_cs_val, ] = math__ChebSeries_eval_e(math__sin_cs,t);
			let [cos_cs_val, ] = math__ChebSeries_eval_e(math__cos_cs,t);
			/** @type {f64} */
			let result_sin = new f64(new f32(0.0));
			/** @type {f64} */
			let result_cos = new f64(new f32(0.0));
			if ((new bool(octant.valueOf() == new int(0).valueOf())).valueOf()) {
				/** @type {f64} */
				result_sin = new f64(new f64( z.valueOf() * (new f64( new f32(1.0).valueOf() + new f64( new f64( z.valueOf() * z.valueOf()).valueOf() * sin_cs_val.valueOf()).valueOf())).valueOf()));
				/** @type {f64} */
				result_cos = new f64(new f64( new f32(1.0).valueOf() - new f64( new f64( new f64( new f32(0.5).valueOf() * z.valueOf()).valueOf() * z.valueOf()).valueOf() * (new f64( new f32(1.0).valueOf() - new f64( new f64( z.valueOf() * z.valueOf()).valueOf() * cos_cs_val.valueOf()).valueOf())).valueOf()).valueOf()));
			} else {
				/** @type {f64} */
				result_sin = new f64(new f64( new f32(1.0).valueOf() - new f64( new f64( new f64( new f32(0.5).valueOf() * z.valueOf()).valueOf() * z.valueOf()).valueOf() * (new f64( new f32(1.0).valueOf() - new f64( new f64( z.valueOf() * z.valueOf()).valueOf() * cos_cs_val.valueOf()).valueOf())).valueOf()).valueOf()));
				/** @type {f64} */
				result_cos = new f64(new f64( z.valueOf() * (new f64( new f32(1.0).valueOf() + new f64( new f64( z.valueOf() * z.valueOf()).valueOf() * sin_cs_val.valueOf()).valueOf())).valueOf()));
			}
			/** @type {f64} */
			result_sin.val = Math.floor(result_sin * new f64(sgn_result_sin));
			/** @type {f64} */
			result_cos.val = Math.floor(result_cos * new f64(sgn_result_cos));
			return [result_sin, result_cos];
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/* [inline] */
/**
 * @function
 * @param {f64} a
 * @returns {f64}
*/
function math__cosh(a) {
	try {
		return Math.cosh(a);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {f64} a
 * @returns {f64}
*/
function math__sinh(a) {
	try {
		return Math.sinh(a);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/**
 * @function
 * @param {f64} x_
 * @returns {f64}
*/
function math__pure_v_but_overriden_by_js_sinh(x_) {
	try {
		/** @type {f64} */
		let x = new f64(x_);
		/** @type {f64} */
		const p0 = new f64(new f32(-0.6307673640497716991184787251e+6));
		/** @type {f64} */
		const p1 = new f64(new f32(-0.8991272022039509355398013511e+5));
		/** @type {f64} */
		const p2 = new f64(new f32(-0.2894211355989563807284660366e+4));
		/** @type {f64} */
		const p3 = new f64(new f32(-0.2630563213397497062819489e+2));
		/** @type {f64} */
		const q0 = new f64(new f32(-0.6307673640497716991212077277e+6));
		/** @type {f64} */
		const q1 = new f64(new f32(0.1521517378790019070696485176e+5));
		/** @type {f64} */
		const q2 = new f64(new f32(-0.173678953558233699533450911e+3));
		/** @type {bool} */
		let sign = new bool(new bool(false));
		if ((new bool(x.valueOf() < new int(0).valueOf())).valueOf()) {
			/** @type {f64} */
			x = new f64(-x.val );
			/** @type {bool} */
			sign = new bool(new bool(true));
		}
		/** @type {f64} */
		let temp = new f64(new f32(0.0));
		if ((new bool(x.valueOf() > new int(21).valueOf())).valueOf()) {
			/** @type {f64} */
			temp = new f64(new f64( math__exp(x).valueOf() * new f32(0.5).valueOf()));
		} else if ((new bool(x.valueOf() > new f32(0.5).valueOf())).valueOf()) {
			/** @type {f64} */
			const ex = new f64(math__exp(x));
			/** @type {f64} */
			temp = new f64(new f64( (new f64( ex.valueOf() - new f64( new f32(1.0).valueOf() / ex.valueOf()).valueOf())).valueOf() * new f32(0.5).valueOf()));
		} else {
			/** @type {f64} */
			const sq = new f64(new f64( x.valueOf() * x.valueOf()));
			/** @type {f64} */
			temp = new f64(new f64( (new f64( new f64( (new f64( new f64( (new f64( new f64( p3.valueOf() * sq.valueOf()).valueOf() + p2.valueOf())).valueOf() * sq.valueOf()).valueOf() + p1.valueOf())).valueOf() * sq.valueOf()).valueOf() + p0.valueOf())).valueOf() * x.valueOf()));
			/** @type {f64} */
			temp = new f64(new f64( temp.valueOf() / (new f64( new f64( (new f64( new f64( (new f64( sq.valueOf() + q2.valueOf())).valueOf() * sq.valueOf()).valueOf() + q1.valueOf())).valueOf() * sq.valueOf()).valueOf() + q0.valueOf())).valueOf()));
		}
		if ((sign).valueOf()) {
			/** @type {f64} */
			temp = new f64(-temp.val );
		}
		return temp;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} x
 * @returns {f64}
*/
function math__pure_v_but_overriden_by_js_cosh(x) {
	try {
		/** @type {f64} */
		const abs_x = new f64(math__abs(x));
		if ((new bool(abs_x.valueOf() > new int(21).valueOf())).valueOf()) {
			return new f64( math__exp(abs_x).valueOf() * new f32(0.5).valueOf());
		}
		/** @type {f64} */
		const ex = new f64(math__exp(abs_x));
		return new f64( (new f64( ex.valueOf() + new f64( new f32(1.0).valueOf() / ex.valueOf()).valueOf())).valueOf() * new f32(0.5).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/* [inline] */
/**
 * @function
 * @param {f64} a
 * @returns {f64}
*/
function math__sqrt(a) {
	try {
		/** @type {f64} */
		let x = new f64(a);
		if ((new bool( new bool( new bool(x.valueOf() == new f32(0.0).valueOf()).valueOf() || math__is_nan(x).valueOf()).valueOf() || math__is_inf(x, new int(1)).valueOf())).valueOf()) {
			return x;
		}
		if ((new bool(x.valueOf() < new f32(0.0).valueOf())).valueOf()) {
			return math__nan();
		}
		let [z, ex] = math__frexp(x);
		/** @type {f64} */
		const w = new f64(x);
		/** @type {f64} */
		x = new f64(new f64( new f32(4.173075996388649989089e-1).valueOf() + new f64( new f32(5.9016206709064458299663e-1).valueOf() * z.valueOf()).valueOf()));
		if ((new bool((new int( ex.valueOf() & new int(1).valueOf())).valueOf() != new int(0).valueOf())).valueOf()) {
			/** @type {f64} */
			x.val = Math.floor(x * new f64(math__sqrt2));
		}
		/** @type {f64} */
		x = new f64(math__ldexp(x, new int( ex.valueOf() >> new int(1).valueOf())));
		/** @type {f64} */
		x = new f64(new f64( new f32(0.5).valueOf() * (new f64( x.valueOf() + new f64( w.valueOf() / x.valueOf()).valueOf())).valueOf()));
		/** @type {f64} */
		x = new f64(new f64( new f32(0.5).valueOf() * (new f64( x.valueOf() + new f64( w.valueOf() / x.valueOf()).valueOf())).valueOf()));
		/** @type {f64} */
		x = new f64(new f64( new f32(0.5).valueOf() * (new f64( x.valueOf() + new f64( w.valueOf() / x.valueOf()).valueOf())).valueOf()));
		return x;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {f32} a
 * @returns {f32}
*/
function math__sqrtf(a) {
	try {
		return new f32(math__sqrt(a));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {i64} a
 * @returns {i64}
*/
function math__sqrti(a) {
	try {
		/** @type {i64} */
		let x = new i64(a);
		/** @type {i64} */
		let q = new i64(new i64(BigInt(1n)));
		/** @type {i64} */
		let r = new i64(new i64(BigInt(0n)));
		for (; +new bool(q.valueOf() <= x.valueOf()); ) {
			try { 
				q.val = q << new i64(new int(2)); } catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		for (; +new bool(q.valueOf() > new int(1).valueOf()); ) {
			try { 
				q.val = q >> new i64(new int(2)); let t = new i64(new i64( BigInt(new i64( BigInt(x.valueOf()) - BigInt(r.valueOf())).valueOf()) - BigInt(q.valueOf()))); r.val = r >> new i64(new int(1)); if ((new bool(t.valueOf() >= new int(0).valueOf())).valueOf()) {
					x = new i64(t); r.val = r + new i64(q); }
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return r;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/* [inline] */
/**
 * @function
 * @param {f64} a
 * @returns {f64}
*/
function math__tan(a) {
	try {
		return Math.tan(a);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/** @constant {Array_f64} */
let math__tan_p = undefined;
/** @constant {Array_f64} */
let math__tan_q = undefined;
/** @constant {f64} */
const math__tan_dp1 = new f32(7.853981554508209228515625e-1);
/** @constant {f64} */
const math__tan_dp2 = new f32(7.94662735614792836714e-9);
/** @constant {f64} */
const math__tan_dp3 = new f32(3.06161699786838294307e-17);
/** @constant {f64} */
const math__tan_lossth = new f32(1.073741824e+9);

/**
 * @function
 * @param {f64} a
 * @returns {f64}
*/
function math__pure_v_but_overriden_by_js_tan(a) {
	try {
		/** @type {f64} */
		let x = new f64(a);
		if ((new bool( new bool(x.valueOf() == new f32(0.0).valueOf()).valueOf() || math__is_nan(x).valueOf())).valueOf()) {
			return x;
		}
		if ((math__is_inf(x, new int(0))).valueOf()) {
			return math__nan();
		}
		/** @type {int} */
		let sign = new int(new int(1));
		if ((new bool(x.valueOf() < new int(0).valueOf())).valueOf()) {
			/** @type {f64} */
			x = new f64(-x.val );
			/** @type {int} */
			sign = new int(new int(-1));
		}
		if ((new bool(x.valueOf() > math__tan_lossth.valueOf())).valueOf()) {
			return new f32(0.0);
		}
		/** @type {f64} */
		let y = new f64(math__floor(new f64( new f64( x.valueOf() * new f32(4.0).valueOf()).valueOf() / math__pi.valueOf())));
		/** @type {f64} */
		let z = new f64(math__ldexp(y, new int(-3)));
		/** @type {f64} */
		z = new f64(math__floor(z));
		/** @type {f64} */
		z = new f64(new f64( y.valueOf() - math__ldexp(z, new int(3)).valueOf()));
		/** @type {int} */
		let octant = new int(new int(z));
		if ((new bool((new int( octant.valueOf() & new int(1).valueOf())).valueOf() == new int(1).valueOf())).valueOf()) {
			octant.val ++;
			/** @type {f64} */
			y.val = Math.floor(y + new f64(new f32(1.0)));
		}
		/** @type {f64} */
		z = new f64(new f64( (new f64( (new f64( x.valueOf() - new f64( y.valueOf() * math__tan_dp1.valueOf()).valueOf())).valueOf() - new f64( y.valueOf() * math__tan_dp2.valueOf()).valueOf())).valueOf() - new f64( y.valueOf() * math__tan_dp3.valueOf()).valueOf()));
		/** @type {f64} */
		const zz = new f64(new f64( z.valueOf() * z.valueOf()));
		if ((new bool(zz.valueOf() > new f32(1.0e-14).valueOf())).valueOf()) {
			/** @type {f64} */
			y = new f64(new f64( z.valueOf() + new f64( z.valueOf() * (new f64( new f64( zz.valueOf() * (new f64( new f64( (new f64( (new f64( math__tan_p.arr.get(new int(new int(0).valueOf())).valueOf() * zz.valueOf())).valueOf() + math__tan_p.arr.get(new int(new int(1).valueOf())).valueOf())).valueOf() * zz.valueOf()).valueOf() + math__tan_p.arr.get(new int(new int(2).valueOf())).valueOf())).valueOf()).valueOf() / (new f64( new f64( (new f64( new f64( (new f64( new f64( (new f64( zz.valueOf() + math__tan_q.arr.get(new int(new int(1).valueOf())).valueOf())).valueOf() * zz.valueOf()).valueOf() + math__tan_q.arr.get(new int(new int(2).valueOf())).valueOf())).valueOf() * zz.valueOf()).valueOf() + math__tan_q.arr.get(new int(new int(3).valueOf())).valueOf())).valueOf() * zz.valueOf()).valueOf() + math__tan_q.arr.get(new int(new int(4).valueOf())).valueOf())).valueOf())).valueOf()).valueOf()));
		} else {
			/** @type {f64} */
			y = new f64(z);
		}
		if ((new bool((new int( octant.valueOf() & new int(2).valueOf())).valueOf() == new int(2).valueOf())).valueOf()) {
			/** @type {f64} */
			y = new f64(new f64( new f32(-1.0).valueOf() / y.valueOf()));
		}
		if ((new bool(sign.valueOf() < new int(0).valueOf())).valueOf()) {
			/** @type {f64} */
			y = new f64(-y.val );
		}
		return y;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {f32} a
 * @returns {f32}
*/
function math__tanf(a) {
	try {
		return new f32(math__tan(a));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} a
 * @returns {f64}
*/
function math__cot(a) {
	try {
		/** @type {f64} */
		let x = new f64(a);
		if ((new bool(x.valueOf() == new f32(0.0).valueOf())).valueOf()) {
			return math__inf(new int(1));
		}
		/** @type {int} */
		let sign = new int(new int(1));
		if ((new bool(x.valueOf() < new int(0).valueOf())).valueOf()) {
			/** @type {f64} */
			x = new f64(-x.val );
			/** @type {int} */
			sign = new int(new int(-1));
		}
		if ((new bool(x.valueOf() > math__tan_lossth.valueOf())).valueOf()) {
			return new f32(0.0);
		}
		/** @type {f64} */
		let y = new f64(math__floor(new f64( new f64( x.valueOf() * new f32(4.0).valueOf()).valueOf() / math__pi.valueOf())));
		/** @type {f64} */
		let z = new f64(math__ldexp(y, new int(-3)));
		/** @type {f64} */
		z = new f64(math__floor(z));
		/** @type {f64} */
		z = new f64(new f64( y.valueOf() - math__ldexp(z, new int(3)).valueOf()));
		/** @type {int} */
		let octant = new int(new int(z));
		if ((new bool((new int( octant.valueOf() & new int(1).valueOf())).valueOf() == new int(1).valueOf())).valueOf()) {
			octant.val ++;
			/** @type {f64} */
			y.val = Math.floor(y + new f64(new f32(1.0)));
		}
		/** @type {f64} */
		z = new f64(new f64( (new f64( (new f64( x.valueOf() - new f64( y.valueOf() * math__tan_dp1.valueOf()).valueOf())).valueOf() - new f64( y.valueOf() * math__tan_dp2.valueOf()).valueOf())).valueOf() - new f64( y.valueOf() * math__tan_dp3.valueOf()).valueOf()));
		/** @type {f64} */
		const zz = new f64(new f64( z.valueOf() * z.valueOf()));
		if ((new bool(zz.valueOf() > new f32(1.0e-14).valueOf())).valueOf()) {
			/** @type {f64} */
			y = new f64(new f64( z.valueOf() + new f64( z.valueOf() * (new f64( new f64( zz.valueOf() * (new f64( new f64( (new f64( (new f64( math__tan_p.arr.get(new int(new int(0).valueOf())).valueOf() * zz.valueOf())).valueOf() + math__tan_p.arr.get(new int(new int(1).valueOf())).valueOf())).valueOf() * zz.valueOf()).valueOf() + math__tan_p.arr.get(new int(new int(2).valueOf())).valueOf())).valueOf()).valueOf() / (new f64( new f64( (new f64( new f64( (new f64( new f64( (new f64( zz.valueOf() + math__tan_q.arr.get(new int(new int(1).valueOf())).valueOf())).valueOf() * zz.valueOf()).valueOf() + math__tan_q.arr.get(new int(new int(2).valueOf())).valueOf())).valueOf() * zz.valueOf()).valueOf() + math__tan_q.arr.get(new int(new int(3).valueOf())).valueOf())).valueOf() * zz.valueOf()).valueOf() + math__tan_q.arr.get(new int(new int(4).valueOf())).valueOf())).valueOf())).valueOf()).valueOf()));
		} else {
			/** @type {f64} */
			y = new f64(z);
		}
		if ((new bool((new int( octant.valueOf() & new int(2).valueOf())).valueOf() == new int(2).valueOf())).valueOf()) {
			/** @type {f64} */
			y = new f64(-y.val );
		} else {
			/** @type {f64} */
			y = new f64(new f64( new f32(1.0).valueOf() / y.valueOf()));
		}
		if ((new bool(sign.valueOf() < new int(0).valueOf())).valueOf()) {
			/** @type {f64} */
			y = new f64(-y.val );
		}
		return y;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/* [inline] */
/**
 * @function
 * @param {f64} a
 * @returns {f64}
*/
function math__tanh(a) {
	try {
		return Math.tanh(a);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/** @constant {Array_f64} */
let math__tanh_p = undefined;
/** @constant {Array_f64} */
let math__tanh_q = undefined;

/**
 * @function
 * @param {f64} x
 * @returns {f64}
*/
function math__pure_v_but_overriden_by_js_tanh(x) {
	try {
		/** @type {f64} */
		const maxlog = new f64(new f32(8.8029691931113054295988e+01));
		/** @type {f64} */
		let z = new f64(math__abs(x));
		if ((new bool(z.valueOf() > new f64( new f32(0.5).valueOf() * maxlog.valueOf()).valueOf())).valueOf()) {
			if ((new bool(x.valueOf() < new int(0).valueOf())).valueOf()) {
				return new f64(new int(-1));
			}
			return new f32(1.0);
		} else if ((new bool(z.valueOf() >= new f32(0.625).valueOf())).valueOf()) {
			/** @type {f64} */
			const s = new f64(math__exp(new f64( new f32(2.0).valueOf() * z.valueOf())));
			/** @type {f64} */
			z = new f64(new f64( new f32(1.0).valueOf() - new f64( new f32(2.0).valueOf() / (new f64( s.valueOf() + new f32(1.0).valueOf())).valueOf()).valueOf()));
			if ((new bool(x.valueOf() < new int(0).valueOf())).valueOf()) {
				/** @type {f64} */
				z = new f64(-z.val );
			}
		} else {
			if ((new bool(x.valueOf() == new int(0).valueOf())).valueOf()) {
				return x;
			}
			/** @type {f64} */
			const s = new f64(new f64( x.valueOf() * x.valueOf()));
			/** @type {f64} */
			z = new f64(new f64( x.valueOf() + new f64( new f64( new f64( x.valueOf() * s.valueOf()).valueOf() * (new f64( new f64( (new f64( new f64( math__tanh_p.arr.get(new int(new int(0).valueOf())).valueOf() * s.valueOf()).valueOf() + math__tanh_p.arr.get(new int(new int(1).valueOf())).valueOf())).valueOf() * s.valueOf()).valueOf() + math__tanh_p.arr.get(new int(new int(2).valueOf())).valueOf())).valueOf()).valueOf() / (new f64( new f64( (new f64( new f64( (new f64( s.valueOf() + math__tanh_q.arr.get(new int(new int(0).valueOf())).valueOf())).valueOf() * s.valueOf()).valueOf() + math__tanh_q.arr.get(new int(new int(1).valueOf())).valueOf())).valueOf() * s.valueOf()).valueOf() + math__tanh_q.arr.get(new int(new int(2).valueOf())).valueOf())).valueOf()).valueOf()));
		}
		return z;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/**
 * @function
 * @param {f32} f
 * @returns {u32}
*/
function math__f32_bits(f) {
	try {
		/** @type {u32} */
		const p = new u32(new int(0));
		let buffer = new ArrayBuffer(4)
		let floatArr = new Float32Array(buffer)
		floatArr[0] = f.val
		let uintArr = new Uint32Array(buffer)
		p.val = uintArr[0]
		return p;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {u32} b
 * @returns {f32}
*/
function math__f32_from_bits(b) {
	try {
		/** @type {f32} */
		const p = new f32(new f32(0.0));
		let buffer = new ArrayBuffer(4)
		let floatArr = new Float32Array(buffer)
		let uintArr = new Uint32Array(buffer)
		uintArr[0] = Number(b.val)
		p.val = floatArr[0]
		return p;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} f
 * @returns {u64}
*/
function math__f64_bits(f) {
	try {
		/** @type {u64} */
		const p = new u64(new u64(BigInt(0n)));
		let buffer = new ArrayBuffer(8)
		let floatArr = new Float64Array(buffer)
		floatArr[0] = f.val
		let uintArr = new BigUint64Array(buffer)
		p.val = uintArr[0]
		return p;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {u64} b
 * @returns {f64}
*/
function math__f64_from_bits(b) {
	try {
		/** @type {f64} */
		const p = new f64(new f32(0.0));
		let buffer = new ArrayBuffer(8)
		let floatArr = new Float64Array(buffer)
		let uintArr = new BigUint64Array(buffer)
		uintArr[0] = b.val
		p.val = floatArr[0]
		return p;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace math */
/**
 * @function
 * @param {f32} f
 * @returns {u32}
*/
function math__pure_v_but_overriden_by_js_f32_bits(f) {
	try {
		/** @type {u32} */
		const p = new u32((new $ref(new u32(new $ref(f)))).valueOf());
		return p;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {u32} b
 * @returns {f32}
*/
function math__pure_v_but_overriden_by_js_f32_from_bits(b) {
	try {
		/** @type {f32} */
		const p = new f32((new $ref(new f32(new $ref(b)))).valueOf());
		return p;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} f
 * @returns {u64}
*/
function math__pure_v_but_overriden_by_js_f64_bits(f) {
	try {
		/** @type {u64} */
		const p = new u64((new $ref(new u64(new $ref(f)))).valueOf());
		return p;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {u64} b
 * @returns {f64}
*/
function math__pure_v_but_overriden_by_js_f64_from_bits(b) {
	try {
		/** @type {f64} */
		const p = new f64((new $ref(new f64(new $ref(b)))).valueOf());
		return p;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} f
 * @param {u32} lo
 * @returns {f64}
*/
function math__with_set_low_word(f, lo) {
	try {
		/** @type {u64} */
		let tmp = new u64(math__f64_bits(f));
		/** @type {u64} */
		tmp.val = tmp & new u64(new int(0xffffffff00000000));
		/** @type {u64} */
		tmp.val = tmp | new u64(new u64(lo));
		return math__f64_from_bits(tmp);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} f
 * @param {u32} hi
 * @returns {f64}
*/
function math__with_set_high_word(f, hi) {
	try {
		/** @type {u64} */
		let tmp = new u64(math__f64_bits(f));
		/** @type {u64} */
		tmp.val = tmp & new u64(new int(0x00000000ffffffff));
		/** @type {u64} */
		tmp.val = tmp | new u64(new u64( BigInt(new u64(hi).valueOf()) << BigInt(new int(32).valueOf())));
		return math__f64_from_bits(tmp);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {f64} f
 * @returns {u32}
*/
function math__get_high_word(f) {
	try {
		return new u32(new u64( BigInt(math__f64_bits(f).valueOf()) >> BigInt(new int(32).valueOf())));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace os.font */
/** @enum {number} */
const os__font__Variant = {
	normal: 0,
	bold: 1,
	mono: 2,
	italic: 3,
};

/**
 * @function
 * @returns {string}
*/
function os__font__default() {
	try {
		/** @type {string} */
		const env_font = new string(os__getenv(new string("VUI_FONT")));
		if ((new bool( new bool(env_font.valueOf() != new string("").valueOf()).valueOf() && os__exists(env_font).valueOf())).valueOf()) {
			return env_font;
		}
		if (($process.platform == "windows"))
		{
		;
		return new string("C:\\Windows\\Fonts\\arial.ttf");
		}
		if (($process.platform == "darwin"))
		{
		/** @type {Array_string} */
		const fonts = new array(new array_buffer({arr: [new string(new string("/System/Library/Fonts/SFNS.ttf")), new string(new string("/System/Library/Fonts/SFNSText.ttf")), new string(new string("/Library/Fonts/Arial.ttf"))], len: new int(3), cap: new int(3)}));
		for (const font of fonts) {
			try { 
				if ((os__is_file(font)).valueOf()) {
					;
					return font;
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		}
		if (($process.platform == "android"))
		{
		/** @type {Array_string} */
		const xml_files = new array(new array_buffer({arr: [new string(new string("/system/etc/system_fonts.xml")), new string(new string("/system/etc/fonts.xml")), new string(new string("/etc/system_fonts.xml")), new string(new string("/etc/fonts.xml")), new string(new string("/data/fonts/fonts.xml")), new string(new string("/etc/fallback_fonts.xml"))], len: new int(6), cap: new int(6)}));
		/** @type {Array_string} */
		const font_locations = new array(new array_buffer({arr: [new string(new string("/system/fonts")), new string(new string("/data/fonts"))], len: new int(2), cap: new int(2)}));
		for (const xml_file of xml_files) {
			try { 
				if ((new bool( os__is_file(xml_file).valueOf() && os__is_readable(xml_file).valueOf())).valueOf()) {
					/** @type {string} */
					const xml = new string((function(){
						try {
							return unwrap(os__read_file(xml_file))
						} catch(err) {
							throw new ContinueException();
						}
					})());
					/** @type {Array_string} */
					const lines = string_split(xml,new string("\n"));
					/** @type {string} */
					let candidate_font = new string(new string(""));
					for (const line of lines) {
						try { 
							if ((string_contains(line,new string("<font"))).valueOf()) {
								/** @type {string} */
								candidate_font = new string(string_trim(string_all_before(string_all_after(line,new string(">")),new string("<")),new string(" \n\t\r")));
								if ((string_contains(candidate_font,new string(".ttf"))).valueOf()) {
									for (const location of font_locations) {
										try { 
											/** @type {string} */
											const candidate_path = new string(os__join_path(location, candidate_font));
											if ((new bool( os__is_file(candidate_path).valueOf() && os__is_readable(candidate_path).valueOf())).valueOf()) {
												;
												return candidate_path;
											}
										} catch (e) {
										 if (e instanceof BreakException) { break; }
										 else if (e instanceof ContinueException) { continue; }
										 else { throw e; } }
									}
									
								}
							}
						} catch (e) {
						 if (e instanceof BreakException) { break; }
						 else if (e instanceof ContinueException) { continue; }
						 else { throw e; } }
					}
					
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		}
		/** @type {os__Result} */
		let fm = os__execute(new string("fc-match --format='%{file}\n' -s"));
		if ((new bool(fm.exit_code.valueOf() == new int(0).valueOf())).valueOf()) {
			/** @type {Array_string} */
			const lines = string_split(fm.output,new string("\n"));
			for (const l of lines) {
				try { 
					if ((!string_contains(l,new string(".ttc")).val ).valueOf()) {
						;
						return l;
					}
				} catch (e) {
				 if (e instanceof BreakException) { break; }
				 else if (e instanceof ContinueException) { continue; }
				 else { throw e; } }
			}
			
		} else {
			builtin__panic (new string("fc-match failed to fetch system font"));
		}
		builtin__panic (new string("failed to init the font"));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} font_path
 * @param {os__font__Variant} variant
 * @returns {string}
*/
function os__font__get_path_variant(font_path, variant) {
	try {
		/** @type {string} */
		let file = new string(os__file_name(font_path));
		/** @type {string} */
		let fpath = new string(string_replace(font_path,file, new string("")));
		/** @type {string} */
		file = new string(string_replace(file,new string(".ttf"), new string("")));
		
		if (vEq(variant,os__font__Variant.normal)) {
		}
		else if (vEq(variant,os__font__Variant.bold)) {
			if ((string_ends_with(fpath,new string("-Regular"))).valueOf()) {
				/** @type {string} */
				file = new string(string_replace(file,new string("-Regular"), new string("-Bold")));
			} else if ((string_starts_with(file,new string("DejaVuSans"))).valueOf()) {
				/** @type {string} */
				file.str = file + new string(new string("-Bold"));
			} else if ((string_starts_with(string_to_lower(file,),new string("arial"))).valueOf()) {
				/** @type {string} */
				file.str = file + new string(new string("bd"));
			} else {
				/** @type {string} */
				file.str = file + new string(new string("-bold"));
			}
			if (($process.platform == "darwin"))
			{
			if ((os__exists(new string("SFNS-bold"))).valueOf()) {
				/** @type {string} */
				file = new string(new string("SFNS-bold"));
			}
			}
		}
		else if (vEq(variant,os__font__Variant.italic)) {
			if ((string_ends_with(file,new string("-Regular"))).valueOf()) {
				/** @type {string} */
				file = new string(string_replace(file,new string("-Regular"), new string("-Italic")));
			} else if ((string_starts_with(file,new string("DejaVuSans"))).valueOf()) {
				/** @type {string} */
				file.str = file + new string(new string("-Oblique"));
			} else if ((string_starts_with(string_to_lower(file,),new string("arial"))).valueOf()) {
				/** @type {string} */
				file.str = file + new string(new string("i"));
			} else {
				/** @type {string} */
				file.str = file + new string(new string("Italic"));
			}
		}
		else if (vEq(variant,os__font__Variant.mono)) {
			if ((new bool( !string_ends_with(file,new string("Mono-Regular")).val .valueOf() && string_ends_with(file,new string("-Regular")).valueOf())).valueOf()) {
				/** @type {string} */
				file = new string(string_replace(file,new string("-Regular"), new string("Mono-Regular")));
			} else if ((string_starts_with(string_to_lower(file,),new string("arial"))).valueOf()) {
			} else {
				/** @type {string} */
				file.str = file + new string(new string("Mono"));
			}
		};
		return new string( new string( fpath.valueOf() + file.valueOf()).valueOf() + new string(".ttf").valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace iui */
/**
 * @constructor
 * @param {{win?: iui__Window, vbox?: iui__VBox}} init
*/
function iui__Box({ win = new iui__Window({}), vbox = new iui__VBox({}) }) {
	this.win = win
	this.vbox = vbox
};
iui__Box.prototype = {
	...iui__Component_A.prototype,
	toString() {
		return `iui__Box { win: ${this["win"].toString()} , vbox: ${this["vbox"].toString()} }`
	},
	/** @type {iui__Window} */
	win: new iui__Window({}),
	/** @type {iui__VBox} */
	vbox: new iui__VBox({}),
	$toJS() { return this; }
	};

/**
 * @function
 * @param {iui__Window} win
 * @returns {iui__Box}
*/
function iui__box(win) {
win = new $ref(win)
	try {
		return new $ref((function() {
			let _tmp95 = new iui__Box({});
			_tmp95.win = win;
			_tmp95.vbox = iui__vbox(win);
			return _tmp95;
		})()
		);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Component} com
 * @returns {void}
*/
function iui__Box_add_child(_v_this, com) {
_v_this = new $ref(_v_this)
	try {
		if ((new bool(_v_this.val.vbox.val.children.len.valueOf() == new int(0).valueOf())).valueOf()) {
			iui__Box_add_break(_v_this.valueOf(),new int(1));
		}
		/** @type {Array_iui__Component} */
		let kids = _v_this.val.vbox.val.children;
		/** @type {iui__Component} */
		let cbox = kids.arr.get(new int(new int( kids.len.valueOf() - new int(1).valueOf()).valueOf()));
		if ((cbox instanceof iui__HBox).valueOf()) {
			iui__Component_A_add_child(cbox.valueOf(),com);
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__Box_center_current_hbox(_v_this) {
_v_this = new $ref(_v_this)
	try {
		/** @type {Array_iui__Component} */
		let kids = _v_this.val.vbox.val.children;
		/** @type {iui__Component} */
		let cbox = kids.arr.get(new int(new int( kids.len.valueOf() - new int(1).valueOf()).valueOf()));
		if ((cbox instanceof iui__HBox).valueOf()) {
			/** @type {bool} */
			cbox.val.center_screen = new bool(new bool(true));
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} val
 * @returns {void}
*/
function iui__Box_set_current_height(_v_this, val) {
_v_this = new $ref(_v_this)
	try {
		/** @type {Array_iui__Component} */
		let kids = _v_this.val.vbox.val.children;
		/** @type {iui__Component} */
		let cbox = kids.arr.get(new int(new int( kids.len.valueOf() - new int(1).valueOf()).valueOf()));
		if ((cbox instanceof iui__HBox).valueOf()) {
			/** @type {int} */
			cbox.val.height = new int(val);
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} min_height
 * @returns {void}
*/
function iui__Box_add_break(_v_this, min_height) {
_v_this = new $ref(_v_this)
	try {
		if ((new bool(_v_this.val.vbox.val.children.len.valueOf() > new int(0).valueOf())).valueOf()) {
			/** @type {Array_iui__Component} */
			let kids = _v_this.val.vbox.val.children;
			/** @type {iui__Component} */
			let cbox = kids.arr.get(new int(new int( kids.len.valueOf() - new int(1).valueOf()).valueOf()));
			if ((cbox instanceof iui__HBox).valueOf()) {
				if ((new bool(cbox.val.children.len.valueOf() <= new int(0).valueOf())).valueOf()) {
				}
			}
		}
		/** @type {iui__HBox} */
		let h_box = iui__hbox(_v_this.val.win);
		iui__Component_A_set_bounds(h_box.valueOf(),_v_this.val.x, _v_this.val.y, _v_this.val.width, _v_this.val.height);
		iui__HBox_set_min_height(h_box.valueOf(),min_height);
		iui__HBox_pack(h_box.valueOf(),);
		iui__Component_A_add_child(_v_this.val.vbox.valueOf(),h_box);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {iui__VBox}
*/
function iui__Box_get_vbox(_v_this) {
_v_this = new $ref(_v_this)
	try {
		return _v_this.val.vbox;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__Box_draw(_v_this) {
_v_this = new $ref(_v_this)
	try {
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace iui */
/**
 * @constructor
 * @param {{app?: iui__Window, click_event_fn?: anon_fn_iui__window_iui__button, new_click_event_fn?: anon_fn_voidptr_voidptr_voidptr, need_pack?: bool, extra?: string, user_data?: voidptr, override_bg?: bool, override_bg_color?: gx__Color}} init
*/
function iui__Button({ app = new iui__Window({}), click_event_fn = undefined, new_click_event_fn = undefined, need_pack = new bool(false), extra = new string(""), user_data = new voidptr(null), override_bg = new bool(false), override_bg_color = new gx__Color({}) }) {
	this.app = app
	this.click_event_fn = click_event_fn
	this.new_click_event_fn = new_click_event_fn
	this.need_pack = need_pack
	this.extra = extra
	this.user_data = user_data
	this.override_bg = override_bg
	this.override_bg_color = override_bg_color
};
iui__Button.prototype = {
	...iui__Component_A.prototype,
	toString() {
		return `iui__Button { app: ${this["app"].toString()} , click_event_fn: ${this["click_event_fn"].toString()} , new_click_event_fn: ${this["new_click_event_fn"].toString()} , need_pack: ${this["need_pack"].toString()} , extra: "${this["extra"].toString()}", user_data: ${this["user_data"].toString()} , override_bg: ${this["override_bg"].toString()} , override_bg_color: ${this["override_bg_color"].toString()} }`
	},
	/** @type {iui__Window} */
	app: new iui__Window({}),
	/** @type {anon_fn_iui__window_iui__button} */
	click_event_fn: undefined,
	/** @type {anon_fn_voidptr_voidptr_voidptr} */
	new_click_event_fn: undefined,
	/** @type {bool} */
	need_pack: new bool(false),
	/** @type {string} */
	extra: new string(""),
	/** @type {voidptr} */
	user_data: new voidptr(null),
	/** @type {bool} */
	override_bg: new bool(false),
	/** @type {gx__Color} */
	override_bg_color: new gx__Color({}),
	$toJS() { return this; }
	};

/**
 * @function
 * @param {iui__Window} app
 * @param {string} text
 * @returns {iui__Button}
*/
function iui__button(app, text) {
app = new $ref(app)
	try {
		return (function() {
			let _tmp96 = new iui__Button({});
			_tmp96.text = text;
			_tmp96.app = app;
			_tmp96.click_event_fn = (function () { 
			return function (win, a) {
				win = new $ref(win)
			}})()
			;
			_tmp96.new_click_event_fn = (function () { 
			return function (a, b, c) {
			}})()
			;
			_tmp96.user_data = new int(0);
			return _tmp96;
		})()
		;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {gx__Color} color
 * @returns {void}
*/
function iui__Button_set_background(_v_this, color) {
_v_this = new $ref(_v_this)
	try {
		/** @type {bool} */
		_v_this.val.override_bg = new bool(new bool(true));
		/** @type {gx__Color} */
		_v_this.val.override_bg_color = color;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__Button_draw(btn) {
btn = new $ref(btn)
	try {
		iui__Window_draw_button(btn.val.app.valueOf(),btn.val.x, btn.val.y, btn.val.width, btn.val.height, btn);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__Button_pack(btn) {
btn = new $ref(btn)
	try {
		/** @type {bool} */
		btn.val.need_pack = new bool(new bool(true));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__Button_pack_do(btn) {
btn = new $ref(btn)
	try {
		/** @type {int} */
		const width = new int(iui__text_width(btn.val.app, new string( btn.val.text.valueOf() + new string("ab").valueOf())));
		/** @type {int} */
		btn.val.width = new int(width);
		/** @type {int} */
		btn.val.height = new int(new int( iui__text_height(btn.val.app, new string( btn.val.text.valueOf() + new string("a").valueOf())).valueOf() + new int(13).valueOf()));
		/** @type {bool} */
		btn.val.need_pack = new bool(new bool(false));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} x
 * @param {int} y
 * @param {int} width
 * @param {int} height
 * @param {iui__Button} btn
 * @returns {void}
*/
function iui__Window_draw_button(app, x, y, width, height, btn) {
app = new $ref(app)
btn = new $ref(btn)
	try {
		if ((btn.val.need_pack).valueOf()) {
			iui__Button_pack_do(btn.valueOf(),);
		}
		/** @type {string} */
		const text = new string(btn.val.text);
		/** @type {int} */
		const size = new int(new int( iui__text_width(app, text).valueOf() / new int(2).valueOf()));
		/** @type {int} */
		const sizh = new int(new int( iui__text_height(app, text).valueOf() / new int(2).valueOf()));
		/** @type {gx__Color} */
		let bg = app.val.theme.button_bg_normal;
		/** @type {gx__Color} */
		let border = app.val.theme.button_border_normal;
		/** @type {int} */
		let mid = new int((new int( x.valueOf() + (new int( width.valueOf() / new int(2).valueOf())).valueOf())));
		/** @type {int} */
		let midy = new int((new int( y.valueOf() + (new int( height.valueOf() / new int(2).valueOf())).valueOf())));
		if ((new bool( (new bool(iui__abs_T_int(new int( mid.valueOf() - app.val.mouse_x.valueOf())).valueOf() < (new int( width.valueOf() / new int(2).valueOf())).valueOf())).valueOf() && (new bool(iui__abs_T_int(new int( midy.valueOf() - app.val.mouse_y.valueOf())).valueOf() < (new int( height.valueOf() / new int(2).valueOf())).valueOf())).valueOf())).valueOf()) {
			if ((new bool( new bool(new iui__Menubar( app.val.bar.valueOf().valueOf() == new int(0).valueOf().valueOf())).valueOf() || new bool(app.val.bar.val.tik.valueOf() > new int(90).valueOf()).valueOf())).valueOf()) {
				/** @type {gx__Color} */
				bg = app.val.theme.button_bg_hover;
				/** @type {gx__Color} */
				border = app.val.theme.button_border_hover;
			}
		}
		if ((btn.val.override_bg).valueOf()) {
			/** @type {gx__Color} */
			bg = btn.val.override_bg_color;
		}
		if ((btn.val.is_mouse_rele).valueOf()) {
			if ((new bool( new bool(new iui__Menubar( app.val.bar.valueOf().valueOf() == new int(0).valueOf().valueOf())).valueOf() || new bool(app.val.bar.val.tik.valueOf() > new int(90).valueOf()).valueOf())).valueOf()) {
				iui__Button_click_event_fn(btn.valueOf(),app, (btn).valueOf());
				iui__Button_new_click_event_fn(btn.valueOf(),app, btn, btn.val.user_data);
			}
			/** @type {bool} */
			btn.val.is_mouse_rele = new bool(new bool(false));
		}
		if ((btn.val.is_mouse_down).valueOf()) {
			/** @type {gx__Color} */
			bg = app.val.theme.button_bg_click;
			/** @type {gx__Color} */
			border = app.val.theme.button_border_click;
		}
		gg__Context_draw_rounded_rect_filled(app.val.gg.valueOf(),x, y, width, height, new int(4), bg);
		gg__Context_draw_rounded_rect_empty(app.val.gg.valueOf(),x, y, width, height, new int(4), border);
		gg__Context_draw_text(app.val.gg.valueOf(),new int( (new int( x.valueOf() + (new int( width.valueOf() / new int(2).valueOf())).valueOf())).valueOf() - size.valueOf()), new int( new int( y.valueOf() + (new int( height.valueOf() / new int(2).valueOf())).valueOf()).valueOf() - sizh.valueOf()), text, (function() {
			let _tmp97 = new gx__TextCfg({});
			_tmp97.size = app.val.font_size;
			_tmp97.color = app.val.theme.text_color;
			return _tmp97;
		})()
		);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {anon_fn_iui__window_iui__button} b
 * @returns {void}
*/
function iui__Button_set_click(com, b) {
com = new $ref(com)
	try {
		/** @type {anon_fn_iui__window_iui__button} */
		com.val.click_event_fn = b;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {anon_fn_voidptr_voidptr_voidptr} b
 * @param {voidptr} extra_data
 * @returns {void}
*/
function iui__Button_set_click_fn(com, b, extra_data) {
com = new $ref(com)
	try {
		/** @type {anon_fn_voidptr_voidptr_voidptr} */
		com.val.new_click_event_fn = b;
		/** @type {voidptr} */
		com.val.user_data = extra_data;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace iui */
/**
 * @constructor
 * @param {{app?: iui__Window, text?: string, click_event_fn?: anon_fn_iui__window_iui__checkbox}} init
*/
function iui__Checkbox({ app = new iui__Window({}), text = new string(""), click_event_fn = undefined }) {
	this.app = app
	this.text = text
	this.click_event_fn = click_event_fn
};
iui__Checkbox.prototype = {
	...iui__Component_A.prototype,
	toString() {
		return `iui__Checkbox { app: ${this["app"].toString()} , text: "${this["text"].toString()}", click_event_fn: ${this["click_event_fn"].toString()} }`
	},
	/** @type {iui__Window} */
	app: new iui__Window({}),
	/** @type {string} */
	text: new string(""),
	/** @type {anon_fn_iui__window_iui__checkbox} */
	click_event_fn: undefined,
	$toJS() { return this; }
	};

/**
 * @function
 * @param {iui__Window} app
 * @param {string} text
 * @returns {iui__Checkbox}
*/
function iui__checkbox(app, text) {
app = new $ref(app)
	try {
		return (function() {
			let _tmp98 = new iui__Checkbox({});
			_tmp98.text = text;
			_tmp98.app = app;
			_tmp98.click_event_fn = iui__blank_event_cbox;
			return _tmp98;
		})()
		;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {anon_fn_iui__window_iui__checkbox} b
 * @returns {void}
*/
function iui__Checkbox_set_click(com, b) {
com = new $ref(com)
	try {
		/** @type {anon_fn_iui__window_iui__checkbox} */
		com.val.click_event_fn = b;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Window} win
 * @param {iui__Checkbox} a
 * @returns {void}
*/
function iui__blank_event_cbox(win, a) {
win = new $ref(win)
	try {
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__Checkbox_draw(com) {
com = new $ref(com)
	try {
		/** @type {iui__Window} */
		const app = com.val.app;
		/** @type {int} */
		const width = new int(com.val.width);
		/** @type {int} */
		const height = new int(com.val.height);
		/** @type {gx__Color} */
		let bg = app.val.theme.checkbox_bg;
		/** @type {gx__Color} */
		let border = app.val.theme.button_border_normal;
		/** @type {int} */
		let mid = new int((new int( com.val.x.valueOf() + (new int( width.valueOf() / new int(2).valueOf())).valueOf())));
		/** @type {int} */
		let midy = new int((new int( com.val.y.valueOf() + (new int( height.valueOf() / new int(2).valueOf())).valueOf())));
		if ((new bool( (new bool(iui__abs_T_int(new int( mid.valueOf() - app.val.mouse_x.valueOf())).valueOf() < (new int( width.valueOf() / new int(2).valueOf())).valueOf())).valueOf() && (new bool(iui__abs_T_int(new int( midy.valueOf() - app.val.mouse_y.valueOf())).valueOf() < (new int( height.valueOf() / new int(2).valueOf())).valueOf())).valueOf())).valueOf()) {
			/** @type {gx__Color} */
			bg = app.val.theme.button_bg_hover;
			/** @type {gx__Color} */
			border = app.val.theme.button_border_hover;
		}
		if ((com.val.is_mouse_rele).valueOf()) {
			/** @type {bool} */
			com.val.is_mouse_rele = new bool(new bool(false));
			/** @type {bool} */
			com.val.is_selected = new bool(!com.val.is_selected.val );
			iui__Checkbox_click_event_fn(com.valueOf(),app, (com).valueOf());
		}
		if ((com.val.is_mouse_down).valueOf()) {
			/** @type {gx__Color} */
			bg = app.val.theme.button_bg_click;
			/** @type {gx__Color} */
			border = app.val.theme.button_border_click;
		}
		iui__Window_draw_bordered_rect(com.val.app.valueOf(),com.val.x, com.val.y, com.val.height, com.val.height, new int(2), bg, border);
		if ((com.val.is_selected).valueOf()) {
			/** @type {int} */
			const cut = new int(new int(4));
			iui__Window_draw_bordered_rect(com.val.app.valueOf(),new int( com.val.x.valueOf() + cut.valueOf()), new int( com.val.y.valueOf() + cut.valueOf()), new int( com.val.height.valueOf() - (new int( cut.valueOf() * new int(2).valueOf())).valueOf()), new int( com.val.height.valueOf() - (new int( cut.valueOf() * new int(2).valueOf())).valueOf()), new int(2), com.val.app.val.theme.checkbox_selected, com.val.app.val.theme.checkbox_selected);
			gg__Context_draw_line(com.val.app.val.gg.valueOf(),new int( new int( com.val.x.valueOf() + (new int( com.val.height.valueOf() / new int(2).valueOf())).valueOf()).valueOf() - new int(5).valueOf()), new int( new int( com.val.y.valueOf() + (new int( com.val.height.valueOf() / new int(2).valueOf())).valueOf()).valueOf() + new int(1).valueOf()), new int( com.val.x.valueOf() + (new int( com.val.height.valueOf() / new int(2).valueOf())).valueOf()), new int( new int( com.val.y.valueOf() + (new int( com.val.height.valueOf() / new int(2).valueOf())).valueOf()).valueOf() + new int(5).valueOf()), com.val.app.val.theme.checkbox_selected);
			gg__Context_draw_line(com.val.app.val.gg.valueOf(),new int( com.val.x.valueOf() + (new int( com.val.height.valueOf() / new int(2).valueOf())).valueOf()), new int( new int( com.val.y.valueOf() + (new int( com.val.height.valueOf() / new int(2).valueOf())).valueOf()).valueOf() + new int(5).valueOf()), new int( new int( com.val.x.valueOf() + (new int( com.val.height.valueOf() / new int(2).valueOf())).valueOf()).valueOf() + new int(5).valueOf()), new int( new int( com.val.y.valueOf() + (new int( com.val.height.valueOf() / new int(2).valueOf())).valueOf()).valueOf() - new int(5).valueOf()), com.val.app.val.theme.checkbox_selected);
		}
		/** @type {int} */
		const sizh = new int(new int( gg__Context_text_height(app.val.gg.valueOf(),com.val.text).valueOf() / new int(2).valueOf()));
		gg__Context_draw_text(app.val.gg.valueOf(),new int( new int( com.val.x.valueOf() + com.val.height.valueOf()).valueOf() + new int(4).valueOf()), new int( new int( com.val.y.valueOf() + (new int( height.valueOf() / new int(2).valueOf())).valueOf()).valueOf() - sizh.valueOf()), com.val.text, (function() {
			let _tmp99 = new gx__TextCfg({});
			_tmp99.size = app.val.font_size;
			_tmp99.color = app.val.theme.text_color;
			return _tmp99;
		})()
		);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace iui */
/**
 * @constructor
 * @param {{win?: iui__Window, click_event_fn?: anon_fn_voidptr_voidptr, needs_pack?: bool, raw_width?: int, is_width_per?: bool, center_screen?: bool, min_height?: int}} init
*/
function iui__HBox({ win = new iui__Window({}), click_event_fn = undefined, needs_pack = new bool(false), raw_width = new int(0), is_width_per = new bool(false), center_screen = new bool(false), min_height = new int(0) }) {
	this.win = win
	this.click_event_fn = click_event_fn
	this.needs_pack = needs_pack
	this.raw_width = raw_width
	this.is_width_per = is_width_per
	this.center_screen = center_screen
	this.min_height = min_height
};
iui__HBox.prototype = {
	...iui__Component_A.prototype,
	toString() {
		return `iui__HBox { win: ${this["win"].toString()} , click_event_fn: ${this["click_event_fn"].toString()} , needs_pack: ${this["needs_pack"].toString()} , raw_width: ${this["raw_width"].toString()} , is_width_per: ${this["is_width_per"].toString()} , center_screen: ${this["center_screen"].toString()} , min_height: ${this["min_height"].toString()} }`
	},
	/** @type {iui__Window} */
	win: new iui__Window({}),
	/** @type {anon_fn_voidptr_voidptr} */
	click_event_fn: undefined,
	/** @type {bool} */
	needs_pack: new bool(false),
	/** @type {int} */
	raw_width: new int(0),
	/** @type {bool} */
	is_width_per: new bool(false),
	/** @type {bool} */
	center_screen: new bool(false),
	/** @type {int} */
	min_height: new int(0),
	$toJS() { return this; }
	};

/**
 * @function
 * @param {iui__Window} win
 * @returns {iui__HBox}
*/
function iui__hbox(win) {
win = new $ref(win)
	try {
		return new $ref((function() {
			let _tmp100 = new iui__HBox({});
			_tmp100.win = win;
			_tmp100.click_event_fn = (function () { 
			return function (a, b) {
			}})()
			;
			return _tmp100;
		})()
		);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__HBox_pack(_v_this) {
_v_this = new $ref(_v_this)
	try {
		/** @type {bool} */
		_v_this.val.needs_pack = new bool(new bool(true));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} val
 * @returns {void}
*/
function iui__HBox_set_min_height(_v_this, val) {
_v_this = new $ref(_v_this)
	try {
		/** @type {int} */
		_v_this.val.min_height = new int(val);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {bool} flag
 * @param {int} width
 * @returns {void}
*/
function iui__HBox_set_width_as_percent(_v_this, flag, width) {
_v_this = new $ref(_v_this)
	try {
		/** @type {bool} */
		_v_this.val.is_width_per = new bool(flag);
		/** @type {int} */
		_v_this.val.raw_width = new int(width);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__HBox_draw(_v_this) {
_v_this = new $ref(_v_this)
	try {
		/** @type {int} */
		let o_x = new int(new int(0));
		/** @type {int} */
		let o_y = new int(new int(0));
		/** @type {int} */
		let box_width = new int(_v_this.val.width);
		if ((_v_this.val.is_width_per).valueOf()) {
			/** @type {gg__Size} */
			const size = gg__window_size();
			/** @type {int} */
			box_width = new int(new int(new f32( (size.width).valueOf() * (new f32( new f32(_v_this.val.raw_width).valueOf() / new int(100).valueOf())).valueOf())));
			/** @type {int} */
			_v_this.val.width = new int(box_width);
		}
		/** @type {int} */
		let width = new int(new int(0));
		/** @type {int} */
		let index = new int(new int(0));
		/** @type {int} */
		let yyy = new int(new int(0));
		for (const child of _v_this.val.children) {
			try { 
				if ((new bool(yyy.valueOf() < child.height.valueOf())).valueOf()) {
					/** @type {int} */
					yyy = new int(child.height);
				}
				iui__Component_draw_event_fn(child.valueOf(),_v_this.val.win, child);
				if ((new bool(new int( o_x.valueOf() + child.width.valueOf()).valueOf() > box_width.valueOf())).valueOf()) {
					if ((new bool(o_x.valueOf() > width.valueOf())).valueOf()) {
						/** @type {int} */
						width = new int(o_x);
					}
					/** @type {int} */
					o_x = new int(new int(0));
					/** @type {int} */
					o_y.val = Math.floor(o_y + new int(new int( yyy.valueOf() + new int(2).valueOf())));
				}
				iui__draw_with_offset(child, new int( _v_this.val.x.valueOf() + o_x.valueOf()), new int( _v_this.val.y.valueOf() + o_y.valueOf()));
				if ((_v_this.val.is_mouse_rele).valueOf()) {
					if ((iui__point_in_raw(child, _v_this.val.win.val.mouse_x, _v_this.val.win.val.mouse_y)).valueOf()) {
						/** @type {bool} */
						child.is_mouse_rele = new bool(new bool(true));
						/** @type {bool} */
						_v_this.val.is_mouse_rele = new bool(new bool(false));
					} else {
						/** @type {bool} */
						child.is_mouse_down = new bool(new bool(false));
						/** @type {bool} */
						child.is_mouse_rele = new bool(new bool(false));
					}
				} else {
					/** @type {bool} */
					child.is_mouse_rele = new bool(new bool(false));
				}
				if ((_v_this.val.is_mouse_down).valueOf()) {
					if ((iui__point_in_raw(child, _v_this.val.win.val.click_x, _v_this.val.win.val.click_y)).valueOf()) {
						/** @type {bool} */
						child.is_mouse_down = new bool(new bool(true));
					} else {
						/** @type {bool} */
						child.is_mouse_down = new bool(new bool(false));
					}
				} else {
					/** @type {bool} */
					child.is_mouse_down = new bool(new bool(false));
				}
				/** @type {int} */
				o_x.val = Math.floor(o_x + new int(new int( child.x.valueOf() + child.width.valueOf())));
				/** @type {int} */
				index.val = Math.floor(index + new int(new int(1)));
				if ((new bool(index.valueOf() == _v_this.val.children.len.valueOf())).valueOf()) {
					/** @type {int} */
					o_y.val = Math.floor(o_y + new int(child.height));
				}
				if ((new bool(yyy.valueOf() < child.height.valueOf())).valueOf()) {
					/** @type {int} */
					yyy = new int(child.height);
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		/** @type {int} */
		yyy.val = Math.floor(yyy + new int(new int(1)));
		if ((new bool(yyy.valueOf() != _v_this.val.height.valueOf())).valueOf()) {
			/** @type {int} */
			_v_this.val.height = new int(yyy);
		}
		if ((_v_this.val.needs_pack).valueOf()) {
			/** @type {int} */
			_v_this.val.width = new int(o_x);
			if ((new bool(yyy.valueOf() > _v_this.val.min_height.valueOf())).valueOf()) {
				/** @type {int} */
				_v_this.val.height = new int(yyy);
			} else {
				/** @type {int} */
				_v_this.val.height = new int(_v_this.val.min_height);
			}
			/** @type {bool} */
			_v_this.val.needs_pack = new bool(new bool(false));
		}
		if ((new bool(_v_this.val.height.valueOf() < _v_this.val.min_height.valueOf())).valueOf()) {
			/** @type {int} */
			_v_this.val.height = new int(_v_this.val.min_height);
		}
		/** @type {bool} */
		_v_this.val.is_mouse_rele = new bool(new bool(false));
		if ((_v_this.val.center_screen).valueOf()) {
			/** @type {gg__Size} */
			const size = gg__Context_window_size(_v_this.val.win.val.gg.valueOf(),);
			/** @type {int} */
			const wid = new int(_v_this.val.width);
			/** @type {int} */
			_v_this.val.x = new int(new int( (new int( size.width.valueOf() / new int(2).valueOf())).valueOf() - (new int( wid.valueOf() / new int(2).valueOf())).valueOf()));
		}
		if ((_v_this.val.win.val.debug_draw).valueOf()) {
			gg__Context_draw_rect_empty(_v_this.val.win.val.gg.valueOf(),_v_this.val.x, _v_this.val.y, _v_this.val.width, _v_this.val.height, gx__red);
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace iui */
/**
 * @constructor
 * @param {{app?: iui__Window, text?: string, click_event_fn?: anon_fn_voidptr, in_modal?: bool, need_pack?: bool, size?: int, bold?: bool, url?: string}} init
*/
function iui__Hyperlink({ app = new iui__Window({}), text = new string(""), click_event_fn = undefined, in_modal = new bool(false), need_pack = new bool(false), size = new int(0), bold = new bool(false), url = new string("") }) {
	this.app = app
	this.text = text
	this.click_event_fn = click_event_fn
	this.in_modal = in_modal
	this.need_pack = need_pack
	this.size = size
	this.bold = bold
	this.url = url
};
iui__Hyperlink.prototype = {
	...iui__Component_A.prototype,
	toString() {
		return `iui__Hyperlink { app: ${this["app"].toString()} , text: "${this["text"].toString()}", click_event_fn: ${this["click_event_fn"].toString()} , in_modal: ${this["in_modal"].toString()} , need_pack: ${this["need_pack"].toString()} , size: ${this["size"].toString()} , bold: ${this["bold"].toString()} , url: "${this["url"].toString()}"}`
	},
	/** @type {iui__Window} */
	app: new iui__Window({}),
	/** @type {string} */
	text: new string(""),
	/** @type {anon_fn_voidptr} */
	click_event_fn: undefined,
	/** @type {bool} */
	in_modal: new bool(false),
	/** @type {bool} */
	need_pack: new bool(false),
	/** @type {int} */
	size: new int(0),
	/** @type {bool} */
	bold: new bool(false),
	/** @type {string} */
	url: new string(""),
	$toJS() { return this; }
	};

/**
 * @function
 * @param {iui__Window} app
 * @param {string} text
 * @param {string} url
 * @returns {iui__Hyperlink}
*/
function iui__hyperlink(app, text, url) {
app = new $ref(app)
	try {
		return new $ref((function() {
			let _tmp101 = new iui__Hyperlink({});
			_tmp101.text = text;
			_tmp101.app = app;
			_tmp101.click_event_fn = (function () { 
			return function (a) {
				/** @type {iui__Hyperlink} */
				const _v_this = new $ref(a);
				iui__open_url(_v_this.val.url);
			}})()
			;
			_tmp101.url = url;
			return _tmp101;
		})()
		);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__Hyperlink_draw(btn) {
btn = new $ref(btn)
	try {
		iui__Window_draw_hyperlink(btn.val.app.valueOf(),btn.val.x, btn.val.y, btn.val.width, btn.val.height, btn);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__Hyperlink_pack(btn) {
btn = new $ref(btn)
	try {
		/** @type {bool} */
		btn.val.need_pack = new bool(new bool(true));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__Hyperlink_pack_do(btn) {
btn = new $ref(btn)
	try {
		gg__Context_set_cfg(btn.val.app.val.gg.valueOf(),(function() {
			let _tmp102 = new gx__TextCfg({});
			_tmp102.size = new int( btn.val.app.val.font_size.valueOf() + btn.val.size.valueOf());
			_tmp102.color = btn.val.app.val.theme.text_color;
			_tmp102.bold = btn.val.bold;
			return _tmp102;
		})()
		);
		/** @type {int} */
		const width = new int(iui__text_width(btn.val.app, string_replace(btn.val.text,new string("\t"), string_repeat(new string(" "),new int(8)))));
		/** @type {int} */
		btn.val.width = new int(new int( width.valueOf() + new int(1).valueOf()));
		/** @type {int} */
		const th = new int(new int( iui__text_height(btn.val.app, new string("{!A")).valueOf() + btn.val.size.valueOf()));
		/** @type {int} */
		let hi = new int(new int(0));
		for (const line of string_split_into_lines(btn.val.text,)) {
			try { 
				if ((new bool(string_trim_space(line,).len.valueOf() > new int(0).valueOf())).valueOf()) {
					/** @type {int} */
					hi.val = Math.floor(hi + new int(th));
				} else {
					/** @type {int} */
					hi.val = Math.floor(hi + new int(th));
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		/** @type {int} */
		btn.val.height = new int(new int( new int( hi.valueOf() + new int(4).valueOf()).valueOf() + btn.val.size.valueOf()));
		if ((new bool(btn.val.height.valueOf() < th.valueOf())).valueOf()) {
			/** @type {int} */
			btn.val.height = new int(th);
		}
		/** @type {bool} */
		btn.val.need_pack = new bool(new bool(false));
		gg__Context_set_cfg(btn.val.app.val.gg.valueOf(),(function() {
			let _tmp103 = new gx__TextCfg({});
			_tmp103.size = btn.val.app.val.font_size;
			_tmp103.color = btn.val.app.val.theme.text_color;
			_tmp103.bold = new bool(false);
			return _tmp103;
		})()
		);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} x
 * @param {int} y
 * @param {int} width
 * @param {int} height
 * @param {iui__Hyperlink} _v_this
 * @returns {void}
*/
function iui__Window_draw_hyperlink(app, x, y, width, height, _v_this) {
app = new $ref(app)
_v_this = new $ref(_v_this)
	try {
		if ((_v_this.val.need_pack).valueOf()) {
			iui__Hyperlink_pack_do(_v_this.valueOf(),);
		}
		/** @type {string} */
		const text = new string(_v_this.val.text);
		if ((_v_this.val.is_mouse_rele).valueOf()) {
			/** @type {bool} */
			_v_this.val.is_mouse_rele = new bool(new bool(false));
			iui__Hyperlink_click_event_fn(_v_this.valueOf(),_v_this);
		}
		gg__Context_set_cfg(app.val.gg.valueOf(),(function() {
			let _tmp104 = new gx__TextCfg({});
			_tmp104.size = new int( app.val.font_size.valueOf() + _v_this.val.size.valueOf());
			_tmp104.color = app.val.theme.text_color;
			_tmp104.bold = _v_this.val.bold;
			return _tmp104;
		})()
		);
		/** @type {int} */
		const line_height = new int(iui__text_height(app, new string("1A{")));
		if ((new bool(_v_this.val.height.valueOf() < (new int( line_height.valueOf() / new int(2).valueOf())).valueOf())).valueOf()) {
			/** @type {int} */
			_v_this.val.height = new int(line_height);
		}
		/** @type {int} */
		let my = new int(new int(0));
		for (const spl of string_split(text,new string("\n"))) {
			try { 
				gg__Context_draw_text(app.val.gg.valueOf(),x, new int( new int( new int( y.valueOf() + height.valueOf()).valueOf() - line_height.valueOf()).valueOf() + my.valueOf()), string_replace(spl.valueOf(),new string("\t"), string_repeat(new string("  "),new int(8))), (function() {
					let _tmp105 = new gx__TextCfg({});
					_tmp105.size = new int( app.val.font_size.valueOf() + _v_this.val.size.valueOf());
					_tmp105.color = gx__rgb(new int(0), new int(100), new int(200));
					_tmp105.bold = _v_this.val.bold;
					return _tmp105;
				})()
				);
				gg__Context_set_cfg(app.val.gg.valueOf(),(function() {
					let _tmp106 = new gx__TextCfg({});
					_tmp106.size = app.val.font_size;
					_tmp106.color = app.val.theme.text_color;
					_tmp106.bold = new bool(false);
					return _tmp106;
				})()
				);
				/** @type {int} */
				my.val = Math.floor(my + new int(line_height));
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		gg__Context_draw_line(app.val.gg.valueOf(),x, new int( new int( y.valueOf() + height.valueOf()).valueOf() - new int(2).valueOf()), new int( x.valueOf() + width.valueOf()), new int( new int( y.valueOf() + height.valueOf()).valueOf() - new int(2).valueOf()), gx__rgb(new int(0), new int(100), new int(200)));
		if ((app.val.debug_draw).valueOf()) {
			gg__Context_draw_rect_empty(app.val.gg.valueOf(),_v_this.val.x, _v_this.val.y, _v_this.val.width, _v_this.val.height, gx__blue);
			gg__Context_draw_line(app.val.gg.valueOf(),_v_this.val.x, _v_this.val.y, new int( _v_this.val.x.valueOf() + _v_this.val.width.valueOf()), new int( _v_this.val.y.valueOf() + _v_this.val.height.valueOf()), gx__blue);
			gg__Context_draw_line(app.val.gg.valueOf(),_v_this.val.x, new int( _v_this.val.y.valueOf() + _v_this.val.height.valueOf()), new int( _v_this.val.x.valueOf() + _v_this.val.width.valueOf()), _v_this.val.y, gx__blue);
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} fs
 * @param {bool} abs
 * @param {bool} bold
 * @returns {void}
*/
function iui__Hyperlink_set_config(_v_this, fs, abs, bold) {
_v_this = new $ref(_v_this)
	try {
		/** @type {int} */
		_v_this.val.size = new int(fs);
		if ((abs).valueOf()) {
			/** @type {int} */
			_v_this.val.size = new int(new int( fs.valueOf() - _v_this.val.app.val.font_size.valueOf()));
		}
		/** @type {bool} */
		_v_this.val.bold = new bool(bold);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {anon_fn_voidptr} b
 * @returns {void}
*/
function iui__Hyperlink_set_click(_v_this, b) {
_v_this = new $ref(_v_this)
	try {
		/** @type {anon_fn_voidptr} */
		_v_this.val.click_event_fn = b;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace iui */
/**
 * @constructor
 * @param {{app?: iui__Window, text?: string, click_event_fn?: anon_fn_iui__window_iui__image, in_modal?: bool, need_pack?: bool, img?: gg__Image, rotate?: int}} init
*/
function iui__Image({ app = new iui__Window({}), text = new string(""), click_event_fn = undefined, in_modal = new bool(false), need_pack = new bool(false), img = new gg__Image({}), rotate = new int(0) }) {
	this.app = app
	this.text = text
	this.click_event_fn = click_event_fn
	this.in_modal = in_modal
	this.need_pack = need_pack
	this.img = img
	this.rotate = rotate
};
iui__Image.prototype = {
	...iui__Component_A.prototype,
	toString() {
		return `iui__Image { app: ${this["app"].toString()} , text: "${this["text"].toString()}", click_event_fn: ${this["click_event_fn"].toString()} , in_modal: ${this["in_modal"].toString()} , need_pack: ${this["need_pack"].toString()} , img: ${this["img"].toString()} , rotate: ${this["rotate"].toString()} }`
	},
	/** @type {iui__Window} */
	app: new iui__Window({}),
	/** @type {string} */
	text: new string(""),
	/** @type {anon_fn_iui__window_iui__image} */
	click_event_fn: undefined,
	/** @type {bool} */
	in_modal: new bool(false),
	/** @type {bool} */
	need_pack: new bool(false),
	/** @type {gg__Image} */
	img: new gg__Image({}),
	/** @type {int} */
	rotate: new int(0),
	$toJS() { return this; }
	};

/**
 * @function
 * @param {iui__Window} app
 * @param {gg__Image} img
 * @returns {iui__Image}
*/
function iui__image(app, img) {
app = new $ref(app)
img = new $ref(img)
	try {
		return new $ref((function() {
			let _tmp107 = new iui__Image({});
			_tmp107.text = new string("");
			_tmp107.img = img;
			_tmp107.app = app;
			_tmp107.click_event_fn = iui__blank_event_im;
			return _tmp107;
		})()
		);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Window} app
 * @param {gg__Image} img
 * @param {int} width
 * @param {int} height
 * @returns {iui__Image}
*/
function iui__image_with_size(app, img, width, height) {
app = new $ref(app)
img = new $ref(img)
	try {
		return new $ref((function() {
			let _tmp108 = new iui__Image({});
			_tmp108.text = new string("");
			_tmp108.img = img;
			_tmp108.app = app;
			_tmp108.width = width;
			_tmp108.height = height;
			_tmp108.click_event_fn = iui__blank_event_im;
			return _tmp108;
		})()
		);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Window} app
 * @param {Array_byte} b
 * @param {int} width
 * @param {int} height
 * @returns {iui__Image}
*/
function iui__image_from_byte_array_with_size(app, b, width, height) {
app = new $ref(app)
	try {
		/** @type {iui__Image} */
		let img = new $ref((function() {
			let _tmp109 = new iui__Image({});
			_tmp109.text = new string("");
			_tmp109.img = new int(0);
			_tmp109.app = app;
			_tmp109.width = width;
			_tmp109.height = height;
			_tmp109.click_event_fn = iui__blank_event_im;
			return _tmp109;
		})()
		);
		/** @type {gg__Image} */
		const gg_im = gg__Context_create_image_from_byte_array(app.val.gg.valueOf(),b);
		/** @type {gg__Image} */
		img.val.img.val = new $ref(gg_im).val;
		return img;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Window} app
 * @param {Array_byte} b
 * @param {int} width
 * @param {int} height
 * @returns {iui__Image}
*/
function iui__image_from_bytes(app, b, width, height) {
app = new $ref(app)
	try {
		return iui__image_from_byte_array_with_size(app, b, width, height);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__Image_draw(_v_this) {
_v_this = new $ref(_v_this)
	try {
		if ((_v_this.val.is_mouse_rele).valueOf()) {
			/** @type {bool} */
			_v_this.val.is_mouse_rele = new bool(new bool(false));
			iui__Image_click_event_fn(_v_this.valueOf(),_v_this.val.app, (_v_this).valueOf());
		}
		gg__Context_draw_image_with_config(_v_this.val.app.val.gg.valueOf(),(function() {
			let _tmp110 = new gg__DrawImageConfig({});
			_tmp110.img = _v_this.val.img;
			_tmp110.img_rect = (function() {
				let _tmp111 = new gg__Rect({});
				_tmp111.x = _v_this.val.x;
				_tmp111.y = _v_this.val.y;
				_tmp111.width = _v_this.val.width;
				_tmp111.height = _v_this.val.height;
				return _tmp111;
			})()
			;
			_tmp110.rotate = _v_this.val.rotate;
			return _tmp110;
		})()
		);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__Image_pack(_v_this) {
_v_this = new $ref(_v_this)
	try {
		/** @type {bool} */
		_v_this.val.need_pack = new bool(new bool(true));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__Image_pack_do(btn) {
btn = new $ref(btn)
	try {
		/** @type {int} */
		const width = new int(iui__text_width(btn.val.app, new string( btn.val.text.valueOf() + new string("ab").valueOf())));
		/** @type {int} */
		btn.val.width = new int(width);
		/** @type {int} */
		btn.val.height = new int(new int( iui__text_height(btn.val.app, btn.val.text).valueOf() + new int(4).valueOf()));
		/** @type {bool} */
		btn.val.need_pack = new bool(new bool(false));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {anon_fn_iui__window_iui__image} b
 * @returns {void}
*/
function iui__Image_set_click(com, b) {
com = new $ref(com)
	try {
		/** @type {anon_fn_iui__window_iui__image} */
		com.val.click_event_fn = b;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Window} win
 * @param {iui__Image} a
 * @returns {void}
*/
function iui__blank_event_im(win, a) {
win = new $ref(win)
	try {
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} deg
 * @returns {void}
*/
function iui__Image_set_draw_rotation(_v_this, deg) {
_v_this = new $ref(_v_this)
	try {
		/** @type {int} */
		_v_this.val.rotate = new int(deg);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace iui */
/**
 * @constructor
 * @param {{app?: iui__Window, text?: string, click_event_fn?: anon_fn_iui__window_iui__label, in_modal?: bool, need_pack?: bool, size?: int, bold?: bool}} init
*/
function iui__Label({ app = new iui__Window({}), text = new string(""), click_event_fn = undefined, in_modal = new bool(false), need_pack = new bool(false), size = new int(0), bold = new bool(false) }) {
	this.app = app
	this.text = text
	this.click_event_fn = click_event_fn
	this.in_modal = in_modal
	this.need_pack = need_pack
	this.size = size
	this.bold = bold
};
iui__Label.prototype = {
	...iui__Component_A.prototype,
	toString() {
		return `iui__Label { app: ${this["app"].toString()} , text: "${this["text"].toString()}", click_event_fn: ${this["click_event_fn"].toString()} , in_modal: ${this["in_modal"].toString()} , need_pack: ${this["need_pack"].toString()} , size: ${this["size"].toString()} , bold: ${this["bold"].toString()} }`
	},
	/** @type {iui__Window} */
	app: new iui__Window({}),
	/** @type {string} */
	text: new string(""),
	/** @type {anon_fn_iui__window_iui__label} */
	click_event_fn: undefined,
	/** @type {bool} */
	in_modal: new bool(false),
	/** @type {bool} */
	need_pack: new bool(false),
	/** @type {int} */
	size: new int(0),
	/** @type {bool} */
	bold: new bool(false),
	$toJS() { return this; }
	};

/* [params] */
/**
 * @constructor
 * @param {{should_pack?: bool, x?: int, y?: int, height?: int, width?: int}} init
*/
function iui__LabelConfig({ should_pack = new bool(false), x = new int(0), y = new int(0), height = new int(0), width = new int(0) }) {
	this.should_pack = should_pack
	this.x = x
	this.y = y
	this.height = height
	this.width = width
};
iui__LabelConfig.prototype = {
	toString() {
		return `iui__LabelConfig { should_pack: ${this["should_pack"].toString()} , x: ${this["x"].toString()} , y: ${this["y"].toString()} , height: ${this["height"].toString()} , width: ${this["width"].toString()} }`
	},
	/** @type {bool} */
	should_pack: new bool(false),
	/** @type {int} */
	x: new int(0),
	/** @type {int} */
	y: new int(0),
	/** @type {int} */
	height: new int(0),
	/** @type {int} */
	width: new int(0),
	$toJS() { return this; }
	};

/**
 * @function
 * @param {iui__Window} app
 * @param {string} text
 * @param {iui__LabelConfig} conf
 * @returns {iui__Label}
*/
function iui__label(app, text, conf) {
app = new $ref(app)
	try {
		return (function() {
			let _tmp112 = new iui__Label({});
			_tmp112.text = text;
			_tmp112.app = app;
			_tmp112.x = conf.x;
			_tmp112.y = conf.y;
			_tmp112.height = conf.height;
			_tmp112.width = conf.width;
			_tmp112.need_pack = conf.should_pack;
			_tmp112.click_event_fn = iui__blank_event_l;
			return _tmp112;
		})()
		;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__Label_draw(btn) {
btn = new $ref(btn)
	try {
		iui__Window_draw_label(btn.val.app.valueOf(),btn.val.x, btn.val.y, btn.val.width, btn.val.height, btn);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__Label_pack(_v_this) {
_v_this = new $ref(_v_this)
	try {
		/** @type {bool} */
		_v_this.val.need_pack = new bool(new bool(true));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__Label_pack_do(btn) {
btn = new $ref(btn)
	try {
		gg__Context_set_cfg(btn.val.app.val.gg.valueOf(),(function() {
			let _tmp113 = new gx__TextCfg({});
			_tmp113.size = new int( btn.val.app.val.font_size.valueOf() + btn.val.size.valueOf());
			_tmp113.color = btn.val.app.val.theme.text_color;
			_tmp113.bold = btn.val.bold;
			return _tmp113;
		})()
		);
		/** @type {int} */
		const width = new int(iui__text_width(btn.val.app, btn.val.text));
		/** @type {int} */
		btn.val.width = new int(width);
		/** @type {int} */
		const th = new int(iui__text_height(btn.val.app, new string("{!A")));
		/** @type {int} */
		let hi = new int(new int(0));
		for (const line of string_split_into_lines(btn.val.text,)) {
			try { 
				if ((new bool(string_trim_space(line,).len.valueOf() > new int(0).valueOf())).valueOf()) {
					/** @type {int} */
					hi.val = Math.floor(hi + new int(iui__text_height(btn.val.app, line)));
				} else {
					/** @type {int} */
					hi.val = Math.floor(hi + new int(th));
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		/** @type {int} */
		btn.val.height = new int(new int( new int( hi.valueOf() + new int(4).valueOf()).valueOf() + btn.val.size.valueOf()));
		if ((new bool(btn.val.height.valueOf() < th.valueOf())).valueOf()) {
			/** @type {int} */
			btn.val.height = new int(th);
		}
		/** @type {bool} */
		btn.val.need_pack = new bool(new bool(false));
		gg__Context_set_cfg(btn.val.app.val.gg.valueOf(),(function() {
			let _tmp114 = new gx__TextCfg({});
			_tmp114.size = btn.val.app.val.font_size;
			_tmp114.color = btn.val.app.val.theme.text_color;
			_tmp114.bold = new bool(false);
			return _tmp114;
		})()
		);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} x
 * @param {int} y
 * @param {int} width
 * @param {int} height
 * @param {iui__Label} _v_this
 * @returns {void}
*/
function iui__Window_draw_label(app, x, y, width, height, _v_this) {
app = new $ref(app)
_v_this = new $ref(_v_this)
	try {
		if ((_v_this.val.need_pack).valueOf()) {
			iui__Label_pack_do(_v_this.valueOf(),);
		}
		/** @type {string} */
		const text = new string(_v_this.val.text);
		/** @type {int} */
		const sizh = new int(new int( iui__text_height(app, text).valueOf() / new int(2).valueOf()));
		if ((_v_this.val.is_mouse_rele).valueOf()) {
			/** @type {bool} */
			_v_this.val.is_mouse_rele = new bool(new bool(false));
			iui__Label_click_event_fn(_v_this.valueOf(),app, (_v_this).valueOf());
		}
		/** @type {int} */
		let line_height = new int(iui__text_height(app, new string("1A{")));
		/** @type {int} */
		let my = new int(new int(0));
		for (const spl of string_split(text,new string("\n"))) {
			try { 
				gg__Context_draw_text(app.val.gg.valueOf(),x, new int( new int( new int( y.valueOf() + (new int( height.valueOf() / new int(2).valueOf())).valueOf()).valueOf() - sizh.valueOf()).valueOf() + my.valueOf()), string_replace(spl.valueOf(),new string("\t"), string_repeat(new string("  "),new int(8))), (function() {
					let _tmp115 = new gx__TextCfg({});
					_tmp115.size = new int( app.val.font_size.valueOf() + _v_this.val.size.valueOf());
					_tmp115.color = app.val.theme.text_color;
					_tmp115.bold = _v_this.val.bold;
					return _tmp115;
				})()
				);
				if ((new bool(_v_this.val.size.valueOf() != (new int( app.val.font_size.valueOf() + _v_this.val.size.valueOf())).valueOf())).valueOf()) {
					gg__Context_set_cfg(app.val.gg.valueOf(),(function() {
						let _tmp116 = new gx__TextCfg({});
						_tmp116.size = app.val.font_size;
						_tmp116.color = app.val.theme.text_color;
						_tmp116.bold = new bool(false);
						return _tmp116;
					})()
					);
				}
				/** @type {int} */
				my.val = Math.floor(my + new int(line_height));
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		if ((_v_this.val.app.val.debug_draw).valueOf()) {
			gg__Context_draw_rect_empty(_v_this.val.app.val.gg.valueOf(),_v_this.val.x, _v_this.val.y, _v_this.val.width, _v_this.val.height, gx__blue);
			gg__Context_draw_line(_v_this.val.app.val.gg.valueOf(),_v_this.val.x, _v_this.val.y, new int( _v_this.val.x.valueOf() + _v_this.val.width.valueOf()), new int( _v_this.val.y.valueOf() + _v_this.val.height.valueOf()), gx__blue);
			gg__Context_draw_line(_v_this.val.app.val.gg.valueOf(),_v_this.val.x, new int( _v_this.val.y.valueOf() + _v_this.val.height.valueOf()), new int( _v_this.val.x.valueOf() + _v_this.val.width.valueOf()), _v_this.val.y, gx__blue);
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} fs
 * @param {bool} abs
 * @param {bool} bold
 * @returns {void}
*/
function iui__Label_set_config(_v_this, fs, abs, bold) {
_v_this = new $ref(_v_this)
	try {
		/** @type {int} */
		_v_this.val.size = new int(fs);
		if ((abs).valueOf()) {
			/** @type {int} */
			_v_this.val.size = new int(new int( fs.valueOf() - _v_this.val.app.val.font_size.valueOf()));
		}
		/** @type {bool} */
		_v_this.val.bold = new bool(bold);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {anon_fn_iui__window_iui__label} b
 * @returns {void}
*/
function iui__Label_set_click(_v_this, b) {
_v_this = new $ref(_v_this)
	try {
		/** @type {anon_fn_iui__window_iui__label} */
		_v_this.val.click_event_fn = b;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Window} win
 * @param {iui__Label} a
 * @returns {void}
*/
function iui__blank_event_l(win, a) {
win = new $ref(win)
	try {
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace iui */
/* [heap] */
/**
 * @constructor
 * @param {{app?: iui__Window, theme?: iui__Theme, items?: Array_iui__MenuItem, tik?: int}} init
*/
function iui__Menubar({ app = new iui__Window({}), theme = new iui__Theme({}), items = empty_array(), tik = new int(0) }) {
	this.app = app
	this.theme = theme
	this.items = items
	this.tik = tik
};
iui__Menubar.prototype = {
	...iui__Component_A.prototype,
	toString() {
		return `iui__Menubar { app: ${this["app"].toString()} , theme: ${this["theme"].toString()} , items: ${this["items"].toString()} , tik: ${this["tik"].toString()} }`
	},
	/** @type {iui__Window} */
	app: new iui__Window({}),
	/** @type {iui__Theme} */
	theme: new iui__Theme({}),
	/** @type {Array_iui__MenuItem} */
	items: empty_array(),
	/** @type {int} */
	tik: new int(0),
	$toJS() { return this; }
	};

/**
 * @function
 * @param {iui__MenuItem} com
 * @returns {void}
*/
function iui__Menubar_add_child(bar, com) {
bar = new $ref(bar)
	try {
		array_push(bar.val.items,com,false);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {bool}
*/
function iui__Menubar_is_hovering(bar) {
bar = new $ref(bar)
	try {
		for (const item of bar.val.items) {
			try { 
				if ((item.val.show_items).valueOf()) {
					return new bool(true);
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return new bool(false);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [heap] */
/**
 * @constructor
 * @param {{items?: Array_iui__MenuItem, text?: string, icon?: iui__Image, shown?: bool, show_items?: bool, no_paint_bg?: bool, click_event_fn?: anon_fn_iui__window_iui__menuitem}} init
*/
function iui__MenuItem({ items = empty_array(), text = new string(""), icon = new iui__Image({}), shown = new bool(false), show_items = new bool(false), no_paint_bg = new bool(false), click_event_fn = undefined }) {
	this.items = items
	this.text = text
	this.icon = icon
	this.shown = shown
	this.show_items = show_items
	this.no_paint_bg = no_paint_bg
	this.click_event_fn = click_event_fn
};
iui__MenuItem.prototype = {
	...iui__Component_A.prototype,
	toString() {
		return `iui__MenuItem { items: ${this["items"].toString()} , text: "${this["text"].toString()}", icon: ${this["icon"].toString()} , shown: ${this["shown"].toString()} , show_items: ${this["show_items"].toString()} , no_paint_bg: ${this["no_paint_bg"].toString()} , click_event_fn: ${this["click_event_fn"].toString()} }`
	},
	/** @type {Array_iui__MenuItem} */
	items: empty_array(),
	/** @type {string} */
	text: new string(""),
	/** @type {iui__Image} */
	icon: new iui__Image({}),
	/** @type {bool} */
	shown: new bool(false),
	/** @type {bool} */
	show_items: new bool(false),
	/** @type {bool} */
	no_paint_bg: new bool(false),
	/** @type {anon_fn_iui__window_iui__menuitem} */
	click_event_fn: undefined,
	$toJS() { return this; }
	};

/* [parms] */
/**
 * @constructor
 * @param {{text?: string, icon?: iui__Image, click_event_fn?: anon_fn_iui__window_iui__menuitem, children?: Array_iui__MenuItem_ptr}} init
*/
function iui__MenuItemConfig({ text = new string(""), icon = new int(0), click_event_fn = (function () { 
return function (win, item) {
	win = new $ref(win)
}})()
, children = empty_array() }) {
	this.text = text
	this.icon = icon
	this.click_event_fn = click_event_fn
	this.children = children
};
iui__MenuItemConfig.prototype = {
	toString() {
		return `iui__MenuItemConfig { text: "${this["text"].toString()}", icon: ${this["icon"].toString()} , click_event_fn: ${this["click_event_fn"].toString()} , children: ${this["children"].toString()} }`
	},
	/** @type {string} */
	text: new string(""),
	/** @type {iui__Image} */
	icon: new iui__Image({}),
	/** @type {anon_fn_iui__window_iui__menuitem} */
	click_event_fn: undefined,
	/** @type {Array_iui__MenuItem_ptr} */
	children: empty_array(),
	$toJS() { return this; }
	};

/**
 * @function
 * @param {iui__MenuItem} com
 * @returns {void}
*/
function iui__MenuItem_add_child(item, com) {
item = new $ref(item)
	try {
		array_push(item.val.items,com,false);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} text
 * @returns {iui__MenuItem}
*/
function iui__menuitem(text) {
	try {
		return new $ref((function() {
			let _tmp117 = new iui__MenuItem({});
			_tmp117.text = text;
			_tmp117.shown = new bool(false);
			_tmp117.show_items = new bool(false);
			_tmp117.icon = new int(0);
			_tmp117.click_event_fn = (function () { 
			return function (win, item) {
				win = new $ref(win)
			}})()
			;
			return _tmp117;
		})()
		);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__MenuItemConfig} confg
 * @returns {iui__MenuItem}
*/
function iui__menu_item(confg) {
	try {
		/** @type {iui__MenuItem} */
		let item = new $ref((function() {
			let _tmp118 = new iui__MenuItem({});
			_tmp118.text = confg.text;
			_tmp118.shown = new bool(false);
			_tmp118.show_items = new bool(false);
			_tmp118.icon = confg.icon;
			_tmp118.click_event_fn = confg.click_event_fn;
			return _tmp118;
		})()
		);
		for (const kid of confg.children) {
			try { 
				iui__MenuItem_add_child(item.valueOf(),kid);
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return item;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {anon_fn_iui__window_iui__menuitem} b
 * @returns {void}
*/
function iui__MenuItem_set_click(com, b) {
com = new $ref(com)
	try {
		/** @type {anon_fn_iui__window_iui__menuitem} */
		com.val.click_event_fn = b;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Window} app
 * @param {iui__Theme} theme
 * @returns {iui__Menubar}
*/
function iui__menubar(app, theme) {
app = new $ref(app)
	try {
		return new $ref((function() {
			let _tmp119 = new iui__Menubar({});
			_tmp119.app = app;
			_tmp119.theme = theme;
			return _tmp119;
		})()
		);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__Menubar_draw(bar) {
bar = new $ref(bar)
	try {
		/** @type {int} */
		let wid = new int(gg__window_size().width);
		if ((new bool(bar.val.width.valueOf() > new int(0).valueOf())).valueOf()) {
			/** @type {int} */
			wid = new int(bar.val.width);
		}
		gg__Context_draw_rounded_rect_filled(bar.val.app.val.gg.valueOf(),bar.val.x, bar.val.y, wid, new int(25), new int(2), bar.val.theme.menubar_background);
		gg__Context_draw_rounded_rect_empty(bar.val.app.val.gg.valueOf(),bar.val.x, bar.val.y, wid, new int(25), new int(2), bar.val.theme.menubar_border);
		/** @type {int} */
		let mult = new int(new int(0));
		for (const item of bar.val.items) {
			try { 
				iui__Window_draw_menu_button(bar.val.app.valueOf(),mult, bar.val.y, new int(56), new int(25), item);
				if ((new bool(item.val.width.valueOf() > new int(0).valueOf())).valueOf()) {
					/** @type {int} */
					mult.val = Math.floor(mult + new int(new int( item.val.width.valueOf() + new int(4).valueOf())));
				} else {
					/** @type {int} */
					mult.val = Math.floor(mult + new int(new int(56)));
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {iui__Menubar}
*/
function iui__Window_get_bar(app) {
app = new $ref(app)
	try {
		return app.val.bar;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} x
 * @param {int} y
 * @param {int} width_
 * @param {int} height
 * @param {iui__MenuItem} item
 * @returns {void}
*/
function iui__Window_draw_menu_button(app, x, y, width_, height, item) {
app = new $ref(app)
item = new $ref(item)
	try {
		/** @type {int} */
		const size = new int(new int( iui__text_width(app, item.val.text).valueOf() / new int(2).valueOf()));
		/** @type {int} */
		const half_line_height = new int(new int( iui__text_height(app, new string("A!{")).valueOf() / new int(2).valueOf()));
		/** @type {int} */
		const width = new int(((new bool(item.val.width.valueOf() > new int(0).valueOf())).valueOf() ? new int( item.val.width.valueOf() + new int(4).valueOf()) : width_));
		/** @type {int} */
		const midx = new int(new int( x.valueOf() + (new int( width.valueOf() / new int(2).valueOf())).valueOf()));
		/** @type {int} */
		const midy = new int(new int( y.valueOf() + (new int( height.valueOf() / new int(2).valueOf())).valueOf()));
		/** @type {bool} */
		const hover = new bool(new bool( (new bool(iui__abs_T_int(new int( midx.valueOf() - app.val.mouse_x.valueOf())).valueOf() < (new int( width.valueOf() / new int(2).valueOf())).valueOf())).valueOf() && (new bool(iui__abs_T_int(new int( midy.valueOf() - app.val.mouse_y.valueOf())).valueOf() < (new int( height.valueOf() / new int(2).valueOf())).valueOf())).valueOf()));
		/** @type {bool} */
		const clicked = new bool((new bool( (new bool(iui__abs_T_int(new int( midx.valueOf() - app.val.click_x.valueOf())).valueOf() < (new int( width.valueOf() / new int(2).valueOf())).valueOf())).valueOf() && (new bool(iui__abs_T_int(new int( midy.valueOf() - app.val.click_y.valueOf())).valueOf() < (new int( height.valueOf() / new int(2).valueOf())).valueOf())).valueOf())));
		/** @type {gx__Color} */
		let bg = ((hover).valueOf() ? app.val.theme.button_bg_hover : app.val.theme.menubar_background);
		/** @type {gx__Color} */
		let border = ((hover).valueOf() ? app.val.theme.button_border_hover : app.val.theme.menubar_border);
		if ((new bool( clicked.valueOf() && !item.val.show_items.val .valueOf())).valueOf()) {
			/** @type {gx__Color} */
			bg = app.val.theme.button_bg_click;
			/** @type {gx__Color} */
			border = app.val.theme.button_border_click;
			/** @type {bool} */
			item.val.show_items = new bool(new bool(true));
			/** @type {int} */
			app.val.bar.val.tik = new int(new int(0));
			iui__MenuItem_click_event_fn(item.valueOf(),app, (item).valueOf());
			if ((new bool(item.val.text.valueOf() == new string("About iUI").valueOf())).valueOf()) {
				/** @type {iui__Modal} */
				const about = iui__open_about_modal(app);
				iui__Window_add_child(app.valueOf(),about);
			}
		}
		if ((new bool( item.val.show_items.valueOf() && new bool(item.val.items.len.valueOf() > new int(0).valueOf()).valueOf())).valueOf()) {
			/** @type {gx__Color} */
			bg = app.val.theme.button_bg_click;
			/** @type {gx__Color} */
			border = app.val.theme.button_border_click;
			/** @type {int} */
			app.val.bar.val.tik = new int(new int(0));
			/** @type {int} */
			let wid = new int(new int(120));
			for (const sub of item.val.items) {
				try { 
					/** @type {int} */
					const sub_size = new int(iui__text_width(app, new string( sub.val.text.valueOf() + new string("...").valueOf())));
					if ((new bool(wid.valueOf() < sub_size.valueOf())).valueOf()) {
						/** @type {int} */
						wid = new int(sub_size);
					}
				} catch (e) {
				 if (e instanceof BreakException) { break; }
				 else if (e instanceof ContinueException) { continue; }
				 else { throw e; } }
			}
			
			iui__Window_draw_bordered_rect(app.valueOf(),x, new int( y.valueOf() + height.valueOf()), wid, new int( (new int( item.val.items.len.valueOf() * new int(26).valueOf())).valueOf() + new int(2).valueOf()), new int(2), app.val.theme.dropdown_background, app.val.theme.dropdown_border);
			/** @type {int} */
			let mult = new int(new int(0));
			for (const sub of item.val.items) {
				try { 
					iui__Window_draw_menu_button(app.valueOf(),new int( x.valueOf() + new int(1).valueOf()), new int( new int( new int( y.valueOf() + height.valueOf()).valueOf() + mult.valueOf()).valueOf() + new int(1).valueOf()), new int( wid.valueOf() - new int(2).valueOf()), new int(25), sub);
					/** @type {int} */
					mult.val = Math.floor(mult + new int(new int(26)));
				} catch (e) {
				 if (e instanceof BreakException) { break; }
				 else if (e instanceof ContinueException) { continue; }
				 else { throw e; } }
			}
			
		}
		if ((new bool( new bool( item.val.show_items.valueOf() && (new bool( new bool(item.val.items.len.valueOf() == new int(0).valueOf()).valueOf() || (new bool( new bool(app.val.click_x.valueOf() != new int(-1).valueOf()).valueOf() && new bool(app.val.click_y.valueOf() != new int(-1).valueOf()).valueOf())).valueOf())).valueOf()).valueOf() && !clicked.val .valueOf())).valueOf()) {
			/** @type {bool} */
			item.val.show_items = new bool(new bool(false));
			/** @type {bool} */
			item.val.is_mouse_rele = new bool(new bool(true));
		}
		if ((new bool( !item.val.show_items.val .valueOf() && new bool(app.val.bar.val.tik.valueOf() < new int(99).valueOf()).valueOf())).valueOf()) {
			app.val.bar.val.tik.val ++;
		}
		if ((!item.val.no_paint_bg.val ).valueOf()) {
			gg__Context_draw_rounded_rect_filled(app.val.gg.valueOf(),x, y, width, height, new int(2), bg);
			gg__Context_draw_rounded_rect_empty(app.val.gg.valueOf(),x, y, width, height, new int(2), border);
		}
		if ((new bool(new iui__Image( item.val.icon.valueOf().valueOf() != new int(0).valueOf().valueOf()))).valueOf()) {
			iui__draw_with_offset(item.val.icon, new int( new int( x.valueOf() + (new int( width.valueOf() / new int(2).valueOf())).valueOf()).valueOf() - (new int( item.val.icon.val.width.valueOf() / new int(2).valueOf())).valueOf()), y);
		} else {
			gg__Context_draw_text(app.val.gg.valueOf(),new int( (new int( x.valueOf() + (new int( width.valueOf() / new int(2).valueOf())).valueOf())).valueOf() - size.valueOf()), new int( new int( y.valueOf() + (new int( height.valueOf() / new int(2).valueOf())).valueOf()).valueOf() - half_line_height.valueOf()), item.val.text, (function() {
				let _tmp120 = new gx__TextCfg({});
				_tmp120.size = app.val.font_size;
				_tmp120.color = app.val.theme.text_color;
				return _tmp120;
			})()
			);
		}
		/** @type {iui__Component} */
		let com = new $ref(new iui__Component(item));
		iui__Component_draw_event_fn(com.valueOf(),app, com);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Window} app
 * @returns {iui__Modal}
*/
function iui__open_about_modal(app) {
app = new $ref(app)
	try {
		/** @type {iui__Modal} */
		let about = iui__modal(app, new string("About iUI"));
		/** @type {int} */
		about.val.in_height = new int(new int(250));
		/** @type {int} */
		about.val.in_width = new int(new int(320));
		/** @type {iui__Label} */
		let title = iui__label(app, new string("iUI "), new iui__LabelConfig({}));
		iui__Component_A_set_pos(title,new int(40), new int(16));
		iui__Label_set_config(title,new int(16), new bool(false), new bool(true));
		iui__Label_pack(title,);
		iui__Component_A_add_child(about.valueOf(),title);
		/** @type {iui__Label} */
		let lbl = iui__label(app, new string( new string( new string( new string("Isaiah's UI Toolkit for V.\nVersion: ").valueOf() + iui__version.valueOf()).valueOf() + new string("\nCompiled with ").valueOf()).valueOf() + v__util__version__full_v_version(new bool(false)).valueOf()), new iui__LabelConfig({}));
		iui__Component_A_set_pos(lbl,new int(40), new int(70));
		iui__Component_A_add_child(about.valueOf(),lbl);
		/** @type {iui__Button} */
		let gh = iui__button(app, new string("Github"));
		iui__Component_A_set_pos(gh,new int(40), new int(135));
		iui__Button_set_click_fn(gh,(function () { 
		return function (win, btn, data) {
			iui__open_url(new string("https://github.com/isaiahpatton/ui"));
		}})()
		, new int(0));
		iui__Button_pack(gh,);
		iui__Component_A_add_child(about.valueOf(),gh);
		/** @type {iui__Label} */
		let copy = iui__label(app, new string("Copyright © 2021-2022 Isaiah."), new iui__LabelConfig({}));
		iui__Component_A_set_pos(copy,new int(40), new int(185));
		iui__Label_set_config(copy,new int(12), new bool(true), new bool(false));
		iui__Component_A_add_child(about.valueOf(),copy);
		return about;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace iui */
/**
 * @constructor
 * @param {{window?: iui__Window, text?: string, click_event_fn?: anon_fn_iui__window_iui__modal, in_modal?: bool, needs_init?: bool, close?: iui__Button, shown?: bool, in_width?: int, in_height?: int, left_off?: int, top_off?: int, xs?: int}} init
*/
function iui__Modal({ window = new iui__Window({}), text = new string(""), click_event_fn = undefined, in_modal = new bool(false), needs_init = new bool(false), close = new iui__Button({}), shown = new bool(false), in_width = new int(0), in_height = new int(0), left_off = new int(0), top_off = new int(50), xs = new int(0) }) {
	this.window = window
	this.text = text
	this.click_event_fn = click_event_fn
	this.in_modal = in_modal
	this.needs_init = needs_init
	this.close = close
	this.shown = shown
	this.in_width = in_width
	this.in_height = in_height
	this.left_off = left_off
	this.top_off = top_off
	this.xs = xs
};
iui__Modal.prototype = {
	...iui__Component_A.prototype,
	toString() {
		return `iui__Modal { window: ${this["window"].toString()} , text: "${this["text"].toString()}", click_event_fn: ${this["click_event_fn"].toString()} , in_modal: ${this["in_modal"].toString()} , needs_init: ${this["needs_init"].toString()} , close: ${this["close"].toString()} , shown: ${this["shown"].toString()} , in_width: ${this["in_width"].toString()} , in_height: ${this["in_height"].toString()} , left_off: ${this["left_off"].toString()} , top_off: ${this["top_off"].toString()} , xs: ${this["xs"].toString()} }`
	},
	/** @type {iui__Window} */
	window: new iui__Window({}),
	/** @type {string} */
	text: new string(""),
	/** @type {anon_fn_iui__window_iui__modal} */
	click_event_fn: undefined,
	/** @type {bool} */
	in_modal: new bool(false),
	/** @type {bool} */
	needs_init: new bool(false),
	/** @type {iui__Button} */
	close: new iui__Button({}),
	/** @type {bool} */
	shown: new bool(false),
	/** @type {int} */
	in_width: new int(0),
	/** @type {int} */
	in_height: new int(0),
	/** @type {int} */
	left_off: new int(0),
	/** @type {int} */
	top_off: new int(0),
	/** @type {int} */
	xs: new int(0),
	$toJS() { return this; }
	};

/**
 * @function
 * @param {iui__Window} app
 * @param {string} title
 * @returns {iui__Modal}
*/
function iui__modal(app, title) {
app = new $ref(app)
	try {
		return new $ref((function() {
			let _tmp121 = new iui__Modal({});
			_tmp121.text = title;
			_tmp121.window = app;
			_tmp121.click_event_fn = (function () { 
			return function (win, a) {
				win = new $ref(win)
			}})()
			;
			_tmp121.z_index = new int(500);
			_tmp121.needs_init = new bool(true);
			_tmp121.draw_event_fn = (function () { 
			return function (win, com) {
				win = new $ref(win)
				com = new $ref(com)
				if ((com.valueOf() instanceof iui__Modal).valueOf()) {
					for (const kid of com.val.children) {
						try { 
							iui__Component_draw_event_fn(kid.valueOf(),win, kid);
						} catch (e) {
						 if (e instanceof BreakException) { break; }
						 else if (e instanceof ContinueException) { continue; }
						 else { throw e; } }
					}
					
				}
			}})()
			;
			_tmp121.in_width = new int(500);
			_tmp121.in_height = new int(300);
			return _tmp121;
		})()
		);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__Modal_draw(_v_this) {
_v_this = new $ref(_v_this)
	try {
		/** @type {iui__Window} */
		let app = _v_this.val.window;
		/** @type {gg__Size} */
		let ws = gg__window_size();
		/** @type {int} */
		_v_this.val.width = new int(ws.width);
		/** @type {int} */
		_v_this.val.height = new int(ws.height);
		if ((new bool(_v_this.val.z_index.valueOf() <= new int(501).valueOf())).valueOf()) {
			gg__Context_draw_rect_filled(app.val.gg.valueOf(),new int(0), new int(0), ws.width, ws.height, gx__rgba(new int(0), new int(0), new int(0), new int(150)));
		}
		/** @type {int} */
		const wid = new int(_v_this.val.in_width);
		/** @type {int} */
		const hei = new int(_v_this.val.in_height);
		/** @type {int} */
		const xs = new int(new int( new int( (new int( ws.width.valueOf() / new int(2).valueOf())).valueOf() - (new int( wid.valueOf() / new int(2).valueOf())).valueOf()).valueOf() - _v_this.val.left_off.valueOf()));
		/** @type {int} */
		_v_this.val.xs = new int(xs);
		gg__Context_draw_rounded_rect_filled(app.val.gg.valueOf(),xs, _v_this.val.top_off, wid, new int(26), new int(2), app.val.theme.button_bg_hover);
		/** @type {string} */
		let title = new string(_v_this.val.text);
		/** @type {int} */
		const tw = new int(iui__text_width(app, title));
		/** @type {int} */
		const th = new int(iui__text_height(app, title));
		gg__Context_draw_text(app.val.gg.valueOf(),new int( (new int( ws.width.valueOf() / new int(2).valueOf())).valueOf() - (new int( tw.valueOf() / new int(2).valueOf())).valueOf()), new int( new int( _v_this.val.top_off.valueOf() + (new int( th.valueOf() / new int(2).valueOf())).valueOf()).valueOf() - new int(1).valueOf()), title, (function() {
			let _tmp122 = new gx__TextCfg({});
			_tmp122.size = app.val.font_size;
			_tmp122.color = app.val.theme.text_color;
			return _tmp122;
		})()
		);
		for (let i = new int(new int(0)); +new bool(i.valueOf() < new int(4).valueOf()); i.val ++) {
			try { 
				iui__Window_draw_bordered_rect(app.valueOf(),new int( new int( new int( (new int( ws.width.valueOf() / new int(2).valueOf())).valueOf() - (new int( wid.valueOf() / new int(2).valueOf())).valueOf()).valueOf() + i.valueOf()).valueOf() - _v_this.val.left_off.valueOf()), new int( new int( _v_this.val.top_off.valueOf() + new int(24).valueOf()).valueOf() + i.valueOf()), new int( wid.valueOf() - (new int( i.valueOf() * new int(2).valueOf())).valueOf()), new int( hei.valueOf() - (new int( i.valueOf() * new int(2).valueOf())).valueOf()), new int(2), app.val.theme.background, app.val.theme.button_bg_hover);
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		iui__Modal_draw_event_fn(_v_this.valueOf(),app, new $ref(new iui__Component(_v_this)));
		if ((_v_this.val.needs_init).valueOf()) {
			iui__Modal_create_close_btn(_v_this.valueOf(),app, new bool(true));
			/** @type {bool} */
			_v_this.val.needs_init = new bool(new bool(false));
		}
		for (const com of _v_this.val.children) {
			try { 
				iui__Component_draw_event_fn(com.valueOf(),app, com);
				iui__draw_with_offset(com, xs, new int( new int( _v_this.val.y.valueOf() + _v_this.val.top_off.valueOf()).valueOf() + new int(26).valueOf()));
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Window} app
 * @param {bool} ce
 * @returns {iui__Button}
*/
function iui__Modal_create_close_btn(_v_this, app, ce) {
_v_this = new $ref(_v_this)
app = new $ref(app)
	try {
		/** @type {iui__Button} */
		let close = iui__button(app, new string("OK"));
		/** @type {int} */
		close.x = new int(new int_literal( (new int_literal( new int(300).valueOf() / new int(2).valueOf())).valueOf() + (new int_literal( new int(100).valueOf() / new int(2).valueOf())).valueOf()));
		/** @type {int} */
		close.y = new int(new int( (_v_this.val.in_height).valueOf() - new int(35).valueOf()));
		/** @type {int} */
		close.width = new int(new int(100));
		/** @type {int} */
		close.height = new int(new int(25));
		if ((ce).valueOf()) {
			iui__Button_set_click(close,iui__default_modal_close_fn);
		}
		array_push(_v_this.val.children,close,false);
		/** @type {iui__Button} */
		_v_this.val.close = close;
		return close;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Window} win
 * @param {iui__Button} btn
 * @returns {void}
*/
function iui__default_modal_close_fn(win, btn) {
win = new $ref(win)
	try {
		/** @type {Array_iui__Component} */
		win.val.components = win.val.components.filter(it => it instanceof iui__Modal);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {anon_fn_iui__window_iui__modal} b
 * @returns {void}
*/
function iui__Modal_set_click(com, b) {
com = new $ref(com)
	try {
		/** @type {anon_fn_iui__window_iui__modal} */
		com.val.click_event_fn = b;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace iui */
/**
 * @constructor
 * @param {{win?: iui__Window, text?: string, click_event_fn?: anon_fn_iui__window_iui__button}} init
*/
function iui__Progressbar({ win = new iui__Window({}), text = new string(""), click_event_fn = undefined }) {
	this.win = win
	this.text = text
	this.click_event_fn = click_event_fn
};
iui__Progressbar.prototype = {
	...iui__Component_A.prototype,
	toString() {
		return `iui__Progressbar { win: ${this["win"].toString()} , text: "${this["text"].toString()}", click_event_fn: ${this["click_event_fn"].toString()} }`
	},
	/** @type {iui__Window} */
	win: new iui__Window({}),
	/** @type {string} */
	text: new string(""),
	/** @type {anon_fn_iui__window_iui__button} */
	click_event_fn: undefined,
	$toJS() { return this; }
	};

/**
 * @function
 * @param {iui__Window} win
 * @param {f32} val
 * @returns {iui__Progressbar}
*/
function iui__progressbar(win, val) {
win = new $ref(win)
	try {
		return new $ref((function() {
			let _tmp123 = new iui__Progressbar({});
			_tmp123.win = win;
			_tmp123.text = f32_str(val);
			return _tmp123;
		})()
		);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__Progressbar_draw(bar) {
bar = new $ref(bar)
	try {
		/** @type {f32} */
		let wid = new f32(new f32( bar.val.width.valueOf() * (new f32( new f32(0.01).valueOf() * string_f32(bar.val.text,).valueOf())).valueOf()));
		gg__Context_draw_rounded_rect_filled(bar.val.win.val.gg.valueOf(),bar.val.x, bar.val.y, wid, bar.val.height, new int(4), bar.val.win.val.theme.checkbox_selected);
		gg__Context_draw_rounded_rect_empty(bar.val.win.val.gg.valueOf(),bar.val.x, bar.val.y, bar.val.width, bar.val.height, new int(4), bar.val.win.val.theme.button_border_normal);
		/** @type {string} */
		const text = new string(new string( bar.val.text.valueOf() + new string("%").valueOf()));
		/** @type {int} */
		const size = new int(new int( iui__text_width(bar.val.win, text).valueOf() / new int(2).valueOf()));
		/** @type {int} */
		const sizh = new int(new int( iui__text_height(bar.val.win, text).valueOf() / new int(2).valueOf()));
		gg__Context_draw_text(bar.val.win.val.gg.valueOf(),new int( (new int( bar.val.x.valueOf() + (new int( bar.val.width.valueOf() / new int(2).valueOf())).valueOf())).valueOf() - size.valueOf()), new int( new int( bar.val.y.valueOf() + (new int( bar.val.height.valueOf() / new int(2).valueOf())).valueOf()).valueOf() - sizh.valueOf()), text, (function() {
			let _tmp124 = new gx__TextCfg({});
			_tmp124.size = bar.val.win.val.font_size;
			_tmp124.color = bar.val.win.val.theme.text_color;
			return _tmp124;
		})()
		);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace iui */
/**
 * @constructor
 * @param {{app?: iui__Window, text?: string, click_event_fn?: anon_fn_iui__window_iui__select, change_event_fn?: anon_fn_iui__window_iui__select_string_string, items?: Array_string, shown?: bool, show_items?: bool, center?: bool}} init
*/
function iui__Select({ app = new iui__Window({}), text = new string(""), click_event_fn = undefined, change_event_fn = undefined, items = empty_array(), shown = new bool(false), show_items = new bool(false), center = new bool(false) }) {
	this.app = app
	this.text = text
	this.click_event_fn = click_event_fn
	this.change_event_fn = change_event_fn
	this.items = items
	this.shown = shown
	this.show_items = show_items
	this.center = center
};
iui__Select.prototype = {
	...iui__Component_A.prototype,
	toString() {
		return `iui__Select { app: ${this["app"].toString()} , text: "${this["text"].toString()}", click_event_fn: ${this["click_event_fn"].toString()} , change_event_fn: ${this["change_event_fn"].toString()} , items: ${this["items"].toString()} , shown: ${this["shown"].toString()} , show_items: ${this["show_items"].toString()} , center: ${this["center"].toString()} }`
	},
	/** @type {iui__Window} */
	app: new iui__Window({}),
	/** @type {string} */
	text: new string(""),
	/** @type {anon_fn_iui__window_iui__select} */
	click_event_fn: undefined,
	/** @type {anon_fn_iui__window_iui__select_string_string} */
	change_event_fn: undefined,
	/** @type {Array_string} */
	items: empty_array(),
	/** @type {bool} */
	shown: new bool(false),
	/** @type {bool} */
	show_items: new bool(false),
	/** @type {bool} */
	center: new bool(false),
	$toJS() { return this; }
	};

/**
 * @function
 * @param {iui__Window} app
 * @param {string} text
 * @returns {iui__Select}
*/
function iui__selector(app, text) {
app = new $ref(app)
	try {
		return new $ref((function() {
			let _tmp125 = new iui__Select({});
			_tmp125.text = text;
			_tmp125.app = app;
			_tmp125.click_event_fn = (function () { 
			return function (win, a) {
				win = new $ref(win)
			}})()
			;
			_tmp125.change_event_fn = (function () { 
			return function (win, a, old, neww) {
				win = new $ref(win)
			}})()
			;
			_tmp125.z_index = new int(1);
			return _tmp125;
		})()
		);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {anon_fn_iui__window_iui__select} b
 * @returns {void}
*/
function iui__Select_set_click(com, b) {
com = new $ref(com)
	try {
		/** @type {anon_fn_iui__window_iui__select} */
		com.val.click_event_fn = b;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {anon_fn_iui__window_iui__select_string_string} b
 * @returns {void}
*/
function iui__Select_set_change(com, b) {
com = new $ref(com)
	try {
		/** @type {anon_fn_iui__window_iui__select_string_string} */
		com.val.change_event_fn = b;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__Select_draw(item) {
item = new $ref(item)
	try {
		/** @type {int} */
		const x = new int(item.val.x);
		/** @type {int} */
		const y = new int(item.val.y);
		/** @type {iui__Window} */
		const app = item.val.app;
		/** @type {int} */
		const width = new int(item.val.width);
		/** @type {int} */
		const height = new int(item.val.height);
		/** @type {int} */
		const size = new int(new int( iui__text_width(app, item.val.text).valueOf() / new int(2).valueOf()));
		/** @type {int} */
		const sizh = new int(new int( iui__text_height(app, item.val.text).valueOf() / new int(2).valueOf()));
		/** @type {gx__Color} */
		let bg = app.val.theme.button_bg_normal;
		/** @type {gx__Color} */
		let border = app.val.theme.button_border_normal;
		/** @type {int} */
		let midx = new int((new int( x.valueOf() + (new int( width.valueOf() / new int(2).valueOf())).valueOf())));
		/** @type {int} */
		let midy = new int((new int( y.valueOf() + (new int( height.valueOf() / new int(2).valueOf())).valueOf())));
		if ((new bool( (new bool(iui__abs_T_int(new int( midx.valueOf() - app.val.mouse_x.valueOf())).valueOf() < (new int( width.valueOf() / new int(2).valueOf())).valueOf())).valueOf() && (new bool(iui__abs_T_int(new int( midy.valueOf() - app.val.mouse_y.valueOf())).valueOf() < (new int( height.valueOf() / new int(2).valueOf())).valueOf())).valueOf())).valueOf()) {
			/** @type {gx__Color} */
			bg = app.val.theme.button_bg_hover;
			/** @type {gx__Color} */
			border = app.val.theme.button_border_hover;
		}
		/** @type {bool} */
		let clicked = new bool((new bool( (new bool(iui__abs_T_int(new int( midx.valueOf() - app.val.click_x.valueOf())).valueOf() < (new int( width.valueOf() / new int(2).valueOf())).valueOf())).valueOf() && (new bool(iui__abs_T_int(new int( midy.valueOf() - app.val.click_y.valueOf())).valueOf() < (new int( height.valueOf() / new int(2).valueOf())).valueOf())).valueOf())));
		if ((new bool( clicked.valueOf() && !item.val.show_items.val .valueOf())).valueOf()) {
			/** @type {gx__Color} */
			bg = app.val.theme.button_bg_click;
			/** @type {gx__Color} */
			border = app.val.theme.button_border_click;
			/** @type {bool} */
			item.val.show_items = new bool(new bool(true));
			iui__Select_click_event_fn(item.valueOf(),app, (item).valueOf());
		}
		if ((new bool( item.val.show_items.valueOf() && new bool(item.val.items.len.valueOf() > new int(0).valueOf()).valueOf())).valueOf()) {
			/** @type {gx__Color} */
			bg = app.val.theme.button_bg_click;
			/** @type {gx__Color} */
			border = app.val.theme.button_border_click;
			/** @type {int} */
			let wid = new int(new int(100));
			for (const sub of item.val.items) {
				try { 
					/** @type {int} */
					const sub_size = new int(iui__text_width(app, new string( sub.valueOf().valueOf() + new string("...").valueOf().valueOf())));
					if ((new bool(wid.valueOf() < sub_size.valueOf())).valueOf()) {
						/** @type {int} */
						wid = new int(sub_size);
					}
				} catch (e) {
				 if (e instanceof BreakException) { break; }
				 else if (e instanceof ContinueException) { continue; }
				 else { throw e; } }
			}
			
			if ((new bool(wid.valueOf() < item.val.width.valueOf())).valueOf()) {
				/** @type {int} */
				wid = new int(item.val.width);
			}
			iui__Window_draw_bordered_rect(app.valueOf(),x, new int( y.valueOf() + height.valueOf()), wid, new int( (new int( item.val.items.len.valueOf() * new int(26).valueOf())).valueOf() + new int(2).valueOf()), new int(2), app.val.theme.dropdown_background, app.val.theme.dropdown_border);
			/** @type {int} */
			let mult = new int(new int(0));
			for (const sub of item.val.items) {
				try { 
					/** @type {iui__Button} */
					let subb = iui__button(app, sub);
					iui__Window_draw_button_2(app.valueOf(),new int( x.valueOf() + new int(1).valueOf()), new int( new int( new int( y.valueOf() + height.valueOf()).valueOf() + mult.valueOf()).valueOf() + new int(1).valueOf()), new int( wid.valueOf() - new int(2).valueOf()), new int(25), subb, item);
					/** @type {int} */
					mult.val = Math.floor(mult + new int(new int(26)));
				} catch (e) {
				 if (e instanceof BreakException) { break; }
				 else if (e instanceof ContinueException) { continue; }
				 else { throw e; } }
			}
			
		}
		if ((new bool( new bool( new bool( item.val.show_items.valueOf() && new bool(app.val.click_x.valueOf() != new int(-1).valueOf()).valueOf()).valueOf() && new bool(app.val.click_y.valueOf() != new int(-1).valueOf()).valueOf()).valueOf() && !clicked.val .valueOf())).valueOf()) {
			/** @type {bool} */
			item.val.show_items = new bool(new bool(false));
		}
		gg__Context_draw_rounded_rect_filled(app.val.gg.valueOf(),x, y, width, height, new int(2), bg);
		gg__Context_draw_rounded_rect_empty(app.val.gg.valueOf(),x, y, width, height, new int(2), border);
		gg__Context_draw_text(app.val.gg.valueOf(),new int( new int( (new int( x.valueOf() + (new int( width.valueOf() / new int(2).valueOf())).valueOf())).valueOf() - size.valueOf()).valueOf() - new int(4).valueOf()), new int( new int( y.valueOf() + (new int( height.valueOf() / new int(2).valueOf())).valueOf()).valueOf() - sizh.valueOf()), item.val.text, (function() {
			let _tmp126 = new gx__TextCfg({});
			_tmp126.size = app.val.font_size;
			_tmp126.color = app.val.theme.text_color;
			return _tmp126;
		})()
		);
		/** @type {int} */
		const char_height = new int(new int( gg__Context_text_height(app.val.gg.valueOf(),new string(".")).valueOf() / new int(2).valueOf()));
		gg__Context_draw_triangle_filled(app.val.gg.valueOf(),new int( new int( x.valueOf() + width.valueOf()).valueOf() - new int(20).valueOf()), new int( new int( y.valueOf() + (new int( height.valueOf() / new int(2).valueOf())).valueOf()).valueOf() - char_height.valueOf()), new int( new int( x.valueOf() + width.valueOf()).valueOf() - new int(15).valueOf()), new int( new int( new int( y.valueOf() + (new int( height.valueOf() / new int(2).valueOf())).valueOf()).valueOf() + new int(5).valueOf()).valueOf() - char_height.valueOf()), new int( new int( x.valueOf() + width.valueOf()).valueOf() - new int(10).valueOf()), new int( new int( y.valueOf() + (new int( height.valueOf() / new int(2).valueOf())).valueOf()).valueOf() - char_height.valueOf()), app.val.theme.text_color);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} x
 * @param {int} y
 * @param {int} width
 * @param {int} height
 * @param {iui__Button} btn
 * @param {iui__Select} sel
 * @returns {void}
*/
function iui__Window_draw_button_2(app, x, y, width, height, btn, sel) {
app = new $ref(app)
btn = new $ref(btn)
sel = new $ref(sel)
	try {
		/** @type {int} */
		let y1 = new int(y);
		if ((!app.val.show_menu_bar.val ).valueOf()) {
			/** @type {int} */
			y1 = new int(new int( y1.valueOf() - new int(25).valueOf()));
		}
		/** @type {string} */
		const text = new string(btn.val.text);
		/** @type {int} */
		const size = new int(new int( iui__text_width(app, text).valueOf() / new int(2).valueOf()));
		/** @type {int} */
		const sizh = new int(new int( iui__text_height(app, text).valueOf() / new int(2).valueOf()));
		/** @type {gx__Color} */
		let bg = app.val.theme.button_bg_normal;
		/** @type {gx__Color} */
		let border = app.val.theme.button_bg_normal;
		/** @type {int} */
		let mid = new int((new int( x.valueOf() + (new int( width.valueOf() / new int(2).valueOf())).valueOf())));
		/** @type {int} */
		let midy = new int((new int( y1.valueOf() + (new int( height.valueOf() / new int(2).valueOf())).valueOf())));
		if ((new bool( (new bool(iui__abs_T_int(new int( mid.valueOf() - app.val.mouse_x.valueOf())).valueOf() < (new int( width.valueOf() / new int(2).valueOf())).valueOf())).valueOf() && (new bool(iui__abs_T_int(new int( midy.valueOf() - app.val.mouse_y.valueOf())).valueOf() < (new int( height.valueOf() / new int(2).valueOf())).valueOf())).valueOf())).valueOf()) {
			/** @type {gx__Color} */
			bg = app.val.theme.button_bg_hover;
			/** @type {gx__Color} */
			border = app.val.theme.button_border_hover;
		}
		if ((new bool( (new bool(iui__abs_T_int(new int( mid.valueOf() - app.val.click_x.valueOf())).valueOf() < (new int( width.valueOf() / new int(2).valueOf())).valueOf())).valueOf() && (new bool(iui__abs_T_int(new int( midy.valueOf() - app.val.click_y.valueOf())).valueOf() < (new int( height.valueOf() / new int(2).valueOf())).valueOf())).valueOf())).valueOf()) {
			/** @type {i64} */
			const now = new i64(time__Time_unix_time_milli(time__now(),));
			if ((new bool(new f64( BigInt(now.valueOf()) - BigInt(btn.val.last_click.valueOf())).valueOf() > new int(100).valueOf())).valueOf()) {
				iui__Button_click_event_fn(btn.valueOf(),app, (btn).valueOf());
				/** @type {bool} */
				btn.val.is_selected = new bool(new bool(true));
				/** @type {string} */
				const old_text = new string(sel.val.text);
				/** @type {string} */
				sel.val.text = new string(btn.val.text);
				iui__Select_change_event_fn(sel.valueOf(),sel.val.app, (sel).valueOf(), old_text, sel.val.text);
				/** @type {gx__Color} */
				bg = app.val.theme.button_bg_click;
				/** @type {gx__Color} */
				border = app.val.theme.button_border_click;
				/** @type {f64} */
				btn.val.last_click = new f64(time__Time_unix_time_milli(time__now(),));
			}
		} else {
			/** @type {bool} */
			btn.val.is_selected = new bool(new bool(false));
		}
		gg__Context_draw_rounded_rect_filled(app.val.gg.valueOf(),x, y1, width, height, new int(4), bg);
		gg__Context_draw_rounded_rect_empty(app.val.gg.valueOf(),x, y1, width, height, new int(4), border);
		if ((sel.val.center).valueOf()) {
			gg__Context_draw_text(app.val.gg.valueOf(),new int( (new int( x.valueOf() + (new int( width.valueOf() / new int(2).valueOf())).valueOf())).valueOf() - size.valueOf()), new int( new int( y1.valueOf() + (new int( height.valueOf() / new int(2).valueOf())).valueOf()).valueOf() - sizh.valueOf()), text, (function() {
				let _tmp127 = new gx__TextCfg({});
				_tmp127.size = app.val.font_size;
				_tmp127.color = app.val.theme.text_color;
				return _tmp127;
			})()
			);
		} else {
			gg__Context_draw_text(app.val.gg.valueOf(),new int( x.valueOf() + new int(8).valueOf()), new int( new int( y1.valueOf() + (new int( height.valueOf() / new int(2).valueOf())).valueOf()).valueOf() - sizh.valueOf()), text, (function() {
				let _tmp128 = new gx__TextCfg({});
				_tmp128.size = app.val.font_size;
				_tmp128.color = app.val.theme.text_color;
				return _tmp128;
			})()
			);
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace iui */
/**
 * @constructor
 * @param {{win?: iui__Window, text?: string, min?: f32, cur?: f32, max?: f32, flip?: bool, dir?: iui__Direction, last_s?: int, hide?: bool, scroll?: bool}} init
*/
function iui__Slider({ win = new iui__Window({}), text = new string(""), min = new f32(0), cur = new f32(0), max = new f32(0), flip = new bool(false), dir = undefined, last_s = new int(0), hide = new bool(false), scroll = new bool(false) }) {
	this.win = win
	this.text = text
	this.min = min
	this.cur = cur
	this.max = max
	this.flip = flip
	this.dir = dir
	this.last_s = last_s
	this.hide = hide
	this.scroll = scroll
};
iui__Slider.prototype = {
	...iui__Component_A.prototype,
	toString() {
		return `iui__Slider { win: ${this["win"].toString()} , text: "${this["text"].toString()}", min: ${this["min"].toString()} , cur: ${this["cur"].toString()} , max: ${this["max"].toString()} , flip: ${this["flip"].toString()} , dir: ${this["dir"].toString()} , last_s: ${this["last_s"].toString()} , hide: ${this["hide"].toString()} , scroll: ${this["scroll"].toString()} }`
	},
	/** @type {iui__Window} */
	win: new iui__Window({}),
	/** @type {string} */
	text: new string(""),
	/** @type {f32} */
	min: new f32(0),
	/** @type {f32} */
	cur: new f32(0),
	/** @type {f32} */
	max: new f32(0),
	/** @type {bool} */
	flip: new bool(false),
	/** @type {iui__Direction} */
	dir: undefined,
	/** @type {int} */
	last_s: new int(0),
	/** @type {bool} */
	hide: new bool(false),
	/** @type {bool} */
	scroll: new bool(false),
	$toJS() { return this; }
	};

/** @enum {number} */
const iui__Direction = {
	hor: 0,
	vert: 1,
};

/**
 * @function
 * @param {iui__Window} win
 * @param {f32} min
 * @param {f32} max
 * @param {iui__Direction} dir
 * @returns {iui__Slider}
*/
function iui__slider(win, min, max, dir) {
win = new $ref(win)
	try {
		/** @type {iui__Slider} */
		let slid = new $ref((function() {
			let _tmp129 = new iui__Slider({});
			_tmp129.win = win;
			_tmp129.text = new string("TEST");
			_tmp129.min = min;
			_tmp129.max = max;
			_tmp129.dir = dir;
			_tmp129.scroll = new bool(true);
			return _tmp129;
		})()
		);
		return slid;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Slider} _v_this
 * @returns {void}
*/
function iui__test(_v_this) {
_v_this = new $ref(_v_this)
	try {
		while (+new bool(true)) {
			try { 
				if ((_v_this.val.flip).valueOf()) {
					/** @type {f32} */
					_v_this.val.cur.val = Math.floor(_v_this.val.cur - new f32(new int(1)));
				} else {
					/** @type {f32} */
					_v_this.val.cur.val = Math.floor(_v_this.val.cur + new f32(new int(1)));
				}
				if ((new bool(_v_this.val.cur.valueOf() >= _v_this.val.max.valueOf())).valueOf()) {
					/** @type {bool} */
					_v_this.val.flip = new bool(new bool(true));
				}
				if ((new bool(_v_this.val.cur.valueOf() <= _v_this.val.min.valueOf())).valueOf()) {
					/** @type {bool} */
					_v_this.val.flip = new bool(new bool(false));
				}
				time__sleep(new int_literal( BigInt(new int(10).valueOf()) * BigInt(time__millisecond.valueOf())));
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__Slider_draw(_v_this) {
_v_this = new $ref(_v_this)
	try {
		if ((_v_this.val.hide).valueOf()) {
			return;
		}
		if ((_v_this.val.is_mouse_down).valueOf()) {
			if ((new bool(_v_this.val.dir.valueOf() == iui__Direction.hor.valueOf())).valueOf()) {
				/** @type {f64} */
				let cx = new f64(math__clamp(new int( _v_this.val.win.val.mouse_x.valueOf() - _v_this.val.x.valueOf()), new int(0), _v_this.val.width));
				/** @type {f64} */
				let perr = new f64(new f64( cx.valueOf() / _v_this.val.width.valueOf()));
				/** @type {f64} */
				perr = new f64(new f64( perr.valueOf() * _v_this.val.max.valueOf()));
				/** @type {f32} */
				_v_this.val.cur = new f32(new f32(perr));
			} else {
				/** @type {f64} */
				let cx = new f64(math__clamp(new int( _v_this.val.win.val.mouse_y.valueOf() - _v_this.val.y.valueOf()), new int(0), _v_this.val.height));
				/** @type {f64} */
				let perr = new f64(new f64( cx.valueOf() / _v_this.val.height.valueOf()));
				/** @type {f64} */
				perr = new f64(new f64( perr.valueOf() * _v_this.val.max.valueOf()));
				/** @type {f32} */
				_v_this.val.cur = new f32(new f32(perr));
			}
		}
		if ((_v_this.val.is_mouse_rele).valueOf()) {
			/** @type {bool} */
			_v_this.val.is_mouse_down = new bool(new bool(false));
			/** @type {bool} */
			_v_this.val.is_mouse_rele = new bool(new bool(false));
		}
		if ((new bool( new bool( new bool(_v_this.val.last_s.valueOf() != _v_this.val.scroll_i.valueOf()).valueOf() && new bool(_v_this.val.dir.valueOf() == iui__Direction.vert.valueOf()).valueOf()).valueOf() && _v_this.val.scroll.valueOf())).valueOf()) {
			/** @type {bool} */
			let pos = new bool(new bool(_v_this.val.scroll_i.valueOf() > _v_this.val.last_s.valueOf()));
			/** @type {int} */
			let diff = new int(new int( iui__abs_T_int(new int( _v_this.val.scroll_i.valueOf() - _v_this.val.last_s.valueOf())).valueOf() + new int(1).valueOf()));
			if ((pos).valueOf()) {
				/** @type {f32} */
				_v_this.val.cur.val = Math.floor(_v_this.val.cur + new f32(diff));
			} else {
				/** @type {f32} */
				_v_this.val.cur.val = Math.floor(_v_this.val.cur - new f32(diff));
			}
			/** @type {f32} */
			_v_this.val.cur = new f32(new f32(math__clamp(_v_this.val.cur, _v_this.val.min, _v_this.val.max)));
			/** @type {int} */
			_v_this.val.last_s = new int(_v_this.val.scroll_i);
		}
		/** @type {f32} */
		let per = new f32(new f32( _v_this.val.cur.valueOf() / _v_this.val.max.valueOf()));
		if ((new bool(_v_this.val.dir.valueOf() == iui__Direction.hor.valueOf())).valueOf()) {
			/** @type {f32} */
			let wid = new f32((new f32( _v_this.val.width.valueOf() * per.valueOf())));
			/** @type {f32} */
			wid.val = Math.floor(wid - new f32(new f32( per.valueOf() * new int(20).valueOf())));
			iui__Window_draw_filled_rect(_v_this.val.win.valueOf(),_v_this.val.x, _v_this.val.y, _v_this.val.width, _v_this.val.height, new int(1), _v_this.val.win.val.theme.scroll_track_color, _v_this.val.win.val.theme.button_border_normal);
			gg__Context_draw_rect_filled(_v_this.val.win.val.gg.valueOf(),new f32( _v_this.val.x.valueOf() + wid.valueOf()), _v_this.val.y, new int(20), _v_this.val.height, _v_this.val.win.val.theme.scroll_bar_color);
			gg__Context_draw_rect_empty(_v_this.val.win.val.gg.valueOf(),_v_this.val.x, _v_this.val.y, _v_this.val.width, _v_this.val.height, _v_this.val.win.val.theme.button_border_normal);
		} else {
			/** @type {f32} */
			let wid = new f32((new f32( _v_this.val.height.valueOf() * per.valueOf())));
			/** @type {f32} */
			wid.val = Math.floor(wid - new f32(new f32( per.valueOf() * new int(20).valueOf())));
			iui__Window_draw_filled_rect(_v_this.val.win.valueOf(),_v_this.val.x, _v_this.val.y, _v_this.val.width, _v_this.val.height, new int(1), _v_this.val.win.val.theme.scroll_track_color, _v_this.val.win.val.theme.button_border_normal);
			gg__Context_draw_rect_filled(_v_this.val.win.val.gg.valueOf(),_v_this.val.x, new f32( _v_this.val.y.valueOf() + wid.valueOf()), _v_this.val.width, new int(20), _v_this.val.win.val.theme.scroll_bar_color);
			gg__Context_draw_rect_empty(_v_this.val.win.val.gg.valueOf(),_v_this.val.x, _v_this.val.y, _v_this.val.width, _v_this.val.height, _v_this.val.win.val.theme.button_border_normal);
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace iui */
/**
 * @constructor
 * @param {{win?: iui__Window, text?: string, click_event_fn?: anon_fn_iui__window_iui__tabbox, kids?: Map_string_Array_iui__Component, active_tab?: string, closable?: bool}} init
*/
function iui__Tabbox({ win = new iui__Window({}), text = new string(""), click_event_fn = undefined, kids = new map(new Map()), active_tab = new string(""), closable = new bool(true) }) {
	this.win = win
	this.text = text
	this.click_event_fn = click_event_fn
	this.kids = kids
	this.active_tab = active_tab
	this.closable = closable
};
iui__Tabbox.prototype = {
	...iui__Component_A.prototype,
	toString() {
		return `iui__Tabbox { win: ${this["win"].toString()} , text: "${this["text"].toString()}", click_event_fn: ${this["click_event_fn"].toString()} , kids: ${this["kids"].toString()} , active_tab: "${this["active_tab"].toString()}", closable: ${this["closable"].toString()} }`
	},
	/** @type {iui__Window} */
	win: new iui__Window({}),
	/** @type {string} */
	text: new string(""),
	/** @type {anon_fn_iui__window_iui__tabbox} */
	click_event_fn: undefined,
	/** @type {Map_string_Array_iui__Component} */
	kids: new map(new Map()),
	/** @type {string} */
	active_tab: new string(""),
	/** @type {bool} */
	closable: new bool(false),
	$toJS() { return this; }
	};

/**
 * @function
 * @param {iui__Window} win
 * @returns {iui__Tabbox}
*/
function iui__tabbox(win) {
win = new $ref(win)
	try {
		return new $ref((function() {
			let _tmp130 = new iui__Tabbox({});
			_tmp130.win = win;
			_tmp130.text = new string("");
			return _tmp130;
		})()
		);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} old_title
 * @param {string} new_title
 * @returns {void}
*/
function iui__Tabbox_change_title(tb, old_title, new_title) {
tb = new $ref(tb)
	try {
		/** @type {Array_iui__Component} */
		let con = tb.val.kids.get(old_title.$toJS());
		/** @type {Array_iui__Component} */
		tb.val.kids.length++;
		tb.val.kids.map[new_title.$toJS()] = con;
		/** @type {string} */
		tb.val.active_tab = new string(new_title);
		Map_string_Array_iui__Component_delete(tb.val.kids,old_title);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__Tabbox_draw(tb) {
tb = new $ref(tb)
	try {
		/** @type {int} */
		const t_heig = new int(new int(22));
		gg__Context_draw_rounded_rect_empty(tb.val.win.val.gg.valueOf(),tb.val.x, new int( new int( tb.val.y.valueOf() + t_heig.valueOf()).valueOf() - new int(1).valueOf()), tb.val.width, new int( tb.val.height.valueOf() - (new int( t_heig.valueOf() - new int(1).valueOf())).valueOf()), new int(2), tb.val.win.val.theme.button_border_normal);
		/** @type {int} */
		let mx = new int(new int(0));
		let _tmp131 = tb.val.kids;
		for (var _tmp132 in _tmp131.map) {
			let val = _tmp131.map[_tmp132];
			let key_ = _tmp132;
			try { 
				/** @type {string} */
				const key = new string(os__base(key_));
				/** @type {int} */
				let theig = new int(new int(20));
				/** @type {int} */
				let my = new int(new int(2));
				/** @type {int} */
				const size = new int(new int( iui__text_width(tb.val.win, key).valueOf() / new int(2).valueOf()));
				/** @type {int} */
				const sizh = new int(new int( iui__text_height(tb.val.win, key).valueOf() / new int(2).valueOf()));
				if ((new bool(tb.val.active_tab.valueOf() == key_.valueOf())).valueOf()) {
					/** @type {int} */
					theig = new int(new int(22));
					/** @type {int} */
					my = new int(new int(0));
				}
				/** @type {int} */
				let tsize = new int(new int( (new int( size.valueOf() * new int(2).valueOf())).valueOf() + new int(14).valueOf()));
				if ((tb.val.closable).valueOf()) {
					/** @type {int} */
					tsize.val = Math.floor(tsize + new int(new int(16)));
				}
				iui__Window_draw_bordered_rect(tb.val.win.valueOf(),new int( tb.val.x.valueOf() + mx.valueOf()), new int( tb.val.y.valueOf() + my.valueOf()), tsize, theig, new int(2), tb.val.win.val.theme.button_bg_normal, tb.val.win.val.theme.button_border_normal);
				gg__Context_draw_text(tb.val.win.val.gg.valueOf(),new int( (new int( tb.val.x.valueOf() + mx.valueOf())).valueOf() + new int(3).valueOf()), new int( new int( new int( tb.val.y.valueOf() + my.valueOf()).valueOf() + (new int( theig.valueOf() / new int(2).valueOf())).valueOf()).valueOf() - sizh.valueOf()), new string( new string(" ").valueOf() + key.valueOf()), (function() {
					let _tmp133 = new gx__TextCfg({});
					_tmp133.size = tb.val.win.val.font_size;
					_tmp133.color = tb.val.win.val.theme.text_color;
					return _tmp133;
				})()
				);
				if ((tb.val.closable).valueOf()) {
					/** @type {int} */
					const c_s = new int(iui__text_width(tb.val.win, new string("x")));
					/** @type {int} */
					const csy = new int(iui__text_height(tb.val.win, new string("x")));
					/** @type {int} */
					const c_x = new int(new int( new int( (new int( new int( tb.val.x.valueOf() + mx.valueOf()).valueOf() + tsize.valueOf())).valueOf() - c_s.valueOf()).valueOf() - new int(4).valueOf()));
					/** @type {int} */
					const c_y = new int(new int( new int( new int( tb.val.y.valueOf() + my.valueOf()).valueOf() + (new int( theig.valueOf() / new int(2).valueOf())).valueOf()).valueOf() - sizh.valueOf()));
					gg__Context_draw_text(tb.val.win.val.gg.valueOf(),c_x, c_y, new string("x"), (function() {
						let _tmp134 = new gx__TextCfg({});
						_tmp134.size = tb.val.win.val.font_size;
						_tmp134.color = tb.val.win.val.theme.text_color;
						return _tmp134;
					})()
					);
					/** @type {int} */
					let mid = new int(new int( c_x.valueOf() + (new int( c_s.valueOf() / new int(2).valueOf())).valueOf()));
					/** @type {int} */
					let midy = new int(new int( c_y.valueOf() + (new int( csy.valueOf() / new int(2).valueOf())).valueOf()));
					if ((new bool( new bool( (new bool(iui__abs_T_int(new int( mid.valueOf() - tb.val.win.val.click_x.valueOf())).valueOf() < c_s.valueOf())).valueOf() && (new bool(iui__abs_T_int(new int( midy.valueOf() - tb.val.win.val.click_y.valueOf())).valueOf() < csy.valueOf())).valueOf()).valueOf() && tb.val.is_mouse_rele.valueOf())).valueOf()) {
						/** @type {bool} */
						tb.val.is_mouse_rele = new bool(new bool(false));
						Map_string_Array_iui__Component_delete(tb.val.kids,key_);
						return;
					}
				}
				/** @type {int} */
				let mid = new int((new int( new int( tb.val.x.valueOf() + mx.valueOf()).valueOf() + (new int( tsize.valueOf() / new int(2).valueOf())).valueOf())));
				/** @type {int} */
				let midy = new int((new int( tb.val.y.valueOf() + (new int( theig.valueOf() / new int(2).valueOf())).valueOf())));
				if ((new bool( (new bool(iui__abs_T_int(new int( mid.valueOf() - tb.val.win.val.click_x.valueOf())).valueOf() < (new int( tsize.valueOf() / new int(2).valueOf())).valueOf())).valueOf() && (new bool(iui__abs_T_int(new int( midy.valueOf() - tb.val.win.val.click_y.valueOf())).valueOf() < (new int( theig.valueOf() / new int(2).valueOf())).valueOf())).valueOf())).valueOf()) {
					/** @type {string} */
					tb.val.active_tab = new string(key_);
				}
				/** @type {int} */
				mx.val = Math.floor(mx + new int(tsize));
				if ((new bool(tb.val.active_tab.valueOf() == key_.valueOf())).valueOf()) {
v_sort(val.valueOf(),compare_iui__Component_by_z_index);
					for (const com of val.valueOf()) {
						try { 
							iui__Component_draw_event_fn(com.valueOf(),tb.val.win, new $ref(com));
							iui__draw_with_offset(com, tb.val.x, new int( tb.val.y.valueOf() + theig.valueOf()));
							iui__Component_after_draw_event_fn(com.valueOf(),tb.val.win, new $ref(com));
						} catch (e) {
						 if (e instanceof BreakException) { break; }
						 else if (e instanceof ContinueException) { continue; }
						 else { throw e; } }
					}
					
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } } 
		}
		
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} tab
 * @param {iui__Component} c
 * @returns {void}
*/
function iui__Tabbox_add_child(tb, tab, c) {
tb = new $ref(tb)
	try {
		if ((new bool(tb.val.active_tab.valueOf() == new string("").valueOf())).valueOf()) {
			/** @type {string} */
			tb.val.active_tab = new string(tab);
		}
		array_push(tb.val.kids.getOrSet(tab.$toJS(), empty_array()),c,false);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace iui */
/**
 * @constructor
 * @param {{win?: iui__Window, contents?: Array_Array_iui__Component}} init
*/
function iui__Table({ win = new iui__Window({}), contents = empty_array() }) {
	this.win = win
	this.contents = contents
};
iui__Table.prototype = {
	...iui__Component_A.prototype,
	toString() {
		return `iui__Table { win: ${this["win"].toString()} , contents: ${this["contents"].toString()} }`
	},
	/** @type {iui__Window} */
	win: new iui__Window({}),
	/** @type {Array_Array_iui__Component} */
	contents: empty_array(),
	$toJS() { return this; }
	};

/**
 * @function
 * @param {iui__Window} win
 * @param {int} w
 * @param {int} h
 * @returns {iui__Table}
*/
function iui__table(win, w, h) {
win = new $ref(win)
	try {
		return new $ref((function() {
			let _tmp135 = new iui__Table({});
			_tmp135.win = win;
			_tmp135.contents = new array(new array_buffer({arr: (function(length) {
					const _tmp136 = [];
					for (let it = 0; it < length; it++) {
						_tmp136.push(new array(new array_buffer({arr: (function(length) {
								const _tmp137 = [];
								for (let it = 0; it < length; it++) {
									_tmp137.push(new iui__Component(new iui__Component_A({})));
								};
								return _tmp137;
							})(h),len: new int(h), cap: new int(h)})));
					};
					return _tmp136;
				})(w),len: new int(w), cap: new int(w)}));
			return _tmp135;
		})()
		);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} x
 * @param {int} y
 * @param {iui__Component} content
 * @returns {void}
*/
function iui__Table_set_content(_v_this, x, y, content) {
_v_this = new $ref(_v_this)
	try {
		/** @type {iui__Component} */
		_v_this.val.contents.arr.get(new int(x.valueOf())).arr.set(new int(y.valueOf()),content);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__Table_draw(_v_this) {
_v_this = new $ref(_v_this)
	try {
		/** @type {int} */
		let x = new int(_v_this.val.x);
		/** @type {int} */
		let y = new int(_v_this.val.y);
		for (const row of _v_this.val.contents) {
			try { 
				for (const col of row.valueOf()) {
					try { 
						iui__draw_with_offset(col, x, y);
						/** @type {int} */
						y.val = Math.floor(y + new int(new int(25)));
					} catch (e) {
					 if (e instanceof BreakException) { break; }
					 else if (e instanceof ContinueException) { continue; }
					 else { throw e; } }
				}
				
				gg__Context_draw_rect_empty(_v_this.val.win.val.gg.valueOf(),x, y, new int(25), new int(25), _v_this.val.win.val.theme.text_color);
				/** @type {int} */
				y = new int(new int(0));
				/** @type {int} */
				x.val = Math.floor(x + new int(new int(25)));
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace iui */
/**
 * @constructor
 * @param {{win?: iui__Window, lines?: Array_string, caret_left?: int, caret_top?: int, padding_x?: int, ml_comment?: bool, last_letter?: string, click_event_fn?: anon_fn_voidptr_voidptr, before_txtc_event_fn?: anon_fn_iui__window_iui__textarea__bool, text_change_event_fn?: anon_fn_voidptr_voidptr, line_draw_event_fn?: anon_fn_voidptr_int_int_int}} init
*/
function iui__TextArea({ win = new iui__Window({}), lines = empty_array(), caret_left = new int(0), caret_top = new int(0), padding_x = new int(0), ml_comment = new bool(false), last_letter = new string(""), click_event_fn = undefined, before_txtc_event_fn = undefined, text_change_event_fn = undefined, line_draw_event_fn = undefined }) {
	this.win = win
	this.lines = lines
	this.caret_left = caret_left
	this.caret_top = caret_top
	this.padding_x = padding_x
	this.ml_comment = ml_comment
	this.last_letter = last_letter
	this.click_event_fn = click_event_fn
	this.before_txtc_event_fn = before_txtc_event_fn
	this.text_change_event_fn = text_change_event_fn
	this.line_draw_event_fn = line_draw_event_fn
};
iui__TextArea.prototype = {
	...iui__Component_A.prototype,
	toString() {
		return `iui__TextArea { win: ${this["win"].toString()} , lines: ${this["lines"].toString()} , caret_left: ${this["caret_left"].toString()} , caret_top: ${this["caret_top"].toString()} , padding_x: ${this["padding_x"].toString()} , ml_comment: ${this["ml_comment"].toString()} , last_letter: "${this["last_letter"].toString()}", click_event_fn: ${this["click_event_fn"].toString()} , before_txtc_event_fn: ${this["before_txtc_event_fn"].toString()} , text_change_event_fn: ${this["text_change_event_fn"].toString()} , line_draw_event_fn: ${this["line_draw_event_fn"].toString()} }`
	},
	/** @type {iui__Window} */
	win: new iui__Window({}),
	/** @type {Array_string} */
	lines: empty_array(),
	/** @type {int} */
	caret_left: new int(0),
	/** @type {int} */
	caret_top: new int(0),
	/** @type {int} */
	padding_x: new int(0),
	/** @type {bool} */
	ml_comment: new bool(false),
	/** @type {string} */
	last_letter: new string(""),
	/** @type {anon_fn_voidptr_voidptr} */
	click_event_fn: undefined,
	/** @type {anon_fn_iui__window_iui__textarea__bool} */
	before_txtc_event_fn: undefined,
	/** @type {anon_fn_voidptr_voidptr} */
	text_change_event_fn: undefined,
	/** @type {anon_fn_voidptr_int_int_int} */
	line_draw_event_fn: undefined,
	$toJS() { return this; }
	};

/**
 * @function
 * @param {iui__Window} win
 * @param {Array_string} lines
 * @returns {iui__TextArea}
*/
function iui__textarea(win, lines) {
win = new $ref(win)
	try {
		return new $ref((function() {
			let _tmp138 = new iui__TextArea({});
			_tmp138.win = win;
			_tmp138.lines = lines;
			_tmp138.padding_x = new int(4);
			_tmp138.click_event_fn = (function () { 
			return function (a, b) {
			}})()
			;
			_tmp138.before_txtc_event_fn = (function () { 
			return function (a, b) {
				a = new $ref(a)
				return new bool(false);
			}})()
			;
			_tmp138.text_change_event_fn = (function () { 
			return function (a, b) {
			}})()
			;
			_tmp138.line_draw_event_fn = (function () { 
			return function (a, b, c, d) {
			}})()
			;
			return _tmp138;
		})()
		);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__TextArea_delete_current_line(_v_this) {
_v_this = new $ref(_v_this)
	try {
		array_delete(_v_this.val.lines,_v_this.val.caret_top);
		/** @type {int} */
		_v_this.val.caret_top.val = Math.floor(_v_this.val.caret_top - new int(new int(1)));
		/** @type {int} */
		_v_this.val.caret_left = new int(_v_this.val.lines.arr.get(new int(_v_this.val.caret_top.valueOf())).len);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @constant {Array_string} */
let iui__keys = undefined;

/** @constant {Array_string} */
let iui__numbers = undefined;

/** @constant {Array_string} */
let iui__blue_keys = undefined;

/**
 * @function
 * @returns {void}
*/
function iui__TextArea_draw_background(_v_this) {
_v_this = new $ref(_v_this)
	try {
		/** @type {gx__Color} */
		let bg = _v_this.val.win.val.theme.textbox_background;
		/** @type {gx__Color} */
		let border = _v_this.val.win.val.theme.textbox_border;
		/** @type {int} */
		const mid = new int(new int( _v_this.val.x.valueOf() + (new int( _v_this.val.width.valueOf() / new int(2).valueOf())).valueOf()));
		/** @type {int} */
		const midy = new int(new int( _v_this.val.y.valueOf() + (new int( _v_this.val.height.valueOf() / new int(2).valueOf())).valueOf()));
		if ((_v_this.val.is_mouse_rele).valueOf()) {
			if ((!_v_this.val.is_selected.val ).valueOf()) {
				/** @type {gx__Color} */
				bg = _v_this.val.win.val.theme.button_bg_click;
				/** @type {gx__Color} */
				border = _v_this.val.win.val.theme.button_border_click;
			}
			/** @type {bool} */
			_v_this.val.is_selected = new bool(new bool(true));
			iui__TextArea_click_event_fn(_v_this.valueOf(),_v_this.val.win, _v_this);
			/** @type {bool} */
			_v_this.val.is_mouse_rele = new bool(new bool(false));
		} else {
			if ((new bool( new bool(_v_this.val.win.val.click_x.valueOf() > new int(-1).valueOf()).valueOf() && !(new bool( new bool(iui__abs_T_int(new int( mid.valueOf() - _v_this.val.win.val.mouse_x.valueOf())).valueOf() < (new int( _v_this.val.width.valueOf() / new int(2).valueOf())).valueOf()).valueOf() && new bool(iui__abs_T_int(new int( midy.valueOf() - _v_this.val.win.val.mouse_y.valueOf())).valueOf() < (new int( _v_this.val.height.valueOf() / new int(2).valueOf())).valueOf()).valueOf())).val .valueOf())).valueOf()) {
				/** @type {bool} */
				_v_this.val.is_selected = new bool(new bool(false));
			}
		}
		iui__Window_draw_filled_rect(_v_this.val.win.valueOf(),_v_this.val.x, _v_this.val.y, _v_this.val.width, _v_this.val.height, new int(2), bg, border);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__TextArea_draw(_v_this) {
_v_this = new $ref(_v_this)
	try {
		/** @type {iui__Window} */
		const win = _v_this.val.win;
		iui__TextArea_draw_background(_v_this.valueOf(),);
		/** @type {int} */
		const line_height = new int(iui__text_height(win, new string("A!{}")));
		/** @type {gx__TextCfg} */
		const cfg = (function() {
			let _tmp139 = new gx__TextCfg({});
			_tmp139.color = win.val.theme.text_color;
			return _tmp139;
		})()
		;
		for (let i = _v_this.val.scroll_i; i < _v_this.val.lines.len; i = new int(i + 1)) {
			try { 
				/** @type {string} */
				const line = new string(_v_this.val.lines.arr.get(new int(i.valueOf())));
				/** @type {int} */
				const y_off = new int(new int( line_height.valueOf() * (new int( i.valueOf() - _v_this.val.scroll_i.valueOf())).valueOf()));
				if ((new bool(y_off.valueOf() > _v_this.val.height.valueOf())).valueOf()) {
					/** @type {bool} */
					_v_this.val.ml_comment = new bool(new bool(false));
					return;
				}
				/** @type {Array_string} */
				const matched = iui__make_match(line, iui__keys);
				/** @type {bool} */
				const is_cur_line = new bool(new bool(_v_this.val.caret_top.valueOf() == i.valueOf()));
				iui__TextArea_draw_matched_text(_v_this.valueOf(),_v_this.val.win, new int( _v_this.val.x.valueOf() + _v_this.val.padding_x.valueOf()), new int( _v_this.val.y.valueOf() + y_off.valueOf()), matched, cfg, is_cur_line, i);
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Window} win
 * @param {int} x
 * @param {int} y
 * @param {int} current_len
 * @param {int} llen
 * @param {string} str_fix_tab
 * @returns {void}
*/
function iui__TextArea_draw_caret(_v_this, win, x, y, current_len, llen, str_fix_tab) {
_v_this = new $ref(_v_this)
win = new $ref(win)
	try {
		/** @type {bool} */
		const in_min = new bool(new bool(_v_this.val.caret_left.valueOf() >= current_len.valueOf()));
		/** @type {bool} */
		const in_max = new bool(new bool(_v_this.val.caret_left.valueOf() <= new int( current_len.valueOf() + llen.valueOf()).valueOf()));
		/** @type {bool} */
		const caret_zero = new bool(new bool( new bool(_v_this.val.caret_left.valueOf() == new int(0).valueOf()).valueOf() && new bool(current_len.valueOf() == new int(0).valueOf()).valueOf()));
		if ((new bool( caret_zero.valueOf() || (new bool( in_min.valueOf() && in_max.valueOf())).valueOf())).valueOf()) {
			/** @type {int} */
			const caret_pos = new int(new int( _v_this.val.caret_left.valueOf() - current_len.valueOf()));
			/** @type {string} */
			const pretext = new string(string_slice(str_fix_tab,new int(0), caret_pos));
			/** @type {int} */
			const pipe_wid = new int(iui__text_width(win, new string("|")));
			/** @type {int} */
			const wid = new int(new int( iui__text_width(win, pretext).valueOf() - pipe_wid.valueOf()));
			gg__Context_draw_text(win.val.gg.valueOf(),new int( x.valueOf() + wid.valueOf()), y, new string("|"), (function() {
				let _tmp140 = new gx__TextCfg({});
				_tmp140.color = win.val.theme.text_color;
				_tmp140.size = win.val.font_size;
				return _tmp140;
			})()
			);
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Window} win
 * @param {int} x
 * @param {int} y
 * @param {int} current_len
 * @param {int} llen
 * @param {string} str_fix_tab
 * @param {int} mx
 * @param {int} lw
 * @returns {void}
*/
function iui__TextArea_move_caret(_v_this, win, x, y, current_len, llen, str_fix_tab, mx, lw) {
_v_this = new $ref(_v_this)
win = new $ref(win)
	try {
		/** @type {int} */
		const rx = new int(new int( x.valueOf() - _v_this.val.x.valueOf()));
		if ((new bool( new bool(mx.valueOf() >= rx.valueOf()).valueOf() && new bool(mx.valueOf() < new int( rx.valueOf() + lw.valueOf()).valueOf()).valueOf())).valueOf()) {
			for (let i = new int(0); i < new int( str_fix_tab.len.valueOf() + new int(1).valueOf()); i = new int(i + 1)) {
				try { 
					/** @type {string} */
					const pretext = new string(string_slice(str_fix_tab,new int(0), i));
					/** @type {int} */
					const wid = new int(iui__text_width(win, pretext));
					/** @type {int} */
					const nx = new int(new int( rx.valueOf() + wid.valueOf()));
					if ((new bool(iui__abs_T_int(new int( mx.valueOf() - nx.valueOf())).valueOf() < new int(4).valueOf())).valueOf()) {
						/** @type {int} */
						_v_this.val.caret_left = new int(new int( current_len.valueOf() + i.valueOf()));
					}
				} catch (e) {
				 if (e instanceof BreakException) { break; }
				 else if (e instanceof ContinueException) { continue; }
				 else { throw e; } }
			}
			
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Window} win
 * @param {int} x
 * @param {int} y
 * @param {Array_string} text
 * @param {gx__TextCfg} cfg
 * @param {bool} is_cur_line
 * @param {int} line
 * @returns {void}
*/
function iui__TextArea_draw_matched_text(_v_this, win, x, y, text, cfg, is_cur_line, line) {
_v_this = new $ref(_v_this)
win = new $ref(win)
	try {
		/** @type {int} */
		let x_off = new int(new int(0));
		/** @type {gx__Color} */
		let color = cfg.color;
		/** @type {bool} */
		let comment = new bool(new bool(false));
		/** @type {bool} */
		let is_str = new bool(new bool(false));
		/** @type {int} */
		let current_len = new int(new int(0));
		for (const str of text) {
			try { 
				/** @type {string} */
				const tab_size = new string(string_repeat(new string(" "),new int(8)));
				/** @type {string} */
				const str_fix_tab = new string(string_replace(str,new string("\t"), tab_size));
				/** @type {int} */
				const llen = new int(((new bool(str.valueOf() == new string("\t").valueOf())).valueOf() ? new int(0) : str.len));
				if ((is_cur_line).valueOf()) {
					iui__TextArea_draw_caret(_v_this.valueOf(),win, new int( x.valueOf() + x_off.valueOf()), y, current_len, llen, str_fix_tab);
				}
				/** @type {gx__Color} */
				color = cfg.color;
				if ((new bool(str.valueOf() == new string("'").valueOf())).valueOf()) {
					/** @type {bool} */
					is_str = new bool(!is_str.val );
					/** @type {gx__Color} */
					color = gx__rgb(new int(220), new int(0), new int(220));
				}
				if ((is_str).valueOf()) {
					/** @type {gx__Color} */
					color = gx__rgb(new int(220), new int(0), new int(220));
				}
				if (((Array_string_contains(iui__numbers,str))).valueOf()) {
					/** @type {gx__Color} */
					color = gx__orange;
				}
				if (((Array_string_contains(iui__blue_keys,str))).valueOf()) {
					/** @type {gx__Color} */
					color = gx__rgb(new int(0), new int(100), new int(200));
				}
				if ((new bool( new bool(str.valueOf() == new string("/*").valueOf()).valueOf() && !is_str.val .valueOf())).valueOf()) {
					/** @type {bool} */
					_v_this.val.ml_comment = new bool(new bool(true));
				}
				if ((new bool( new bool( new bool(str.valueOf() == new string("// ").valueOf()).valueOf() || comment.valueOf()).valueOf() || _v_this.val.ml_comment.valueOf())).valueOf()) {
					/** @type {gx__Color} */
					color = gx__rgb(new int(0), new int(200), new int(0));
					/** @type {bool} */
					comment = new bool(new bool(true));
				}
				if ((new bool(str.valueOf() == new string("*/").valueOf())).valueOf()) {
					/** @type {bool} */
					_v_this.val.ml_comment = new bool(new bool(false));
				}
				/** @type {gx__TextCfg} */
				const conf = (function() {
					let _tmp141 = new gx__TextCfg({});
					_tmp141.color = color;
					_tmp141.size = win.val.font_size;
					return _tmp141;
				})()
				;
				/** @type {int} */
				const wid = new int(iui__text_width(win, str_fix_tab));
				gg__Context_draw_text(win.val.gg.valueOf(),new int( x.valueOf() + x_off.valueOf()), y, str_fix_tab, conf);
				if ((_v_this.val.is_mouse_down).valueOf()) {
					/** @type {int} */
					const mx = new int(new int( win.val.mouse_x.valueOf() - _v_this.val.x.valueOf()));
					/** @type {int} */
					const my = new int(new int( win.val.mouse_y.valueOf() - _v_this.val.y.valueOf()));
					/** @type {int} */
					const line_height = new int(iui__text_height(win, new string("A!{}")));
					/** @type {int} */
					const my_lh = new int(new int( my.valueOf() / line_height.valueOf()));
					/** @type {int} */
					_v_this.val.caret_top = new int(new int( my_lh.valueOf() + _v_this.val.scroll_i.valueOf()));
					if ((new bool(line.valueOf() == _v_this.val.caret_top.valueOf())).valueOf()) {
						iui__TextArea_move_caret(_v_this.valueOf(),win, new int( x.valueOf() + x_off.valueOf()), y, current_len, llen, str_fix_tab, mx, wid);
					}
				}
				/** @type {int} */
				x_off.val = Math.floor(x_off + new int(wid));
				/** @type {int} */
				current_len.val = Math.floor(current_len + new int(str.len));
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace iui */
/**
 * @function
 * @param {gg__KeyCode} key
 * @param {gg__Event} ev
 * @param {iui__TextArea} com
 * @returns {void}
*/
function iui__Window_textarea_key_down(win, key, ev, com) {
win = new $ref(win)
ev = new $ref(ev)
com = new $ref(com)
	try {
		if ((!com.val.is_selected.val ).valueOf()) {
			return;
		}
		if ((new bool(key.valueOf() == gg__KeyCode.right.valueOf())).valueOf()) {
			/** @type {int} */
			com.val.caret_left.val = Math.floor(com.val.caret_left + new int(new int(1)));
		} else if ((new bool(key.valueOf() == gg__KeyCode.left.valueOf())).valueOf()) {
			/** @type {int} */
			com.val.caret_left.val = Math.floor(com.val.caret_left - new int(new int(1)));
		} else if ((new bool(key.valueOf() == gg__KeyCode.up.valueOf())).valueOf()) {
			/** @type {int} */
			com.val.caret_top.val = Math.floor(com.val.caret_top - new int(new int(1)));
		} else if ((new bool(key.valueOf() == gg__KeyCode.down.valueOf())).valueOf()) {
			/** @type {int} */
			com.val.caret_top.val = Math.floor(com.val.caret_top + new int(new int(1)));
		} else {
			/** @type {u32} */
			const mod = new u32(ev.val.modifiers);
			if ((new bool(mod.valueOf() == new int(8).valueOf())).valueOf()) {
				return;
			}
			if ((new bool(mod.valueOf() == new int(2).valueOf())).valueOf()) {
			}
			if ((new bool(key.valueOf() == gg__KeyCode.backspace.valueOf())).valueOf()) {
				/** @type {string} */
				const line = new string(com.val.lines.arr.get(new int(com.val.caret_top.valueOf())));
				/** @type {string} */
				com.val.last_letter = new string(new string("backspace"));
				/** @type {bool} */
				let bevnt = new bool(iui__TextArea_before_txtc_event_fn(com.valueOf(),win, (com).valueOf()));
				if ((bevnt).valueOf()) {
					return;
				}
				if ((new bool( new bool(com.val.caret_left.valueOf() == new int(0).valueOf()).valueOf() && new bool(com.val.caret_top.valueOf() == new int(0).valueOf()).valueOf())).valueOf()) {
					return;
				}
				if ((new bool(new int( com.val.caret_left.valueOf() - new int(1).valueOf()).valueOf() >= new int(0).valueOf())).valueOf()) {
					/** @type {string} */
					const new_line = new string(new string( string_substr(line,new int(0), new int( com.val.caret_left.valueOf() - new int(1).valueOf())).valueOf() + string_substr(line,com.val.caret_left, line.len).valueOf()));
					/** @type {string} */
					com.val.lines.arr.set(new int(com.val.caret_top.valueOf()),new string(new_line));
					/** @type {int} */
					com.val.caret_left.val = Math.floor(com.val.caret_left - new int(new int(1)));
				} else {
					/** @type {string} */
					const line_text = new string(line);
					iui__TextArea_delete_current_line(com.valueOf(),);
					/** @type {string} */
					com.val.lines.arr.set(new int(com.val.caret_top.valueOf()),new string(new string( com.val.lines.arr.get(new int(com.val.caret_top.valueOf())).valueOf() + line_text.valueOf())));
				}
			} else {
				/** @type {string} */
				let strr = new string(gg__KeyCode_str(key));
				if ((new bool(key.valueOf() == gg__KeyCode.space.valueOf())).valueOf()) {
					/** @type {string} */
					strr = new string(new string(" "));
				}
				if ((new bool(key.valueOf() == gg__KeyCode.enter.valueOf())).valueOf()) {
					/** @type {string} */
					strr = new string(new string("\n"));
				}
				/** @type {u32} */
				const kc = new u32(new u32(new gg__KeyCode(ev.val.key_code)));
				/** @type {string} */
				let letter = new string(gg__KeyCode_str(ev.val.key_code));
				/** @type {string} */
				let res = new string(utf32_to_str(kc));
				if ((new bool( new bool(letter.valueOf() == new string("left_shift").valueOf()).valueOf() || new bool(letter.valueOf() == new string("right_shift").valueOf()).valueOf())).valueOf()) {
					/** @type {string} */
					letter = new string(new string(""));
					/** @type {bool} */
					win.val.shift_pressed = new bool(new bool(true));
					return;
				}
				if ((string_starts_with(letter,new string("_"))).valueOf()) {
					/** @type {string} */
					letter = new string(string_replace(letter,new string("_"), new string("")));
					/** @type {Array_string} */
					const nums = new array(new array_buffer({arr: [new string(new string(")")), new string(new string("!")), new string(new string("@")), new string(new string("#")), new string(new string("$")), new string(new string("%")), new string(new string("^")), new string(new string("&")), new string(new string("*")), new string(new string("("))], len: new int(10), cap: new int(10)}));
					if ((new bool( win.val.shift_pressed.valueOf() && new bool(letter.len.valueOf() > new int(0).valueOf()).valueOf())).valueOf()) {
						/** @type {string} */
						letter = new string(nums.arr.get(new int(string_u32(letter,).valueOf())));
					}
				}
				if ((win.val.shift_pressed).valueOf()) {
					/** @type {string} */
					letter = new string(iui__get_shifted_letter(letter));
				}
				/** @type {string} */
				com.val.last_letter = new string(letter);
				if ((new bool(letter.len.valueOf() > new int(1).valueOf())).valueOf()) {
					if ((new bool(letter.valueOf() == new string("tab").valueOf())).valueOf()) {
						/** @type {string} */
						letter = new string(new string("\t"));
					} else {
						/** @type {string} */
						letter = new string(res);
					}
				}
				if ((new bool(strr.valueOf() != new string("\n").valueOf())).valueOf()) {
					/** @type {string} */
					strr = new string(letter);
				}
				/** @type {bool} */
				let bevnt = new bool(iui__TextArea_before_txtc_event_fn(com.valueOf(),win, (com).valueOf()));
				if ((bevnt).valueOf()) {
					return;
				}
				if ((new bool( new bool(key.valueOf() != gg__KeyCode.enter.valueOf()).valueOf() && new bool(mod.valueOf() != new int(2).valueOf()).valueOf())).valueOf()) {
					if ((new bool(com.val.lines.len.valueOf() == new int(0).valueOf())).valueOf()) {
						array_push(com.val.lines,new string(" "),false);
						/** @type {int} */
						com.val.caret_top = new int(new int(0));
					}
					/** @type {string} */
					const line = new string(com.val.lines.arr.get(new int(com.val.caret_top.valueOf())));
					/** @type {string} */
					const new_line = new string(new string( new string( string_substr_ni(line,new int(0), com.val.caret_left).valueOf() + strr.valueOf()).valueOf() + string_substr_ni(line,com.val.caret_left, line.len).valueOf()));
					/** @type {string} */
					com.val.lines.arr.set(new int(com.val.caret_top.valueOf()),new string(new_line));
				}
				/** @type {string} */
				com.val.last_letter = new string(letter);
				iui__TextArea_text_change_event_fn(com.valueOf(),win, com);
				if ((new bool(key.valueOf() == gg__KeyCode.enter.valueOf())).valueOf()) {
					/** @type {string} */
					const current_line = new string(com.val.lines.arr.get(new int(com.val.caret_top.valueOf())));
					if ((new bool(com.val.caret_left.valueOf() == current_line.len.valueOf())).valueOf()) {
						/** @type {int} */
						com.val.caret_top.val = Math.floor(com.val.caret_top + new int(new int(1)));
						array_insert(com.val.lines,com.val.caret_top,new string(""));
						if ((string_starts_with(current_line,new string("\t"))).valueOf()) {
							/** @type {string} */
							com.val.lines.arr.set(new int(com.val.caret_top.valueOf()),new string(new string("\t")));
						}
					} else {
						/** @type {string} */
						const keep_line = new string(string_substr(current_line,new int(0), com.val.caret_left));
						/** @type {string} */
						const new_line = new string(string_substr_ni(current_line,com.val.caret_left, current_line.len));
						/** @type {string} */
						com.val.lines.arr.set(new int(com.val.caret_top.valueOf()),new string(keep_line));
						/** @type {int} */
						com.val.caret_top.val = Math.floor(com.val.caret_top + new int(new int(1)));
						array_insert(com.val.lines,com.val.caret_top,new string(""));
						/** @type {string} */
						com.val.lines.arr.set(new int(com.val.caret_top.valueOf()),new string(new_line));
						/** @type {int} */
						com.val.caret_left = new int(new int(0));
					}
				} else if ((new bool(mod.valueOf() != new int(2).valueOf())).valueOf()) {
					/** @type {int} */
					com.val.caret_left.val = Math.floor(com.val.caret_left + new int(new int(1)));
				}
			}
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} letter
 * @returns {string}
*/
function iui__get_shifted_letter_1(letter) {
	try {
		/** @type {Map_string_string} */
		const shift_keys = new map(
			{
				[new string("minus").$toJS()]: new string("_"),
				[new string("left_bracket").$toJS()]: new string("{"),
				[new string("right_bracket").$toJS()]: new string("}"),
				[new string("equal").$toJS()]: new string("+"),
				[new string("apostrophe").$toJS()]: new string("\""),
				[new string("comma").$toJS()]: new string(">"),
				[new string("period").$toJS()]: new string(">"),
				[new string("slash").$toJS()]: new string("?"),
				[new string("semicolon").$toJS()]: new string(":"),
				[new string("backslash").$toJS()]: new string("|"),
				[new string("grave_accent").$toJS()]: new string("~")
			});
		if ((shift_keys.has(letter.$toJS())).valueOf()) {
			return shift_keys.get(letter.$toJS());
		}
		return string_to_upper(letter,);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace iui */
/**
 * @constructor
 * @param {{start?: int, end?: int}} init
*/
function iui__Group({ start = new int(-1), end = new int(-1) }) {
	this.start = start
	this.end = end
};
iui__Group.prototype = {
	toString() {
		return `iui__Group { start: ${this["start"].toString()} , end: ${this["end"].toString()} }`
	},
	/** @type {int} */
	start: new int(0),
	/** @type {int} */
	end: new int(0),
	$toJS() { return this; }
	};

/**
 * @function
 * @param {string} in_col
 * @param {Array_string} keys
 * @returns {Array_string}
*/
function iui__make_match(in_col, keys) {
	try {
		/** @type {Array_iui__Group} */
		let groups = new array(new array_buffer({arr: [], len: new int(0), cap: new int(0)}));
		/** @type {int} */
		let indx = new int(new int(0));
		while (+new bool(indx.valueOf() != new int(-1).valueOf())) {
			try { 
				let [indxx, keyy] = iui__get_nearest_match(keys, in_col, indx);
				/** @type {iui__Group} */
				const group = (function() {
					let _tmp142 = new iui__Group({});
					_tmp142.start = indxx;
					_tmp142.end = new int( indxx.valueOf() + keyy.len.valueOf());
					return _tmp142;
				})()
				;
				/** @type {int} */
				indx = new int(new int( indxx.valueOf() + keyy.len.valueOf()));
				if ((new bool( new bool(group.start.valueOf() > new int(-1).valueOf()).valueOf() && new bool(group.end.valueOf() > new int(-1).valueOf()).valueOf())).valueOf()) {
					array_push(groups,group,false);
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		return iui__make_group(in_col, groups);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {Array_string} keys
 * @param {string} input
 * @param {int} start
 * @returns {multi_return_int_string}
*/
function iui__get_nearest_match(keys, input, start) {
	try {
		/** @type {int} */
		let low_indx = new int(input.len);
		/** @type {string} */
		let low_key = new string(new string(""));
		for (const key of keys) {
			try { 
				/** @type {int} */
				const indx = new int(string_index_after(input,key, start));
				if ((new bool(indx.valueOf() != new int(-1).valueOf())).valueOf()) {
					if ((new bool(indx.valueOf() < low_indx.valueOf())).valueOf()) {
						/** @type {int} */
						low_indx = new int(indx);
						/** @type {string} */
						low_key = new string(key);
					}
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		if ((new bool(low_key.valueOf() == new string("").valueOf())).valueOf()) {
			return [new int(-1), new string("")];
		}
		return [low_indx, low_key];
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} input
 * @param {Array_iui__Group} groups
 * @returns {Array_string}
*/
function iui__make_group(input, groups) {
	try {
		/** @type {Array_string} */
		let res = new array(new array_buffer({arr: [], len: new int(0), cap: new int(0)}));
		for (let i = new int(0); i < groups.len; i = new int(i + 1)) {
			try { 
				/** @type {iui__Group} */
				const group = groups.arr.get(new int(i.valueOf()));
				if ((new bool(i.valueOf() == new int(0).valueOf())).valueOf()) {
					array_push(res,string_substr_ni(input,new int(0), group.start),false);
				}
				array_push(res,string_substr_ni(input,group.start, group.end),false);
				if ((new bool(i.valueOf() < new int( groups.len.valueOf() - new int(1).valueOf()).valueOf())).valueOf()) {
					/** @type {iui__Group} */
					const nxt = groups.arr.get(new int(new int_literal( i.valueOf() + new int(1).valueOf()).valueOf()));
					array_push(res,string_substr_ni(input,group.end, nxt.start),false);
				} else {
					array_push(res,string_slice(input,group.end, input.len),false);
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		if ((new bool(res.len.valueOf() == new int(0).valueOf())).valueOf()) {
			return new array(new array_buffer({arr: [new string(input)], len: new int(1), cap: new int(1)}));
		}
		return res;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace iui */
/* [deprecated] */
/**
 * @constructor
 * @param {{app?: iui__Window, text?: string, click_event_fn?: anon_fn_iui__window_iui__textbox, before_txtc_event_fn?: anon_fn_iui__window_iui__textbox__bool, text_change_event_fn?: anon_fn_iui__window_iui__textbox, is_blink?: bool, last_blink?: f64, wrap?: bool, last_fit?: int, code_highlight?: bool, multiline?: bool, ctrl_down?: bool, last_letter?: string, carrot_left_raw?: int, carrot_left?: int, carrot_top?: int, key_down?: bool, padding_x?: int}} init
*/
function iui__Textbox({ app = new iui__Window({}), text = new string(""), click_event_fn = undefined, before_txtc_event_fn = undefined, text_change_event_fn = undefined, is_blink = new bool(false), last_blink = new f64(0), wrap = new bool(true), last_fit = new int(1), code_highlight = new bool(false), multiline = new bool(true), ctrl_down = new bool(false), last_letter = new string(""), carrot_left_raw = new int(0), carrot_left = new int(0), carrot_top = new int(0), key_down = new bool(false), padding_x = new int(0) }) {
	this.app = app
	this.text = text
	this.click_event_fn = click_event_fn
	this.before_txtc_event_fn = before_txtc_event_fn
	this.text_change_event_fn = text_change_event_fn
	this.is_blink = is_blink
	this.last_blink = last_blink
	this.wrap = wrap
	this.last_fit = last_fit
	this.code_highlight = code_highlight
	this.multiline = multiline
	this.ctrl_down = ctrl_down
	this.last_letter = last_letter
	this.carrot_left_raw = carrot_left_raw
	this.carrot_left = carrot_left
	this.carrot_top = carrot_top
	this.key_down = key_down
	this.padding_x = padding_x
};
iui__Textbox.prototype = {
	...iui__Component_A.prototype,
	toString() {
		return `iui__Textbox { app: ${this["app"].toString()} , text: "${this["text"].toString()}", click_event_fn: ${this["click_event_fn"].toString()} , before_txtc_event_fn: ${this["before_txtc_event_fn"].toString()} , text_change_event_fn: ${this["text_change_event_fn"].toString()} , is_blink: ${this["is_blink"].toString()} , last_blink: ${this["last_blink"].toString()} , wrap: ${this["wrap"].toString()} , last_fit: ${this["last_fit"].toString()} , code_highlight: ${this["code_highlight"].toString()} , multiline: ${this["multiline"].toString()} , ctrl_down: ${this["ctrl_down"].toString()} , last_letter: "${this["last_letter"].toString()}", carrot_left_raw: ${this["carrot_left_raw"].toString()} , carrot_left: ${this["carrot_left"].toString()} , carrot_top: ${this["carrot_top"].toString()} , key_down: ${this["key_down"].toString()} , padding_x: ${this["padding_x"].toString()} }`
	},
	/** @type {iui__Window} */
	app: new iui__Window({}),
	/** @type {string} */
	text: new string(""),
	/** @type {anon_fn_iui__window_iui__textbox} */
	click_event_fn: undefined,
	/** @type {anon_fn_iui__window_iui__textbox__bool} */
	before_txtc_event_fn: undefined,
	/** @type {anon_fn_iui__window_iui__textbox} */
	text_change_event_fn: undefined,
	/** @type {bool} */
	is_blink: new bool(false),
	/** @type {f64} */
	last_blink: new f64(0),
	/** @type {bool} */
	wrap: new bool(false),
	/** @type {int} */
	last_fit: new int(0),
	/** @type {bool} */
	code_highlight: new bool(false),
	/** @type {bool} */
	multiline: new bool(false),
	/** @type {bool} */
	ctrl_down: new bool(false),
	/** @type {string} */
	last_letter: new string(""),
	/** @type {int} */
	carrot_left_raw: new int(0),
	/** @type {int} */
	carrot_left: new int(0),
	/** @type {int} */
	carrot_top: new int(0),
	/** @type {bool} */
	key_down: new bool(false),
	/** @type {int} */
	padding_x: new int(0),
	$toJS() { return this; }
	};

/**
 * @function
 * @param {bool} val
 * @returns {void}
*/
function iui__Textbox_set_codebox(com, val) {
com = new $ref(com)
	try {
		/** @type {bool} */
		com.val.code_highlight = new bool(val);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [deprecated] */
/**
 * @function
 * @deprecated
 * @param {iui__Window} app
 * @param {string} text
 * @returns {iui__Textbox}
*/
function iui__textbox(app, text) {
app = new $ref(app)
	try {
		return new $ref((function() {
			let _tmp143 = new iui__Textbox({});
			_tmp143.text = text;
			_tmp143.app = app;
			_tmp143.click_event_fn = (function () { 
			return function (win, a) {
				win = new $ref(win)
			}})()
			;
			_tmp143.text_change_event_fn = (function () { 
			return function (win, a) {
				win = new $ref(win)
			}})()
			;
			_tmp143.before_txtc_event_fn = (function () { 
			return function (win, a) {
				win = new $ref(win)
				return new bool(false);
			}})()
			;
			return _tmp143;
		})()
		);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {anon_fn_iui__window_iui__textbox} b
 * @returns {void}
*/
function iui__Textbox_set_click(com, b) {
com = new $ref(com)
	try {
		/** @type {anon_fn_iui__window_iui__textbox} */
		com.val.click_event_fn = b;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {anon_fn_iui__window_iui__textbox} b
 * @returns {void}
*/
function iui__Textbox_set_text_change(com, b) {
com = new $ref(com)
	try {
		/** @type {anon_fn_iui__window_iui__textbox} */
		com.val.text_change_event_fn = b;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__Textbox_draw(com) {
com = new $ref(com)
	try {
		if ((string_contains(com.val.text,new string("\t"))).valueOf()) {
			/** @type {string} */
			com.val.text = new string(string_replace(com.val.text,new string("\t"), string_repeat(new string(" "),new int(4))));
		}
		/** @type {Array_string} */
		let spl = string_split_into_lines(com.val.text,);
		/** @type {int} */
		let y_mult = new int(new int(0));
		/** @type {int} */
		const size = new int(com.val.app.val.font_size);
		/** @type {int} */
		let padding_x = new int(new int(4));
		/** @type {int} */
		const padding_y = new int(new int(4));
		if ((new bool(com.val.carrot_top.valueOf() >= spl.len.valueOf())).valueOf()) {
			com.val.carrot_top.val --;
		}
		/** @type {gx__Color} */
		let bg = com.val.app.val.theme.textbox_background;
		/** @type {gx__Color} */
		let border = com.val.app.val.theme.textbox_border;
		/** @type {int} */
		let mid = new int((new int( com.val.x.valueOf() + (new int( com.val.width.valueOf() / new int(2).valueOf())).valueOf())));
		/** @type {int} */
		let midy = new int((new int( com.val.y.valueOf() + (new int( com.val.height.valueOf() / new int(2).valueOf())).valueOf())));
		if ((new bool( (new bool(iui__abs_T_int(new int( mid.valueOf() - com.val.app.val.mouse_x.valueOf())).valueOf() < (new int( com.val.width.valueOf() / new int(2).valueOf())).valueOf())).valueOf() && (new bool(iui__abs_T_int(new int( midy.valueOf() - com.val.app.val.mouse_y.valueOf())).valueOf() < (new int( com.val.height.valueOf() / new int(2).valueOf())).valueOf())).valueOf())).valueOf()) {
			/** @type {gx__Color} */
			border = com.val.app.val.theme.button_border_hover;
		}
		/** @type {int} */
		const line_height = new int(iui__text_height(com.val.app, new string("A{")));
		if ((com.val.is_mouse_rele).valueOf()) {
			/** @type {bool} */
			com.val.is_selected = new bool(new bool(true));
			iui__Textbox_click_event_fn(com.valueOf(),com.val.app, (com).valueOf());
			/** @type {gx__Color} */
			bg = com.val.app.val.theme.button_bg_click;
			/** @type {gx__Color} */
			border = com.val.app.val.theme.button_border_click;
			/** @type {int} */
			let my = new int(new int( com.val.app.val.mouse_y.valueOf() - com.val.y.valueOf()));
			/** @type {int} */
			let mx = new int(new int( com.val.app.val.mouse_x.valueOf() - com.val.x.valueOf()));
			/** @type {int} */
			const click = new int(new int( com.val.scroll_i.valueOf() + (new int( my.valueOf() / line_height.valueOf())).valueOf()));
			/** @type {int} */
			let lw = new int(new int(0));
			for (const atxt of string_split(com.val.text,new string(" "))) {
				try { 
					/** @type {int} */
					lw.val = Math.floor(lw + new int(iui__text_width(com.val.app, new string( atxt.valueOf() + new string(" ").valueOf()))));
				} catch (e) {
				 if (e instanceof BreakException) { break; }
				 else if (e instanceof ContinueException) { continue; }
				 else { throw e; } }
			}
			
			if ((new bool( new bool(click.valueOf() < spl.len.valueOf()).valueOf() && new bool(mx.valueOf() > new int(0).valueOf()).valueOf())).valueOf()) {
				/** @type {int} */
				com.val.carrot_top = new int(click);
				/** @type {int} */
				let ii = new int(new int(0));
				while (+new bool(iui__abs_T_int(new int( mx.valueOf() - com.val.carrot_left_raw.valueOf())).valueOf() > new int(5).valueOf())) {
					try { 
						if ((new bool(ii.valueOf() > new int(99).valueOf())).valueOf()) {
							break;
						}
						/** @type {bool} */
						let dirr = new bool(new bool(mx.valueOf() > com.val.carrot_left_raw.valueOf()));
						if ((dirr).valueOf()) {
							/** @type {int} */
							com.val.carrot_left.val = Math.floor(com.val.carrot_left + new int(new int(1)));
						} else {
							/** @type {int} */
							com.val.carrot_left.val = Math.floor(com.val.carrot_left - new int(new int(1)));
						}
						/** @type {int} */
						mx = new int(new int( com.val.app.val.mouse_x.valueOf() - com.val.x.valueOf()));
						/** @type {string} */
						let tw = new string(string_substr_ni(com.val.text,new int(0), com.val.carrot_left));
						/** @type {int} */
						lw = new int(new int(0));
						for (const atxt of string_split(tw,new string(" "))) {
							try { 
								/** @type {int} */
								lw.val = Math.floor(lw + new int(iui__text_width(com.val.app, new string( atxt.valueOf() + new string(" ").valueOf()))));
							} catch (e) {
							 if (e instanceof BreakException) { break; }
							 else if (e instanceof ContinueException) { continue; }
							 else { throw e; } }
						}
						
						/** @type {int} */
						lw = new int(new int( new int( (new int( lw.valueOf() - iui__text_width(com.val.app, new string(" ")).valueOf())).valueOf() + padding_x.valueOf()).valueOf() - new int(1).valueOf()));
						if ((new bool( new bool(lw.valueOf() == new int(0).valueOf()).valueOf() || new bool(lw.valueOf() == (new int( padding_x.valueOf() - new int(4).valueOf())).valueOf()).valueOf())).valueOf()) {
							/** @type {int} */
							lw = new int(new int( padding_x.valueOf() - new int(4).valueOf()));
						}
						/** @type {int} */
						com.val.carrot_left_raw = new int(lw);
						ii.val ++;
					} catch (e) {
					 if (e instanceof BreakException) { break; }
					 else if (e instanceof ContinueException) { continue; }
					 else { throw e; } }
				}
				
			}
			/** @type {bool} */
			com.val.is_mouse_rele = new bool(new bool(false));
		} else {
			if ((new bool( new bool(com.val.app.val.click_x.valueOf() > new int(-1).valueOf()).valueOf() && !(new bool( new bool(iui__abs_T_int(new int( mid.valueOf() - com.val.app.val.mouse_x.valueOf())).valueOf() < (new int( com.val.width.valueOf() / new int(2).valueOf())).valueOf()).valueOf() && new bool(iui__abs_T_int(new int( midy.valueOf() - com.val.app.val.mouse_y.valueOf())).valueOf() < (new int( com.val.height.valueOf() / new int(2).valueOf())).valueOf()).valueOf())).val .valueOf())).valueOf()) {
				/** @type {bool} */
				com.val.is_selected = new bool(new bool(false));
			}
		}
		if ((com.val.is_selected).valueOf()) {
			/** @type {gx__Color} */
			border = com.val.app.val.theme.button_border_click;
		}
		iui__Window_draw_bordered_rect(com.val.app.valueOf(),com.val.x, com.val.y, com.val.width, com.val.height, new int(2), bg, border);
		/** @type {int} */
		let cl = new int(new int(0));
		if ((new bool(com.val.scroll_i.valueOf() > new int( spl.len.valueOf() - com.val.last_fit.valueOf()).valueOf())).valueOf()) {
			/** @type {int} */
			com.val.scroll_i = new int(new int( spl.len.valueOf() - com.val.last_fit.valueOf()));
		}
		if ((new bool(com.val.scroll_i.valueOf() < new int(0).valueOf())).valueOf()) {
			/** @type {int} */
			com.val.scroll_i = new int(new int(0));
		}
		if ((com.val.code_highlight).valueOf()) {
			/** @type {int} */
			padding_x.val = Math.floor(padding_x + new int(iui__text_width(com.val.app, new string("1000"))));
			iui__Window_draw_bordered_rect(com.val.app.valueOf(),new int( com.val.x.valueOf() + new int(1).valueOf()), new int( com.val.y.valueOf() + new int(1).valueOf()), new int( padding_x.valueOf() - new int(3).valueOf()), new int( com.val.height.valueOf() - new int(2).valueOf()), new int(2), com.val.app.val.theme.button_bg_normal, com.val.app.val.theme.button_bg_normal);
		}
		for (let i = new int(com.val.scroll_i); +new bool(i.valueOf() < spl.len.valueOf()); i.val ++) {
			try { 
				let txt = new string(spl.arr.get(new int(i.valueOf()))); let skip = new bool(new bool(false)); if ((new bool(new int( y_mult.valueOf() + line_height.valueOf()).valueOf() > com.val.height.valueOf())).valueOf()) {
					com.val.last_fit = new int(cl); y_mult = new int(new int( y_mult.valueOf() - line_height.valueOf())); skip = new bool(new bool(true)); } else if ((com.val.wrap).valueOf()) {
					let wspl = string_split(txt,new string(" ")); let wmul = new int(new int(0)); for (const wtxt of wspl) {
						try { 
							gg__Context_draw_text(com.val.app.val.gg.valueOf(),new int( new int( com.val.x.valueOf() + wmul.valueOf()).valueOf() + padding_x.valueOf()), new int( new int( com.val.y.valueOf() + y_mult.valueOf()).valueOf() + padding_y.valueOf()), wtxt, (function() {
								let _tmp144 = new gx__TextCfg({});
								_tmp144.size = size;
								_tmp144.color = iui__Textbox_text_color(com.valueOf(),wtxt);
								return _tmp144;
							})()
							);
							wmul.val = Math.floor(wmul + new int(iui__text_width(com.val.app, new string( wtxt.valueOf().valueOf() + new string(" ").valueOf().valueOf())))); } catch (e) {
						 if (e instanceof BreakException) { break; }
						 else if (e instanceof ContinueException) { continue; }
						 else { throw e; } }
					}
					
				}
				if ((new bool( com.val.code_highlight.valueOf() && !skip.val .valueOf())).valueOf()) {
					gg__Context_draw_text(com.val.app.val.gg.valueOf(),new int( com.val.x.valueOf() + new int(4).valueOf()), new int( new int( com.val.y.valueOf() + y_mult.valueOf()).valueOf() + padding_y.valueOf()), int_str((new int( i.valueOf() + new int(1).valueOf()))), (function() {
						let _tmp145 = new gx__TextCfg({});
						_tmp145.size = size;
						_tmp145.color = com.val.app.val.theme.text_color;
						return _tmp145;
					})()
					);
				}
				if ((!skip.val ).valueOf()) {
					if ((new bool(cl.valueOf() < new int( spl.len.valueOf() - new int(1).valueOf()).valueOf())).valueOf()) {
						y_mult.val = Math.floor(y_mult + new int(line_height)); }
					if ((new bool(y_mult.valueOf() < com.val.height.valueOf())).valueOf()) {
						cl.val ++;
					} else {
						cl.val --;
					}
				} else {
					break;
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		/** @type {int} */
		com.val.padding_x = new int(padding_x);
		iui__Textbox_draw_scrollbar(com.valueOf(),cl, spl.len);
		iui__Textbox_draw_carrot(com.valueOf(),spl, padding_x, padding_y, line_height, size);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} cl
 * @param {int} spl_len
 * @returns {void}
*/
function iui__Textbox_draw_scrollbar(com, cl, spl_len) {
com = new $ref(com)
	try {
		/** @type {int} */
		let sth = new int(new int(new f32( (new f32( new f32((com.val.scroll_i)).valueOf() / new f32(spl_len).valueOf())).valueOf() * com.val.height.valueOf())));
		/** @type {int} */
		let enh = new int(new int(new f32( (new f32( new f32(cl).valueOf() / new f32(spl_len).valueOf())).valueOf() * com.val.height.valueOf())));
		/** @type {bool} */
		let requires_scrollbar = new bool(new bool( (new bool((new int( com.val.height.valueOf() - enh.valueOf())).valueOf() > new int(0).valueOf())).valueOf() && com.val.multiline.valueOf()));
		if ((requires_scrollbar).valueOf()) {
			iui__Window_draw_bordered_rect(com.val.app.valueOf(),new int( new int( com.val.x.valueOf() + com.val.width.valueOf()).valueOf() - new int(11).valueOf()), new int( com.val.y.valueOf() + new int(1).valueOf()), new int(10), new int( com.val.height.valueOf() - new int(2).valueOf()), new int(2), com.val.app.val.theme.scroll_track_color, com.val.app.val.theme.button_bg_hover);
			iui__Window_draw_bordered_rect(com.val.app.valueOf(),new int( new int( com.val.x.valueOf() + com.val.width.valueOf()).valueOf() - new int(11).valueOf()), new int( new int( com.val.y.valueOf() + sth.valueOf()).valueOf() + new int(1).valueOf()), new int(10), new int( enh.valueOf() - new int(2).valueOf()), new int(2), com.val.app.val.theme.scroll_bar_color, com.val.app.val.theme.scroll_track_color);
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {Array_string} spl
 * @param {int} padding_x
 * @param {int} padding_y
 * @param {int} line_height
 * @param {int} size
 * @returns {void}
*/
function iui__Textbox_draw_carrot(com, spl, padding_x, padding_y, line_height, size) {
com = new $ref(com)
	try {
		/** @type {i64} */
		let now = new i64(time__ticks());
		if ((new bool(new f64( BigInt(now.valueOf()) - BigInt(com.val.last_blink.valueOf())).valueOf() >= new int(1000).valueOf())).valueOf()) {
			/** @type {bool} */
			com.val.is_blink = new bool(!com.val.is_blink.val );
			/** @type {f64} */
			com.val.last_blink = new f64(now);
		}
		/** @type {gx__Color} */
		let color = com.val.app.val.theme.text_color;
		if ((com.val.is_blink).valueOf()) {
			/** @type {byte} */
			let r = new byte(new byte( (new byte( (new byte( com.val.app.val.theme.text_color.r.valueOf() / new int(2).valueOf())).valueOf() + com.val.app.val.theme.background.r.valueOf())).valueOf() / new int(2).valueOf()));
			/** @type {gx__Color} */
			color = gx__rgb(r, r, r);
		}
		/** @type {int} */
		let indx = new int(new int( com.val.carrot_top.valueOf() + new int(1).valueOf()));
		/** @type {string} */
		let mtxt = new string(new string(""));
		if ((new bool(spl.len.valueOf() <= new int(1).valueOf())).valueOf()) {
			if ((new bool(spl.len.valueOf() == new int(0).valueOf())).valueOf()) {
				/** @type {string} */
				mtxt = new string(new string(""));
			} else {
				/** @type {string} */
				mtxt = new string(spl.arr.get(new int(new int(0).valueOf())));
			}
		} else if ((new bool((new int( indx.valueOf() - new int(1).valueOf())).valueOf() < spl.len.valueOf())).valueOf()) {
			/** @type {string} */
			mtxt = new string(spl.arr.get(new int(new int( indx.valueOf() - new int(1).valueOf()).valueOf())));
		}
		/** @type {int} */
		let lt = new int(new int( new int( line_height.valueOf() * (com.val.carrot_top).valueOf()).valueOf() - (new int( line_height.valueOf() * com.val.scroll_i.valueOf())).valueOf()));
		if ((new bool( new bool(com.val.carrot_left.valueOf() > mtxt.len.valueOf()).valueOf() && new bool(indx.valueOf() <= spl.len.valueOf()).valueOf())).valueOf()) {
			indx.val ++;
			if ((!(new bool(new int( indx.valueOf() - new int(1).valueOf()).valueOf() >= spl.len.valueOf())).val ).valueOf()) {
				/** @type {string} */
				mtxt = new string(spl.arr.get(new int(new int( indx.valueOf() - new int(1).valueOf()).valueOf())));
				com.val.carrot_top.val ++;
				/** @type {int} */
				lt.val = Math.floor(lt + new int(line_height));
				/** @type {int} */
				com.val.carrot_left = new int(new int(0));
			} else {
				com.val.carrot_left.val --;
			}
		}
		if ((new bool( new bool(com.val.carrot_left.valueOf() < new int(0).valueOf()).valueOf() && new bool(indx.valueOf() > new int(1).valueOf()).valueOf())).valueOf()) {
			indx.val --;
			/** @type {string} */
			mtxt = new string(spl.arr.get(new int(new int( indx.valueOf() - new int(1).valueOf()).valueOf())));
			com.val.carrot_top.val --;
			/** @type {int} */
			lt.val = Math.floor(lt - new int(line_height));
			/** @type {int} */
			com.val.carrot_left = new int(new int(0));
		}
		if ((new bool(indx.valueOf() < new int(0).valueOf())).valueOf()) {
			/** @type {int} */
			indx = new int(new int(0));
		}
		if ((new bool(com.val.carrot_left.valueOf() < new int(0).valueOf())).valueOf()) {
			/** @type {int} */
			com.val.carrot_left = new int(new int(0));
		}
		/** @type {string} */
		let tw = new string(string_substr_ni(mtxt,new int(0), com.val.carrot_left));
		/** @type {int} */
		let lw = new int(new int(0));
		for (const atxt of string_split(tw,new string(" "))) {
			try { 
				/** @type {int} */
				lw.val = Math.floor(lw + new int(iui__text_width(com.val.app, new string( atxt.valueOf() + new string(" ").valueOf()))));
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		/** @type {int} */
		lw = new int(new int( new int( (new int( lw.valueOf() - iui__text_width(com.val.app, new string(" ")).valueOf())).valueOf() + padding_x.valueOf()).valueOf() - new int(1).valueOf()));
		if ((new bool( new bool(lw.valueOf() == new int(0).valueOf()).valueOf() || new bool(lw.valueOf() == (new int( padding_x.valueOf() - new int(4).valueOf())).valueOf()).valueOf())).valueOf()) {
			/** @type {int} */
			lw = new int(new int( padding_x.valueOf() - new int(4).valueOf()));
		}
		if ((new bool(lt.valueOf() < new int(0).valueOf())).valueOf()) {
			return;
		}
		/** @type {int} */
		com.val.carrot_left_raw = new int(lw);
		gg__Context_draw_text(com.val.app.val.gg.valueOf(),new int( com.val.x.valueOf() + lw.valueOf()), new int( new int( com.val.y.valueOf() + lt.valueOf()).valueOf() + padding_y.valueOf()), new string("|"), (function() {
			let _tmp146 = new gx__TextCfg({});
			_tmp146.size = size;
			_tmp146.color = color;
			return _tmp146;
		})()
		);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @constant {gx__Color} */
let iui__code_blue = undefined;
/** @constant {gx__Color} */
let iui__code_num = undefined;
/** @constant {gx__Color} */
let iui__code_pur = undefined;
/** @constant {Array_string} */
let iui__blue_words = undefined;
/** @constant {Array_string} */
let iui__pur_words = undefined;

/**
 * @function
 * @param {string} word
 * @returns {gx__Color}
*/
function iui__Textbox_text_color(com, word) {
com = new $ref(com)
	try {
		if ((!com.val.code_highlight.val ).valueOf()) {
			return com.val.app.val.theme.text_color;
		}
		if (((Array_string_contains(iui__blue_words,word))).valueOf()) {
			return iui__code_blue;
		}
		if (((Array_string_contains(iui__pur_words,word))).valueOf()) {
			return iui__code_pur;
		}
		/** @type {int} */
		const num = new int(string_int(word,));
		if ((new bool( new bool(num.valueOf() == new int(0).valueOf()).valueOf() && new bool(word.valueOf() != new string("0").valueOf()).valueOf())).valueOf()) {
			return com.val.app.val.theme.text_color;
		} else {
			return iui__code_num;
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace iui */
/**
 * @function
 * @param {gg__KeyCode} key
 * @param {gg__Event} e
 * @param {iui__Component} a
 * @returns {bool}
*/
function iui__Window_check_box(app, key, e, a) {
app = new $ref(app)
e = new $ref(e)
	try {
		if ((a.valueOf() instanceof iui__Textbox).valueOf()) {
			iui__Window_key_down_1(app.valueOf(),key, e, a);
		}
		if ((a.valueOf() instanceof iui__TextField).valueOf()) {
			iui__Window_runebox_key(app.valueOf(),key, e, a);
			return a.val.is_selected;
		}
		if ((a.valueOf() instanceof iui__TextEdit).valueOf()) {
			iui__Window_textedit_key_down(app.valueOf(),key, e, a);
			return a.val.is_selected;
		}
		if ((a.valueOf() instanceof iui__TextArea).valueOf()) {
			iui__Window_textarea_key_down(app.valueOf(),key, e, a);
			return new bool(true);
		}
		if ((a.valueOf() instanceof iui__Tabbox).valueOf()) {
			/** @type {Array_iui__Component} */
			let kids = a.val.kids.get(a.val.active_tab.$toJS());
			for (const comm of kids) {
				try { 
					iui__Window_check_box(app.valueOf(),key, e, comm);
				} catch (e) {
				 if (e instanceof BreakException) { break; }
				 else if (e instanceof ContinueException) { continue; }
				 else { throw e; } }
			}
			
		}
		if ((a.valueOf() instanceof iui__VBox).valueOf()) {
			for (const comm of a.val.children) {
				try { 
					if ((iui__Window_check_box(app.valueOf(),key, e, comm)).valueOf()) {
						return new bool(true);
					}
				} catch (e) {
				 if (e instanceof BreakException) { break; }
				 else if (e instanceof ContinueException) { continue; }
				 else { throw e; } }
			}
			
		}
		if ((a.valueOf() instanceof iui__HBox).valueOf()) {
			for (const comm of a.val.children) {
				try { 
					if ((iui__Window_check_box(app.valueOf(),key, e, comm)).valueOf()) {
						return new bool(true);
					}
				} catch (e) {
				 if (e instanceof BreakException) { break; }
				 else if (e instanceof ContinueException) { continue; }
				 else { throw e; } }
			}
			
		}
		return new bool(false);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {gg__KeyCode} key
 * @param {gg__Event} e
 * @returns {void}
*/
function iui__Window_key_down(app, key, e) {
app = new $ref(app)
e = new $ref(e)
	try {
		
		if (vEq(key,gg__KeyCode.left_alt)) {
			/** @type {bool} */
			app.val.debug_draw = new bool(!app.val.debug_draw.val );
			return;
		}
		else if (vEq(key,gg__KeyCode.left_control)) {
			return;
		}
		else {
		};
		for (const a of app.val.components) {
			try { 
				iui__Window_check_box(app.valueOf(),key, e, a);
				if ((a.valueOf() instanceof iui__Modal).valueOf()) {
					for (const child of a.val.children) {
						try { 
							iui__Window_check_box(app.valueOf(),key, e, child);
						} catch (e) {
						 if (e instanceof BreakException) { break; }
						 else if (e instanceof ContinueException) { continue; }
						 else { throw e; } }
					}
					
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		iui__Window_key_down_event(app.valueOf(),app, key, e);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {gg__KeyCode} key
 * @param {gg__Event} ev
 * @param {iui__TextEdit} com
 * @returns {void}
*/
function iui__Window_textedit_key_down(win, key, ev, com) {
win = new $ref(win)
ev = new $ref(ev)
com = new $ref(com)
	try {
		if ((!com.val.is_selected.val ).valueOf()) {
			return;
		}
		if ((new bool(key.valueOf() == gg__KeyCode.right.valueOf())).valueOf()) {
			/** @type {int} */
			com.val.carrot_left.val = Math.floor(com.val.carrot_left + new int(new int(1)));
		} else if ((new bool(key.valueOf() == gg__KeyCode.left.valueOf())).valueOf()) {
			/** @type {int} */
			com.val.carrot_left.val = Math.floor(com.val.carrot_left - new int(new int(1)));
		} else if ((new bool(key.valueOf() == gg__KeyCode.up.valueOf())).valueOf()) {
			/** @type {int} */
			com.val.carrot_top.val = Math.floor(com.val.carrot_top - new int(new int(1)));
		} else if ((new bool(key.valueOf() == gg__KeyCode.down.valueOf())).valueOf()) {
			/** @type {int} */
			com.val.carrot_top.val = Math.floor(com.val.carrot_top + new int(new int(1)));
		} else {
			/** @type {u32} */
			const mod = new u32(ev.val.modifiers);
			if ((new bool(mod.valueOf() == new int(8).valueOf())).valueOf()) {
				return;
			}
			if ((new bool(mod.valueOf() == new int(2).valueOf())).valueOf()) {
				/** @type {bool} */
				com.val.ctrl_down = new bool(new bool(true));
			}
			if ((new bool(key.valueOf() == gg__KeyCode.backspace.valueOf())).valueOf()) {
				/** @type {string} */
				const line = new string(com.val.lines.arr.get(new int(com.val.carrot_top.valueOf())));
				/** @type {string} */
				com.val.last_letter = new string(new string("backspace"));
				/** @type {bool} */
				let bevnt = new bool(iui__TextEdit_before_txtc_event_fn(com.valueOf(),win, (com).valueOf()));
				if ((bevnt).valueOf()) {
					return;
				}
				if ((new bool( new bool(com.val.carrot_left.valueOf() == new int(0).valueOf()).valueOf() && new bool(com.val.carrot_top.valueOf() == new int(0).valueOf()).valueOf())).valueOf()) {
					return;
				}
				if ((new bool(new int( com.val.carrot_left.valueOf() - new int(1).valueOf()).valueOf() >= new int(0).valueOf())).valueOf()) {
					/** @type {string} */
					const new_line = new string(new string( string_substr(line,new int(0), new int( com.val.carrot_left.valueOf() - new int(1).valueOf())).valueOf() + string_substr(line,com.val.carrot_left, line.len).valueOf()));
					/** @type {string} */
					com.val.lines.arr.set(new int(com.val.carrot_top.valueOf()),new string(new_line));
					/** @type {int} */
					com.val.carrot_left.val = Math.floor(com.val.carrot_left - new int(new int(1)));
				} else {
					/** @type {string} */
					const line_text = new string(line);
					iui__TextEdit_delete_current_line(com.valueOf(),);
					/** @type {string} */
					com.val.lines.arr.set(new int(com.val.carrot_top.valueOf()),new string(new string( com.val.lines.arr.get(new int(com.val.carrot_top.valueOf())).valueOf() + line_text.valueOf())));
				}
			} else {
				/** @type {string} */
				let strr = new string(gg__KeyCode_str(key));
				if ((new bool(key.valueOf() == gg__KeyCode.space.valueOf())).valueOf()) {
					/** @type {string} */
					strr = new string(new string(" "));
				}
				if ((new bool(key.valueOf() == gg__KeyCode.enter.valueOf())).valueOf()) {
					/** @type {string} */
					strr = new string(new string("\n"));
				}
				/** @type {u32} */
				const kc = new u32(new u32(new gg__KeyCode(ev.val.key_code)));
				/** @type {string} */
				let letter = new string(gg__KeyCode_str(ev.val.key_code));
				/** @type {string} */
				let res = new string(utf32_to_str(kc));
				if ((new bool( new bool(letter.valueOf() == new string("left_shift").valueOf()).valueOf() || new bool(letter.valueOf() == new string("right_shift").valueOf()).valueOf())).valueOf()) {
					/** @type {string} */
					letter = new string(new string(""));
					/** @type {bool} */
					win.val.shift_pressed = new bool(new bool(true));
					return;
				}
				if ((string_starts_with(letter,new string("_"))).valueOf()) {
					/** @type {string} */
					letter = new string(string_replace(letter,new string("_"), new string("")));
					/** @type {Array_string} */
					const nums = new array(new array_buffer({arr: [new string(new string(")")), new string(new string("!")), new string(new string("@")), new string(new string("#")), new string(new string("$")), new string(new string("%")), new string(new string("^")), new string(new string("&")), new string(new string("*")), new string(new string("("))], len: new int(10), cap: new int(10)}));
					if ((new bool( win.val.shift_pressed.valueOf() && new bool(letter.len.valueOf() > new int(0).valueOf()).valueOf())).valueOf()) {
						/** @type {string} */
						letter = new string(nums.arr.get(new int(string_u32(letter,).valueOf())));
					}
				}
				if ((win.val.shift_pressed).valueOf()) {
					/** @type {string} */
					letter = new string(iui__get_shifted_letter(letter));
				}
				/** @type {string} */
				com.val.last_letter = new string(letter);
				if ((new bool(letter.len.valueOf() > new int(1).valueOf())).valueOf()) {
					if ((new bool(letter.valueOf() == new string("tab").valueOf())).valueOf()) {
						/** @type {string} */
						letter = new string(new string("\t"));
					} else {
						/** @type {string} */
						letter = new string(res);
					}
				}
				if ((new bool(strr.valueOf() != new string("\n").valueOf())).valueOf()) {
					/** @type {string} */
					strr = new string(letter);
				}
				/** @type {bool} */
				let bevnt = new bool(iui__TextEdit_before_txtc_event_fn(com.valueOf(),win, (com).valueOf()));
				if ((bevnt).valueOf()) {
					return;
				}
				if ((new bool( new bool(key.valueOf() != gg__KeyCode.enter.valueOf()).valueOf() && new bool(mod.valueOf() != new int(2).valueOf()).valueOf())).valueOf()) {
					if ((new bool(com.val.lines.len.valueOf() == new int(0).valueOf())).valueOf()) {
						array_push(com.val.lines,new string(" "),false);
						/** @type {int} */
						com.val.carrot_top = new int(new int(0));
					}
					/** @type {string} */
					const line = new string(com.val.lines.arr.get(new int(com.val.carrot_top.valueOf())));
					/** @type {string} */
					const new_line = new string(new string( new string( string_substr_ni(line,new int(0), com.val.carrot_left).valueOf() + strr.valueOf()).valueOf() + string_substr_ni(line,com.val.carrot_left, line.len).valueOf()));
					/** @type {string} */
					com.val.lines.arr.set(new int(com.val.carrot_top.valueOf()),new string(new_line));
				}
				/** @type {string} */
				com.val.last_letter = new string(letter);
				iui__TextEdit_text_change_event_fn(com.valueOf(),win, com);
				if ((new bool(key.valueOf() == gg__KeyCode.enter.valueOf())).valueOf()) {
					/** @type {string} */
					const current_line = new string(com.val.lines.arr.get(new int(com.val.carrot_top.valueOf())));
					if ((new bool(com.val.carrot_left.valueOf() == current_line.len.valueOf())).valueOf()) {
						/** @type {int} */
						com.val.carrot_top.val = Math.floor(com.val.carrot_top + new int(new int(1)));
						array_insert(com.val.lines,com.val.carrot_top,new string(""));
						if ((string_starts_with(current_line,new string("\t"))).valueOf()) {
							/** @type {string} */
							com.val.lines.arr.set(new int(com.val.carrot_top.valueOf()),new string(new string("\t")));
						}
					} else {
						/** @type {string} */
						const keep_line = new string(string_substr(current_line,new int(0), com.val.carrot_left));
						/** @type {string} */
						const new_line = new string(string_substr_ni(current_line,com.val.carrot_left, current_line.len));
						/** @type {string} */
						com.val.lines.arr.set(new int(com.val.carrot_top.valueOf()),new string(keep_line));
						/** @type {int} */
						com.val.carrot_top.val = Math.floor(com.val.carrot_top + new int(new int(1)));
						array_insert(com.val.lines,com.val.carrot_top,new string(""));
						/** @type {string} */
						com.val.lines.arr.set(new int(com.val.carrot_top.valueOf()),new string(new_line));
						/** @type {int} */
						com.val.carrot_left = new int(new int(0));
					}
				} else if ((new bool(mod.valueOf() != new int(2).valueOf())).valueOf()) {
					/** @type {int} */
					com.val.carrot_left.val = Math.floor(com.val.carrot_left + new int(new int(1)));
				}
			}
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} letter
 * @returns {string}
*/
function iui__get_shifted_letter(letter) {
	try {
		/** @type {Map_string_string} */
		const shift_keys = new map(
			{
				[new string("minus").$toJS()]: new string("_"),
				[new string("left_bracket").$toJS()]: new string("{"),
				[new string("right_bracket").$toJS()]: new string("}"),
				[new string("equal").$toJS()]: new string("+"),
				[new string("apostrophe").$toJS()]: new string("\""),
				[new string("comma").$toJS()]: new string(">"),
				[new string("period").$toJS()]: new string(">"),
				[new string("slash").$toJS()]: new string("?"),
				[new string("semicolon").$toJS()]: new string(":"),
				[new string("backslash").$toJS()]: new string("|"),
				[new string("grave_accent").$toJS()]: new string("~")
			});
		if ((shift_keys.has(letter.$toJS())).valueOf()) {
			return shift_keys.get(letter.$toJS());
		}
		return string_to_upper(letter,);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {gg__KeyCode} key
 * @param {gg__Event} ev
 * @param {iui__TextField} com
 * @returns {void}
*/
function iui__Window_runebox_key(app, key, ev, com) {
app = new $ref(app)
ev = new $ref(ev)
com = new $ref(com)
	try {
		if ((!com.val.is_selected.val ).valueOf()) {
			return;
		}
		if ((new bool(key.valueOf() == gg__KeyCode.right.valueOf())).valueOf()) {
			/** @type {int} */
			com.val.carrot_left.val = Math.floor(com.val.carrot_left + new int(new int(1)));
		} else if ((new bool(key.valueOf() == gg__KeyCode.left.valueOf())).valueOf()) {
			/** @type {int} */
			com.val.carrot_left.val = Math.floor(com.val.carrot_left - new int(new int(1)));
		} else {
			/** @type {u32} */
			const mod = new u32(ev.val.modifiers);
			if ((new bool(mod.valueOf() == new int(8).valueOf())).valueOf()) {
				return;
			}
			if ((new bool(mod.valueOf() == new int(2).valueOf())).valueOf()) {
				/** @type {bool} */
				com.val.ctrl_down = new bool(new bool(true));
			}
			if ((new bool(key.valueOf() == gg__KeyCode.backspace.valueOf())).valueOf()) {
				/** @type {string} */
				com.val.text = new string(new string( string_substr_ni(com.val.text,new int(0), new int( com.val.carrot_left.valueOf() - new int(1).valueOf())).valueOf() + string_substr_ni(com.val.text,com.val.carrot_left, com.val.text.len).valueOf()));
				/** @type {int} */
				com.val.carrot_left.val = Math.floor(com.val.carrot_left - new int(new int(1)));
			} else {
				/** @type {string} */
				let strr = new string(gg__KeyCode_str(key));
				if ((new bool(key.valueOf() == gg__KeyCode.space.valueOf())).valueOf()) {
					/** @type {string} */
					strr = new string(new string(" "));
				}
				if ((new bool(key.valueOf() == gg__KeyCode.enter.valueOf())).valueOf()) {
					/** @type {string} */
					strr = new string(new string("\n"));
				}
				/** @type {u32} */
				const kc = new u32(new u32(new gg__KeyCode(ev.val.key_code)));
				/** @type {string} */
				let letter = new string(gg__KeyCode_str(ev.val.key_code));
				/** @type {string} */
				const res = new string(utf32_to_str(kc));
				if ((new bool( new bool(letter.valueOf() == new string("left_shift").valueOf()).valueOf() || new bool(letter.valueOf() == new string("right_shift").valueOf()).valueOf())).valueOf()) {
					/** @type {string} */
					letter = new string(new string(""));
					/** @type {bool} */
					app.val.shift_pressed = new bool(new bool(true));
					return;
				}
				if ((string_starts_with(letter,new string("_"))).valueOf()) {
					/** @type {string} */
					letter = new string(string_replace(letter,new string("_"), new string("")));
					/** @type {Array_string} */
					const nums = new array(new array_buffer({arr: [new string(new string(")")), new string(new string("!")), new string(new string("@")), new string(new string("#")), new string(new string("$")), new string(new string("%")), new string(new string("^")), new string(new string("&")), new string(new string("*")), new string(new string("("))], len: new int(10), cap: new int(10)}));
					if ((new bool( app.val.shift_pressed.valueOf() && new bool(letter.len.valueOf() > new int(0).valueOf()).valueOf())).valueOf()) {
						/** @type {string} */
						letter = new string(nums.arr.get(new int(string_u32(letter,).valueOf())));
					}
				}
				if ((new bool(letter.valueOf() == new string("minus").valueOf())).valueOf()) {
					if ((app.val.shift_pressed).valueOf()) {
						/** @type {string} */
						letter = new string(new string("_"));
					} else {
						/** @type {string} */
						letter = new string(new string("-"));
					}
				}
				if ((app.val.shift_pressed).valueOf()) {
					/** @type {string} */
					letter = new string(iui__get_shifted_letter(letter));
				}
				/** @type {string} */
				com.val.last_letter = new string(letter);
				if ((new bool(letter.len.valueOf() > new int(1).valueOf())).valueOf()) {
					if ((new bool(letter.valueOf() == new string("tab").valueOf())).valueOf()) {
						/** @type {string} */
						letter = new string(new string("\t"));
					} else {
						/** @type {string} */
						letter = new string(res);
					}
				}
				if ((new bool(strr.valueOf() != new string("\n").valueOf())).valueOf()) {
					/** @type {string} */
					strr = new string(letter);
				}
				/** @type {bool} */
				const bevnt = new bool(iui__TextField_before_txtc_event_fn(com.valueOf(),app, (com).valueOf()));
				if ((new bool( new bool( bevnt.valueOf() || new bool(key.valueOf() == gg__KeyCode.up.valueOf()).valueOf()).valueOf() || new bool(key.valueOf() == gg__KeyCode.down.valueOf()).valueOf())).valueOf()) {
					return;
				}
				if ((new bool( new bool(mod.valueOf() != new int(2).valueOf()).valueOf() && new bool(key.valueOf() != gg__KeyCode.enter.valueOf()).valueOf())).valueOf()) {
					/** @type {string} */
					com.val.text = new string(new string( new string( string_substr_ni(com.val.text,new int(0), com.val.carrot_left).valueOf() + strr.valueOf()).valueOf() + string_substr_ni(com.val.text,com.val.carrot_left, com.val.text.len).valueOf()));
					/** @type {int} */
					com.val.carrot_left.val = Math.floor(com.val.carrot_left + new int(new int(1)));
				}
				/** @type {string} */
				com.val.last_letter = new string(letter);
				iui__TextField_text_change_event_fn(com.valueOf(),app, com);
				return;
			}
			/** @type {bool} */
			com.val.ctrl_down = new bool(new bool(true));
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {gg__KeyCode} key
 * @param {gg__Event} e
 * @param {iui__Textbox} a
 * @returns {void}
*/
function iui__Window_key_down_1(app, key, e, a) {
app = new $ref(app)
e = new $ref(e)
a = new $ref(a)
	try {
		if ((a.val.is_selected).valueOf()) {
			/** @type {u32} */
			const mod = new u32(e.val.modifiers);
			if ((new bool(mod.valueOf() == new int(8).valueOf())).valueOf()) {
				return;
			}
			if ((new bool(mod.valueOf() == new int(2).valueOf())).valueOf()) {
				/** @type {bool} */
				a.val.ctrl_down = new bool(new bool(true));
			}
			/** @type {bool} */
			a.val.key_down = new bool(new bool(true));
			/** @type {u32} */
			const kc = new u32(new u32(new gg__KeyCode(e.val.key_code)));
			/** @type {string} */
			let letter = new string(gg__KeyCode_str(e.val.key_code));
			/** @type {string} */
			let res = new string(utf32_to_str(kc));
			if ((new bool(letter.valueOf() == new string("space").valueOf())).valueOf()) {
				/** @type {string} */
				letter = new string(new string(" "));
			}
			if ((new bool(letter.valueOf() == new string("enter").valueOf())).valueOf()) {
				if ((a.val.multiline).valueOf()) {
					/** @type {string} */
					letter = new string(new string("\n"));
				} else {
					/** @type {string} */
					letter = new string(new string(""));
				}
			}
			if ((new bool( new bool(letter.valueOf() == new string("left_shift").valueOf()).valueOf() || new bool(letter.valueOf() == new string("right_shift").valueOf()).valueOf())).valueOf()) {
				/** @type {string} */
				letter = new string(new string(""));
				/** @type {bool} */
				app.val.shift_pressed = new bool(new bool(true));
				return;
			}
			if ((string_starts_with(letter,new string("_"))).valueOf()) {
				/** @type {string} */
				letter = new string(string_replace(letter,new string("_"), new string("")));
			}
			if ((new bool(letter.valueOf() == new string("minus").valueOf())).valueOf()) {
				if ((app.val.shift_pressed).valueOf()) {
					/** @type {string} */
					letter = new string(new string("_"));
				} else {
					/** @type {string} */
					letter = new string(new string("-"));
				}
			}
			if ((app.val.shift_pressed).valueOf()) {
				/** @type {string} */
				letter = new string(iui__get_shifted_letter(letter));
			}
			if ((new bool(letter.valueOf() == new string("left").valueOf())).valueOf()) {
				a.val.carrot_left.val --;
				/** @type {bool} */
				a.val.key_down = new bool(new bool(false));
				return;
			}
			if ((new bool(letter.valueOf() == new string("right").valueOf())).valueOf()) {
				a.val.carrot_left.val ++;
				/** @type {bool} */
				a.val.key_down = new bool(new bool(false));
				return;
			}
			if ((new bool(letter.valueOf() == new string("down").valueOf())).valueOf()) {
				a.val.carrot_top.val ++;
				/** @type {bool} */
				a.val.key_down = new bool(new bool(false));
				return;
			}
			if ((new bool(letter.valueOf() == new string("up").valueOf())).valueOf()) {
				a.val.carrot_top.val --;
				/** @type {bool} */
				a.val.key_down = new bool(new bool(false));
				return;
			}
			/** @type {string} */
			a.val.last_letter = new string(letter);
			/** @type {bool} */
			let bevnt = new bool(iui__Textbox_before_txtc_event_fn(a.valueOf(),app, (a).valueOf()));
			if ((bevnt).valueOf()) {
				return;
			}
			/** @type {Array_string} */
			let spl = string_split_into_lines(a.val.text,);
			if ((new bool( new bool(spl.len.valueOf() == new int(0).valueOf()).valueOf() && new bool(letter.valueOf() == new string("backspace").valueOf()).valueOf())).valueOf()) {
				/** @type {string} */
				a.val.text = new string(new string(""));
				return;
			}
			if ((new bool(letter.valueOf() == new string("backspace").valueOf())).valueOf()) {
				if ((new bool(spl.len.valueOf() == new int(0).valueOf())).valueOf()) {
					return;
				}
				if ((new bool( new bool(a.val.carrot_top.valueOf() >= spl.len.valueOf()).valueOf() && new bool(spl.len.valueOf() > new int(0).valueOf()).valueOf())).valueOf()) {
					a.val.carrot_top.val --;
				}
				if ((new bool(a.val.carrot_top.valueOf() < new int(0).valueOf())).valueOf()) {
					/** @type {int} */
					a.val.carrot_top = new int(new int(0));
				}
				/** @type {string} */
				let lie = new string(spl.arr.get(new int(a.val.carrot_top.valueOf())));
				if ((new bool(lie.len.valueOf() == new int(0).valueOf())).valueOf()) {
					array_pop(spl,);
					/** @type {int} */
					a.val.carrot_top = new int(new int( spl.len.valueOf() - new int(1).valueOf()));
					/** @type {string} */
					a.val.text = new string(Array_string_join(spl,new string("\n")));
				}
				if ((new bool(new int( a.val.carrot_left.valueOf() - new int(1).valueOf()).valueOf() > new int(0).valueOf())).valueOf()) {
					if ((new bool(a.val.carrot_left.valueOf() != lie.len.valueOf())).valueOf()) {
						/** @type {string} */
						lie = new string(new string( string_substr_ni(lie,new int(0), new int( a.val.carrot_left.valueOf() - new int(1).valueOf())).valueOf() + string_substr_ni(lie,a.val.carrot_left, lie.len).valueOf()));
					} else {
						/** @type {string} */
						lie = new string(string_substr_ni(lie,new int(0), new int( a.val.carrot_left.valueOf() - new int(1).valueOf())));
					}
				} else {
					/** @type {string} */
					lie = new string(new string( new string("_TO_REMOVE_LIE_").valueOf() + lie.valueOf()));
				}
				/** @type {string} */
				spl.arr.set(new int(a.val.carrot_top.valueOf()),new string(lie));
				/** @type {string} */
				let nt = new string(new string(""));
				for (const str of spl) {
					try { 
						if ((new bool(nt.len.valueOf() == new int(0).valueOf())).valueOf()) {
							if ((string_starts_with(str.valueOf(),new string("_TO_REMOVE_LIE_"))).valueOf()) {
								if ((new bool(str.val.len.valueOf() > new string("_TO_REMOVE_LIE_").len.valueOf())).valueOf()) {
									/** @type {string} */
									nt = new string(new string( nt.valueOf() + string_replace(str.valueOf(),new string("_TO_REMOVE_LIE_"), new string("")).valueOf()));
									/** @type {string} */
									nt = new string(string_substr_ni(nt,new int(1), new int( nt.len.valueOf() - new int(1).valueOf())));
								}
							} else {
								/** @type {string} */
								nt = new string(new string( nt.valueOf() + str.valueOf()));
							}
						} else {
							if ((string_starts_with(str.valueOf(),new string("_TO_REMOVE_LIE_"))).valueOf()) {
								if ((new bool(str.val.len.valueOf() > new string("_TO_REMOVE_LIE_").len.valueOf())).valueOf()) {
									/** @type {string} */
									nt = new string(new string( nt.valueOf() + string_replace(str.valueOf(),new string("_TO_REMOVE_LIE_"), new string("")).valueOf()));
								}
							} else {
								/** @type {string} */
								nt = new string(new string( new string( nt.valueOf() + new string("\n").valueOf()).valueOf() + str.valueOf()));
							}
						}
					} catch (e) {
					 if (e instanceof BreakException) { break; }
					 else if (e instanceof ContinueException) { continue; }
					 else { throw e; } }
				}
				
				/** @type {string} */
				a.val.text = new string(nt);
				a.val.carrot_left.val --;
				if ((new bool( new bool(a.val.carrot_top.valueOf() >= spl.len.valueOf()).valueOf() && new bool(spl.len.valueOf() > new int(0).valueOf()).valueOf())).valueOf()) {
					/** @type {int} */
					a.val.carrot_top = new int(new int( spl.len.valueOf() - new int(1).valueOf()));
				}
			} else if ((new bool(mod.valueOf() != new int(2).valueOf())).valueOf()) {
				if ((new bool( app.val.shift_pressed.valueOf() && new bool(letter.len.valueOf() > new int(0).valueOf()).valueOf())).valueOf()) {
					/** @type {string} */
					letter = new string(string_to_upper(letter,));
				}
				if ((new bool(letter.len.valueOf() > new int(1).valueOf())).valueOf()) {
					if ((new bool(letter.valueOf() == new string("tab").valueOf())).valueOf()) {
						/** @type {string} */
						letter = new string(string_repeat(new string(" "),new int(4)));
					} else {
						/** @type {string} */
						letter = new string(res);
					}
				}
				if ((new bool(spl.len.valueOf() == new int(0).valueOf())).valueOf()) {
					/** @type {Array_string} */
					spl = string_split(a.val.text,new string("\n"));
				}
				if ((new bool(a.val.carrot_top.valueOf() < new int(0).valueOf())).valueOf()) {
					/** @type {int} */
					a.val.carrot_top = new int(new int(0));
				}
				/** @type {string} */
				let lie = new string(spl.arr.get(new int(a.val.carrot_top.valueOf())));
				/** @type {string} */
				lie = new string(new string( new string( string_substr_ni(lie,new int(0), a.val.carrot_left).valueOf() + letter.valueOf()).valueOf() + string_substr_ni(lie,a.val.carrot_left, lie.len).valueOf()));
				/** @type {string} */
				spl.arr.set(new int(a.val.carrot_top.valueOf()),new string(lie));
				/** @type {string} */
				let nt = new string(new string(""));
				for (const str of spl) {
					try { 
						if ((new bool(nt.len.valueOf() == new int(0).valueOf())).valueOf()) {
							/** @type {string} */
							nt = new string(new string( nt.valueOf() + str.valueOf()));
						} else {
							/** @type {string} */
							nt = new string(new string( new string( nt.valueOf() + new string("\n").valueOf()).valueOf() + str.valueOf()));
						}
					} catch (e) {
					 if (e instanceof BreakException) { break; }
					 else if (e instanceof ContinueException) { continue; }
					 else { throw e; } }
				}
				
				/** @type {string} */
				a.val.text = new string(nt);
				if ((new bool(letter.len.valueOf() >= new int(4).valueOf())).valueOf()) {
					/** @type {int} */
					a.val.carrot_left.val = Math.floor(a.val.carrot_left + new int(new int( letter.len.valueOf() - new int(1).valueOf())));
				}
				a.val.carrot_left.val ++;
			}
			/** @type {string} */
			a.val.last_letter = new string(letter);
			iui__Textbox_text_change_event_fn(a.valueOf(),app, (a).valueOf());
			if ((new bool( new bool(letter.valueOf() == new string("\n").valueOf()).valueOf() && new bool((new int( a.val.carrot_top.valueOf() + new int(1).valueOf())).valueOf() == spl.len.valueOf()).valueOf())).valueOf()) {
				/** @type {string} */
				a.val.text = new string(new string( a.val.text.valueOf() + new string("\n").valueOf()));
			}
			/** @type {bool} */
			a.val.key_down = new bool(new bool(false));
			/** @type {bool} */
			a.val.ctrl_down = new bool(new bool(false));
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace iui */
/**
 * @constructor
 * @param {{win?: iui__Window, lines?: Array_string, carrot_top?: int, carrot_left?: int, code_highlight?: iui__SyntaxHighlighter, code_syntax_on?: bool, draw_line_numbers?: bool, last_letter?: string, click_event_fn?: anon_fn_voidptr_voidptr, before_txtc_event_fn?: anon_fn_iui__window_iui__textedit__bool, text_change_event_fn?: anon_fn_voidptr_voidptr, padding_x?: int, padding_y?: int, ctrl_down?: bool, hint?: string, hint_top?: int, line_draw_event_fn?: anon_fn_voidptr_int_int_int}} init
*/
function iui__TextEdit({ win = new iui__Window({}), lines = empty_array(), carrot_top = new int(0), carrot_left = new int(0), code_highlight = new iui__SyntaxHighlighter({}), code_syntax_on = new bool(true), draw_line_numbers = new bool(true), last_letter = new string(""), click_event_fn = undefined, before_txtc_event_fn = undefined, text_change_event_fn = undefined, padding_x = new int(0), padding_y = new int(0), ctrl_down = new bool(false), hint = new string(""), hint_top = new int(-1), line_draw_event_fn = undefined }) {
	this.win = win
	this.lines = lines
	this.carrot_top = carrot_top
	this.carrot_left = carrot_left
	this.code_highlight = code_highlight
	this.code_syntax_on = code_syntax_on
	this.draw_line_numbers = draw_line_numbers
	this.last_letter = last_letter
	this.click_event_fn = click_event_fn
	this.before_txtc_event_fn = before_txtc_event_fn
	this.text_change_event_fn = text_change_event_fn
	this.padding_x = padding_x
	this.padding_y = padding_y
	this.ctrl_down = ctrl_down
	this.hint = hint
	this.hint_top = hint_top
	this.line_draw_event_fn = line_draw_event_fn
};
iui__TextEdit.prototype = {
	...iui__Component_A.prototype,
	toString() {
		return `iui__TextEdit { win: ${this["win"].toString()} , lines: ${this["lines"].toString()} , carrot_top: ${this["carrot_top"].toString()} , carrot_left: ${this["carrot_left"].toString()} , code_highlight: ${this["code_highlight"].toString()} , code_syntax_on: ${this["code_syntax_on"].toString()} , draw_line_numbers: ${this["draw_line_numbers"].toString()} , last_letter: "${this["last_letter"].toString()}", click_event_fn: ${this["click_event_fn"].toString()} , before_txtc_event_fn: ${this["before_txtc_event_fn"].toString()} , text_change_event_fn: ${this["text_change_event_fn"].toString()} , padding_x: ${this["padding_x"].toString()} , padding_y: ${this["padding_y"].toString()} , ctrl_down: ${this["ctrl_down"].toString()} , hint: "${this["hint"].toString()}", hint_top: ${this["hint_top"].toString()} , line_draw_event_fn: ${this["line_draw_event_fn"].toString()} }`
	},
	/** @type {iui__Window} */
	win: new iui__Window({}),
	/** @type {Array_string} */
	lines: empty_array(),
	/** @type {int} */
	carrot_top: new int(0),
	/** @type {int} */
	carrot_left: new int(0),
	/** @type {iui__SyntaxHighlighter} */
	code_highlight: new iui__SyntaxHighlighter({}),
	/** @type {bool} */
	code_syntax_on: new bool(false),
	/** @type {bool} */
	draw_line_numbers: new bool(false),
	/** @type {string} */
	last_letter: new string(""),
	/** @type {anon_fn_voidptr_voidptr} */
	click_event_fn: undefined,
	/** @type {anon_fn_iui__window_iui__textedit__bool} */
	before_txtc_event_fn: undefined,
	/** @type {anon_fn_voidptr_voidptr} */
	text_change_event_fn: undefined,
	/** @type {int} */
	padding_x: new int(0),
	/** @type {int} */
	padding_y: new int(0),
	/** @type {bool} */
	ctrl_down: new bool(false),
	/** @type {string} */
	hint: new string(""),
	/** @type {int} */
	hint_top: new int(0),
	/** @type {anon_fn_voidptr_int_int_int} */
	line_draw_event_fn: undefined,
	$toJS() { return this; }
	};

/**
 * @constructor
 * @param {{line?: int, hover_text?: string, box_color?: gx__Color}} init
*/
function iui__NumberHover({ line = new int(0), hover_text = new string(""), box_color = new gx__Color({}) }) {
	this.line = line
	this.hover_text = hover_text
	this.box_color = box_color
};
iui__NumberHover.prototype = {
	toString() {
		return `iui__NumberHover { line: ${this["line"].toString()} , hover_text: "${this["hover_text"].toString()}", box_color: ${this["box_color"].toString()} }`
	},
	/** @type {int} */
	line: new int(0),
	/** @type {string} */
	hover_text: new string(""),
	/** @type {gx__Color} */
	box_color: new gx__Color({}),
	$toJS() { return this; }
	};

/**
 * @function
 * @param {iui__NumberHover} action
 * @returns {void}
*/
function iui__TextEdit_add_number_hover_action(_v_this, action) {
_v_this = new $ref(_v_this)
action = new $ref(action)
	try {
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {voidptr} window
 * @param {string} text
 * @returns {iui__TextEdit}
*/
function iui__textedit(window, text) {
	try {
		return new $ref((function() {
			let _tmp147 = new iui__TextEdit({});
			_tmp147.win = new $ref(window);
			_tmp147.lines = string_split(text,new string("\n"));
			_tmp147.code_highlight = iui__syntax_highlight_for_v();
			_tmp147.click_event_fn = (function () { 
			return function (a, b) {
			}})()
			;
			_tmp147.before_txtc_event_fn = (function () { 
			return function (a, b) {
				a = new $ref(a)
				return new bool(false);
			}})()
			;
			_tmp147.text_change_event_fn = (function () { 
			return function (a, b) {
			}})()
			;
			_tmp147.line_draw_event_fn = (function () { 
			return function (a, b, c, d) {
			}})()
			;
			return _tmp147;
		})()
		);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [deprecated] */
/**
 * @function
 * @deprecated
 * @param {voidptr} window
 * @param {Array_string} text
 * @returns {iui__TextEdit}
*/
function iui__textedit_from_array(window, text) {
	try {
		return new $ref((function() {
			let _tmp148 = new iui__TextEdit({});
			_tmp148.win = new $ref(window);
			_tmp148.lines = text;
			_tmp148.code_highlight = iui__syntax_highlight_for_v();
			_tmp148.click_event_fn = (function () { 
			return function (a, b) {
			}})()
			;
			_tmp148.before_txtc_event_fn = (function () { 
			return function (a, b) {
				a = new $ref(a)
				return new bool(false);
			}})()
			;
			_tmp148.text_change_event_fn = (function () { 
			return function (a, b) {
			}})()
			;
			_tmp148.line_draw_event_fn = (function () { 
			return function (a, b, c, d) {
			}})()
			;
			return _tmp148;
		})()
		);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {int}
*/
function iui__TextEdit_draw_line_number_background(_v_this) {
_v_this = new $ref(_v_this)
	try {
		if ((new bool( new bool(new iui__SyntaxHighlighter( _v_this.val.code_highlight.valueOf().valueOf() != new int(0).valueOf().valueOf())).valueOf() && _v_this.val.code_syntax_on.valueOf())).valueOf()) {
			/** @type {int} */
			const padding_x = new int(iui__text_width(_v_this.val.win, int_str((new int( _v_this.val.lines.len.valueOf() * new int(10).valueOf())))));
			iui__Window_draw_bordered_rect(_v_this.val.win.valueOf(),new int( _v_this.val.x.valueOf() + new int(1).valueOf()), new int( _v_this.val.y.valueOf() + new int(1).valueOf()), padding_x, new int( _v_this.val.height.valueOf() - new int(2).valueOf()), new int(2), _v_this.val.win.val.theme.button_bg_normal, _v_this.val.win.val.theme.button_bg_normal);
			return new int( padding_x.valueOf() + new int(4).valueOf());
		}
		return new int(4);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__TextEdit_delete_current_line(_v_this) {
_v_this = new $ref(_v_this)
	try {
		array_delete(_v_this.val.lines,_v_this.val.carrot_top);
		/** @type {int} */
		_v_this.val.carrot_top.val = Math.floor(_v_this.val.carrot_top - new int(new int(1)));
		/** @type {int} */
		_v_this.val.carrot_left = new int(_v_this.val.lines.arr.get(new int(_v_this.val.carrot_top.valueOf())).len);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} x
 * @param {int} y
 * @param {gx__TextCfg} confg
 * @returns {void}
*/
function iui__TextEdit_draw_caret(_v_this, x, y, confg) {
_v_this = new $ref(_v_this)
	try {
		/** @type {int} */
		const wid = new int(new int( x.valueOf() - (new int( iui__text_width(_v_this.val.win, new string("|")).valueOf() / new int(2).valueOf())).valueOf()));
		gg__Context_draw_text(_v_this.val.win.val.gg.valueOf(),new int( _v_this.val.x.valueOf() + wid.valueOf()), y, new string("|"), confg);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} index
 * @param {int} linec
 * @returns {multi_return_gx__Color_int_rune}
*/
function iui__TextEdit_get_color(_v_this, index, linec) {
_v_this = new $ref(_v_this)
	try {
		/** @type {string} */
		const line = new string(_v_this.val.lines.arr.get(new int(linec.valueOf())));
		/** @type {string} */
		const strr = new string(string_substr_ni(line,index, new int( index.valueOf() + new int(10).valueOf())));
		/** @type {iui__SyntaxHighlighter} */
		const sh = _v_this.val.code_highlight;
		let _tmp149 = sh.val.colors;
		for (var _tmp150 in _tmp149.map) {
			let color = _tmp149.map[_tmp150];
			let key = _tmp150;
			try { 
				if ((sh.val.keywords.has(key.$toJS())).valueOf()) {
					/** @type {Array_string} */
					const words = sh.val.keywords.get(key.$toJS());
					for (const word of words) {
						try { 
							if ((string_starts_with(strr,word)).valueOf()) {
								return [color, new int( word.len.valueOf() - new int(1).valueOf()), new byte(' ')];
							}
						} catch (e) {
						 if (e instanceof BreakException) { break; }
						 else if (e instanceof ContinueException) { continue; }
						 else { throw e; } }
					}
					
				}
				if ((sh.val.between.has(key.$toJS())).valueOf()) {
					/** @type {Array_string} */
					const words = sh.val.between.get(key.$toJS());
					for (const word of words) {
						try { 
							/** @type {Array_rune} */
							const runes = string_runes(word,);
							if ((new bool(runes.len.valueOf() > new int(2).valueOf())).valueOf()) {
								if ((string_starts_with(strr,Array_rune_string(array_slice(runes,new int(0), (new int( runes.len.valueOf() - new int(1).valueOf()))),))).valueOf()) {
									return [color, new int(0), runes.arr.get(new int(new int( runes.len.valueOf() - new int(1).valueOf()).valueOf()))];
								}
							} else {
								if ((string_starts_with(strr,rune_str(runes.arr.get(new int(new int(0).valueOf()))))).valueOf()) {
									return [color, new int(0), runes.arr.get(new int(new int( runes.len.valueOf() - new int(1).valueOf()).valueOf()))];
								}
							}
						} catch (e) {
						 if (e instanceof BreakException) { break; }
						 else if (e instanceof ContinueException) { continue; }
						 else { throw e; } }
					}
					
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } } 
		}
		
		return [_v_this.val.win.val.theme.text_color, new int(0), new byte(' ')];
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__TextEdit_draw_background(_v_this) {
_v_this = new $ref(_v_this)
	try {
		/** @type {gx__Color} */
		let bg = _v_this.val.win.val.theme.textbox_background;
		/** @type {gx__Color} */
		let border = _v_this.val.win.val.theme.textbox_border;
		/** @type {int} */
		let mid = new int((new int( _v_this.val.x.valueOf() + (new int( _v_this.val.width.valueOf() / new int(2).valueOf())).valueOf())));
		/** @type {int} */
		let midy = new int((new int( _v_this.val.y.valueOf() + (new int( _v_this.val.height.valueOf() / new int(2).valueOf())).valueOf())));
		if ((_v_this.val.is_mouse_rele).valueOf()) {
			if ((!_v_this.val.is_selected.val ).valueOf()) {
				/** @type {gx__Color} */
				bg = _v_this.val.win.val.theme.button_bg_click;
				/** @type {gx__Color} */
				border = _v_this.val.win.val.theme.button_border_click;
			}
			/** @type {bool} */
			_v_this.val.is_selected = new bool(new bool(true));
			iui__TextEdit_click_event_fn(_v_this.valueOf(),_v_this.val.win, _v_this);
			iui__TextEdit_change_caret_on_click(_v_this.valueOf(),);
			/** @type {bool} */
			_v_this.val.is_mouse_rele = new bool(new bool(false));
		} else {
			if ((new bool( new bool(_v_this.val.win.val.click_x.valueOf() > new int(-1).valueOf()).valueOf() && !(new bool( new bool(iui__abs_T_int(new int( mid.valueOf() - _v_this.val.win.val.mouse_x.valueOf())).valueOf() < (new int( _v_this.val.width.valueOf() / new int(2).valueOf())).valueOf()).valueOf() && new bool(iui__abs_T_int(new int( midy.valueOf() - _v_this.val.win.val.mouse_y.valueOf())).valueOf() < (new int( _v_this.val.height.valueOf() / new int(2).valueOf())).valueOf()).valueOf())).val .valueOf())).valueOf()) {
				/** @type {bool} */
				_v_this.val.is_selected = new bool(new bool(false));
			}
		}
		iui__Window_draw_filled_rect(_v_this.val.win.valueOf(),_v_this.val.x, _v_this.val.y, _v_this.val.width, _v_this.val.height, new int(2), bg, border);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__TextEdit_change_caret_on_click(_v_this) {
_v_this = new $ref(_v_this)
	try {
		/** @type {int} */
		const mx = new int(new int( _v_this.val.win.val.mouse_x.valueOf() - (new int( _v_this.val.x.valueOf() + _v_this.val.padding_x.valueOf())).valueOf()));
		/** @type {int} */
		const my = new int(new int( _v_this.val.win.val.mouse_y.valueOf() - _v_this.val.y.valueOf()));
		/** @type {int} */
		const line_height = new int(iui__text_height(_v_this.val.win, new string("A0{")));
		/** @type {int} */
		const selected_line_int = new int(new int( (new int( my.valueOf() / line_height.valueOf())).valueOf() + _v_this.val.scroll_i.valueOf()));
		if ((new bool(selected_line_int.valueOf() >= _v_this.val.lines.len.valueOf())).valueOf()) {
			return;
		}
		/** @type {string} */
		const line = new string(_v_this.val.lines.arr.get(new int(selected_line_int.valueOf())));
		/** @type {int} */
		let xo = new int(new int(0));
		/** @type {int} */
		let left = new int(new int(0));
		/** @type {int} */
		_v_this.val.carrot_top = new int(selected_line_int);
		/** @type {int} */
		let smalla = new int(new int(-1));
		/** @type {int} */
		let smallb = new int(new int(0));
		for (const r of string_runes(line,)) {
			try { 
				/** @type {string} */
				let strr = new string(rune_str(r));
				if ((new bool(r.valueOf() == new byte('\t').valueOf())).valueOf()) {
					/** @type {string} */
					strr = new string(string_repeat(new string(" "),new int(8)));
				}
				/** @type {int} */
				const rwid = new int(iui__text_width(_v_this.val.win, strr));
				if ((new bool(r.valueOf() == new byte(' ').valueOf())).valueOf()) {
					/** @type {int} */
					xo.val = Math.floor(xo + new int(iui__text_width(_v_this.val.win, new string("."))));
				} else {
					if ((new bool(rwid.valueOf() > new int(5).valueOf())).valueOf()) {
						/** @type {int} */
						xo.val = Math.floor(xo + new int(new int( rwid.valueOf() - new int(1).valueOf())));
					} else {
						/** @type {int} */
						xo.val = Math.floor(xo + new int(rwid));
					}
				}
				/** @type {int} */
				left.val = Math.floor(left + new int(new int(1)));
				/** @type {int} */
				const smallc = new int(iui__abs_T_int(new int( mx.valueOf() - xo.valueOf())));
				if ((new bool( new bool(smallc.valueOf() < smalla.valueOf()).valueOf() || new bool(smalla.valueOf() == new int(-1).valueOf()).valueOf())).valueOf()) {
					/** @type {int} */
					smalla = new int(smallc);
					/** @type {int} */
					smallb = new int(left);
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		/** @type {int} */
		_v_this.val.carrot_left = new int(smallb);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} cl
 * @param {int} spl_len
 * @returns {void}
*/
function iui__TextEdit_draw_scrollbar(com, cl, spl_len) {
com = new $ref(com)
	try {
		/** @type {int} */
		let sth = new int(new int(new f32( (new f32( new f32((com.val.scroll_i)).valueOf() / new f32(spl_len).valueOf())).valueOf() * com.val.height.valueOf())));
		/** @type {int} */
		let enh = new int(new int(new f32( (new f32( new f32(cl).valueOf() / new f32(spl_len).valueOf())).valueOf() * com.val.height.valueOf())));
		/** @type {bool} */
		let requires_scrollbar = new bool((new bool((new int( com.val.height.valueOf() - enh.valueOf())).valueOf() > new int(0).valueOf())));
		if ((requires_scrollbar).valueOf()) {
			iui__Window_draw_bordered_rect(com.val.win.valueOf(),new int( new int( com.val.x.valueOf() + com.val.width.valueOf()).valueOf() - new int(11).valueOf()), new int( com.val.y.valueOf() + new int(1).valueOf()), new int(10), new int( com.val.height.valueOf() - new int(2).valueOf()), new int(2), com.val.win.val.theme.scroll_track_color, com.val.win.val.theme.button_bg_hover);
			iui__Window_draw_bordered_rect(com.val.win.valueOf(),new int( new int( com.val.x.valueOf() + com.val.width.valueOf()).valueOf() - new int(11).valueOf()), new int( new int( com.val.y.valueOf() + sth.valueOf()).valueOf() + new int(1).valueOf()), new int(10), new int( enh.valueOf() - new int(2).valueOf()), new int(2), com.val.win.val.theme.scroll_bar_color, com.val.win.val.theme.scroll_track_color);
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__TextEdit_clamp_caret(_v_this) {
_v_this = new $ref(_v_this)
	try {
		if ((new bool(_v_this.val.carrot_top.valueOf() < new int(0).valueOf())).valueOf()) {
			/** @type {int} */
			_v_this.val.carrot_top = new int(new int(0));
		}
		/** @type {int} */
		const max_top = new int(new int( _v_this.val.lines.len.valueOf() - new int(1).valueOf()));
		if ((new bool(_v_this.val.carrot_top.valueOf() > max_top.valueOf())).valueOf()) {
			/** @type {int} */
			_v_this.val.carrot_top = new int(max_top);
		}
		if ((new bool(_v_this.val.carrot_left.valueOf() < new int(0).valueOf())).valueOf()) {
			/** @type {int} */
			_v_this.val.carrot_left = new int(new int(0));
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__TextEdit_draw(_v_this) {
_v_this = new $ref(_v_this)
	try {
		iui__TextEdit_draw_background(_v_this.valueOf(),);
		if ((string_contains(_v_this.val.text,new string("\r"))).valueOf()) {
			/** @type {string} */
			_v_this.val.text = new string(string_replace(_v_this.val.text,new string("\r\n"), new string("\n")));
		}
		/** @type {Array_string} */
		const lines = _v_this.val.lines;
		/** @type {int} */
		const line_height = new int(iui__text_height(_v_this.val.win, new string("A0{")));
		/** @type {int} */
		const padding_x = new int(iui__TextEdit_draw_line_number_background(_v_this.valueOf(),));
		/** @type {int} */
		_v_this.val.padding_x = new int(padding_x);
		/** @type {int} */
		let oy = new int(new int( _v_this.val.y.valueOf() + _v_this.val.padding_y.valueOf()));
		/** @type {gx__TextCfg} */
		const confg = (function() {
			let _tmp151 = new gx__TextCfg({});
			_tmp151.size = _v_this.val.win.val.font_size;
			_tmp151.color = _v_this.val.win.val.theme.text_color;
			return _tmp151;
		})()
		;
		iui__TextEdit_clamp_caret(_v_this.valueOf(),);
		if ((new bool(_v_this.val.scroll_i.valueOf() < new int(0).valueOf())).valueOf()) {
			/** @type {int} */
			_v_this.val.scroll_i = new int(new int(0));
		}
		/** @type {int} */
		let shown = new int(new int(0));
		for (let line_count = _v_this.val.scroll_i; line_count < lines.len; line_count = new int(line_count + 1)) {
			try { 
				/** @type {string} */
				const line = new string(lines.arr.get(new int(line_count.valueOf())));
				if ((new bool(line_count.valueOf() == _v_this.val.carrot_top.valueOf())).valueOf()) {
					if ((new bool(_v_this.val.carrot_left.valueOf() > line.len.valueOf())).valueOf()) {
						/** @type {int} */
						_v_this.val.carrot_left = new int(line.len);
					}
					/** @type {int} */
					const padd = new int(new int( padding_x.valueOf() - new int(4).valueOf()));
					if ((new bool( _v_this.val.code_syntax_on.valueOf() || new bool(lines.len.valueOf() > new int(1).valueOf()).valueOf())).valueOf()) {
						gg__Context_draw_rect_filled(_v_this.val.win.val.gg.valueOf(),new int( _v_this.val.x.valueOf() + padd.valueOf()), oy, new int( _v_this.val.width.valueOf() - padd.valueOf()), line_height, _v_this.val.win.val.theme.button_bg_hover);
					}
				}
				/** @type {int} */
				const line_num = new int(new int( line_count.valueOf() + new int(1).valueOf()));
				if ((new bool( new bool(lines.len.valueOf() > new int(1).valueOf()).valueOf() && _v_this.val.draw_line_numbers.valueOf())).valueOf()) {
					gg__Context_draw_text(_v_this.val.win.val.gg.valueOf(),_v_this.val.x, oy, int_str(line_num), confg);
				}
				/** @type {Array_rune} */
				const runes = string_runes(line,);
				/** @type {int} */
				let xo = new int(padding_x);
				/** @type {int} */
				let left = new int(new int(0));
				/** @type {gx__Color} */
				let color = _v_this.val.win.val.theme.text_color;
				/** @type {int} */
				let keep_color_for = new int(new int(0));
				/** @type {rune} */
				let keep_color_util = new byte(' ');
				for (const r of runes) {
					try { 
						if ((new bool( new bool(keep_color_for.valueOf() == new int(0).valueOf()).valueOf() && new bool(keep_color_util.valueOf() == new byte(' ').valueOf()).valueOf())).valueOf()) {
							if ((_v_this.val.code_syntax_on).valueOf()) {
								let [color, keep_color_for, keep_color_util] = iui__TextEdit_get_color(_v_this.valueOf(),left, line_count);
							}
						} else {
							if ((new bool(keep_color_for.valueOf() > new int(0).valueOf())).valueOf()) {
								/** @type {int} */
								keep_color_for.val = Math.floor(keep_color_for - new int(new int(1)));
							}
							if ((new bool(r.valueOf() == keep_color_util.valueOf())).valueOf()) {
								/** @type {rune} */
								keep_color_util = new byte(' ');
							}
						}
						if ((new bool(xo.valueOf() > _v_this.val.width.valueOf())).valueOf()) {
							break;
						}
						/** @type {string} */
						let strr = new string(rune_str(r));
						if ((new bool(r.valueOf() == new byte('\t').valueOf())).valueOf()) {
							/** @type {string} */
							strr = new string(string_repeat(new string(" "),new int(8)));
						}
						if ((!(new bool( new bool(r.valueOf() == new byte(' ').valueOf()).valueOf() || new bool(r.valueOf() == new byte('\t').valueOf()).valueOf())).val ).valueOf()) {
							gg__Context_draw_text(_v_this.val.win.val.gg.valueOf(),new int( _v_this.val.x.valueOf() + xo.valueOf()), oy, strr, (function() {
								let _tmp152 = new gx__TextCfg({});
								_tmp152.color = color;
								_tmp152.size = confg.size;
								return _tmp152;
							})()
							);
						}
						/** @type {int} */
						const rwid = new int(iui__text_width(_v_this.val.win, strr));
						if ((new bool(line_count.valueOf() == _v_this.val.carrot_top.valueOf())).valueOf()) {
							if ((new bool(left.valueOf() == _v_this.val.carrot_left.valueOf())).valueOf()) {
								iui__TextEdit_draw_caret(_v_this.valueOf(),xo, oy, confg);
							}
						}
						if ((new bool(r.valueOf() == new byte(' ').valueOf())).valueOf()) {
							/** @type {int} */
							xo.val = Math.floor(xo + new int(iui__text_width(_v_this.val.win, new string("."))));
						} else {
							if ((new bool(rwid.valueOf() > new int(5).valueOf())).valueOf()) {
								/** @type {int} */
								xo.val = Math.floor(xo + new int(new int( rwid.valueOf() - new int(1).valueOf())));
							} else {
								/** @type {int} */
								xo.val = Math.floor(xo + new int(rwid));
							}
						}
						/** @type {int} */
						left.val = Math.floor(left + new int(new int(1)));
						if ((new bool(line_count.valueOf() == _v_this.val.carrot_top.valueOf())).valueOf()) {
							if ((new bool(left.valueOf() == _v_this.val.carrot_left.valueOf())).valueOf()) {
								iui__TextEdit_draw_caret(_v_this.valueOf(),xo, oy, confg);
							}
						}
					} catch (e) {
					 if (e instanceof BreakException) { break; }
					 else if (e instanceof ContinueException) { continue; }
					 else { throw e; } }
				}
				
				iui__TextEdit_line_draw_event_fn(_v_this.valueOf(),_v_this, line_count, xo, oy);
				if ((new bool( new bool(runes.len.valueOf() == new int(0).valueOf()).valueOf() && new bool(line_count.valueOf() == _v_this.val.carrot_top.valueOf()).valueOf())).valueOf()) {
					iui__TextEdit_draw_caret(_v_this.valueOf(),xo, oy, confg);
				}
				if ((new bool(oy.valueOf() > (new int( _v_this.val.y.valueOf() + _v_this.val.height.valueOf())).valueOf())).valueOf()) {
					break;
				}
				/** @type {int} */
				shown.val = Math.floor(shown + new int(new int(1)));
				/** @type {int} */
				oy.val = Math.floor(oy + new int(line_height));
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		iui__TextEdit_draw_scrollbar(_v_this.valueOf(),shown, _v_this.val.lines.len);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @constructor
 * @param {{colors?: Map_string_gx__Color, keywords?: Map_string_Array_string, between?: Map_string_Array_string}} init
*/
function iui__SyntaxHighlighter({ colors = new map(new Map()), keywords = new map(new Map()), between = new map(new Map()) }) {
	this.colors = colors
	this.keywords = keywords
	this.between = between
};
iui__SyntaxHighlighter.prototype = {
	toString() {
		return `iui__SyntaxHighlighter { colors: ${this["colors"].toString()} , keywords: ${this["keywords"].toString()} , between: ${this["between"].toString()} }`
	},
	/** @type {Map_string_gx__Color} */
	colors: new map(new Map()),
	/** @type {Map_string_Array_string} */
	keywords: new map(new Map()),
	/** @type {Map_string_Array_string} */
	between: new map(new Map()),
	$toJS() { return this; }
	};

/**
 * @function
 * @returns {iui__SyntaxHighlighter}
*/
function iui__syntax_highlight_for_v() {
	try {
		/** @type {iui__SyntaxHighlighter} */
		let sh = new $ref(new iui__SyntaxHighlighter({}));
		/** @type {gx__Color} */
		sh.val.colors.length++;
		sh.val.colors.map[new string("numbers").$toJS()] = gx__rgb(new int(240), new int(200), new int(0));
		/** @type {gx__Color} */
		sh.val.colors.length++;
		sh.val.colors.map[new string("decl").$toJS()] = gx__rgb(new int(0), new int(0), new int(200));
		/** @type {gx__Color} */
		sh.val.colors.length++;
		sh.val.colors.map[new string("string").$toJS()] = gx__rgb(new int(200), new int(100), new int(0));
		/** @type {gx__Color} */
		sh.val.colors.length++;
		sh.val.colors.map[new string("oper").$toJS()] = gx__rgb(new int(120), new int(81), new int(255));
		/** @type {gx__Color} */
		sh.val.colors.length++;
		sh.val.colors.map[new string("comment").$toJS()] = gx__rgb(new int(0), new int(150), new int(0));
		/** @type {gx__Color} */
		sh.val.colors.length++;
		sh.val.colors.map[new string("dec2").$toJS()] = gx__rgb(new int(0), new int(0), new int(255));
		/** @type {gx__Color} */
		sh.val.colors.length++;
		sh.val.colors.map[new string("dec3").$toJS()] = gx__rgb(new int(0), new int(0), new int(255));
		/** @type {Array_string} */
		sh.val.keywords.length++;
		sh.val.keywords.map[new string("numbers").$toJS()] = new array(new array_buffer({arr: [new string(new string("0")), new string(new string("1")), new string(new string("2")), new string(new string("3")), new string(new string("4")), new string(new string("5")), new string(new string("6")), new string(new string("7")), new string(new string("8")), new string(new string("9"))], len: new int(10), cap: new int(10)}));
		/** @type {Array_string} */
		sh.val.keywords.length++;
		sh.val.keywords.map[new string("decl").$toJS()] = string_split(new string("mut:,pub:,pub mut:,mut,pub ,unsafe ,default ,struct,type ,enum ,struct ,union ,const"),new string(","));
		/** @type {Array_string} */
		sh.val.keywords.length++;
		sh.val.keywords.map[new string("dec2").$toJS()] = new array(new array_buffer({arr: [new string(new string("import")), new string(new string("break ")), new string(new string("byte ")), new string(new string("continue ")), new string(new string("else ")), new string(new string("false ")), new string(new string("fn ")), new string(new string("for ")), new string(new string("if ")), new string(new string("import ")), new string(new string("interface "))], len: new int(11), cap: new int(11)}));
		/** @type {Array_string} */
		sh.val.keywords.length++;
		sh.val.keywords.map[new string("dec3").$toJS()] = string_split(new string("is |module |return |select |shared |true |typeof union"),new string("|"));
		/** @type {Array_string} */
		sh.val.keywords.length++;
		sh.val.keywords.map[new string("oper").$toJS()] = string_split(new string("[,],{,}"),new string(","));
		/** @type {Array_string} */
		sh.val.between.length++;
		sh.val.between.map[new string("string").$toJS()] = new array(new array_buffer({arr: [new string(new string("'")), new string(new string("\""))], len: new int(2), cap: new int(2)}));
		/** @type {Array_string} */
		sh.val.between.length++;
		sh.val.between.map[new string("comment").$toJS()] = new array(new array_buffer({arr: [new string(new string("//\n"))], len: new int(1), cap: new int(1)}));
		return sh;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace iui */
/**
 * @constructor
 * @param {{win?: iui__Window, carrot_top?: int, carrot_left?: int, ctrl_down?: bool, last_letter?: string, click_event_fn?: anon_fn_voidptr_voidptr, before_txtc_event_fn?: anon_fn_iui__window_iui__textfield__bool, text_change_event_fn?: anon_fn_voidptr_voidptr, padding_x?: int}} init
*/
function iui__TextField({ win = new iui__Window({}), carrot_top = new int(0), carrot_left = new int(0), ctrl_down = new bool(false), last_letter = new string(""), click_event_fn = undefined, before_txtc_event_fn = undefined, text_change_event_fn = undefined, padding_x = new int(0) }) {
	this.win = win
	this.carrot_top = carrot_top
	this.carrot_left = carrot_left
	this.ctrl_down = ctrl_down
	this.last_letter = last_letter
	this.click_event_fn = click_event_fn
	this.before_txtc_event_fn = before_txtc_event_fn
	this.text_change_event_fn = text_change_event_fn
	this.padding_x = padding_x
};
iui__TextField.prototype = {
	...iui__Component_A.prototype,
	toString() {
		return `iui__TextField { win: ${this["win"].toString()} , carrot_top: ${this["carrot_top"].toString()} , carrot_left: ${this["carrot_left"].toString()} , ctrl_down: ${this["ctrl_down"].toString()} , last_letter: "${this["last_letter"].toString()}", click_event_fn: ${this["click_event_fn"].toString()} , before_txtc_event_fn: ${this["before_txtc_event_fn"].toString()} , text_change_event_fn: ${this["text_change_event_fn"].toString()} , padding_x: ${this["padding_x"].toString()} }`
	},
	/** @type {iui__Window} */
	win: new iui__Window({}),
	/** @type {int} */
	carrot_top: new int(0),
	/** @type {int} */
	carrot_left: new int(0),
	/** @type {bool} */
	ctrl_down: new bool(false),
	/** @type {string} */
	last_letter: new string(""),
	/** @type {anon_fn_voidptr_voidptr} */
	click_event_fn: undefined,
	/** @type {anon_fn_iui__window_iui__textfield__bool} */
	before_txtc_event_fn: undefined,
	/** @type {anon_fn_voidptr_voidptr} */
	text_change_event_fn: undefined,
	/** @type {int} */
	padding_x: new int(0),
	$toJS() { return this; }
	};

/**
 * @function
 * @param {iui__Window} win
 * @param {string} text
 * @returns {iui__TextField}
*/
function iui__textfield(win, text) {
win = new $ref(win)
	try {
		return new $ref((function() {
			let _tmp153 = new iui__TextField({});
			_tmp153.win = win;
			_tmp153.text = text;
			_tmp153.click_event_fn = (function () { 
			return function (a, b) {
			}})()
			;
			_tmp153.before_txtc_event_fn = (function () { 
			return function (a, b) {
				a = new $ref(a)
				return new bool(false);
			}})()
			;
			_tmp153.text_change_event_fn = (function () { 
			return function (a, b) {
			}})()
			;
			return _tmp153;
		})()
		);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__TextField_draw_background(_v_this) {
_v_this = new $ref(_v_this)
	try {
		/** @type {gx__Color} */
		let bg = _v_this.val.win.val.theme.textbox_background;
		/** @type {gx__Color} */
		let border = _v_this.val.win.val.theme.textbox_border;
		/** @type {int} */
		const mid = new int((new int( _v_this.val.x.valueOf() + (new int( _v_this.val.width.valueOf() / new int(2).valueOf())).valueOf())));
		/** @type {int} */
		const midy = new int((new int( _v_this.val.y.valueOf() + (new int( _v_this.val.height.valueOf() / new int(2).valueOf())).valueOf())));
		if ((_v_this.val.is_mouse_rele).valueOf()) {
			/** @type {bool} */
			_v_this.val.is_selected = new bool(new bool(true));
			iui__TextField_click_event_fn(_v_this.valueOf(),_v_this.val.win, _v_this);
			/** @type {gx__Color} */
			bg = _v_this.val.win.val.theme.button_bg_click;
			/** @type {gx__Color} */
			border = _v_this.val.win.val.theme.button_border_click;
			/** @type {bool} */
			_v_this.val.is_mouse_rele = new bool(new bool(false));
		} else {
			if ((new bool( new bool(_v_this.val.win.val.click_x.valueOf() > new int(-1).valueOf()).valueOf() && !(new bool( new bool(iui__abs_T_int(new int( mid.valueOf() - _v_this.val.win.val.mouse_x.valueOf())).valueOf() < (new int( _v_this.val.width.valueOf() / new int(2).valueOf())).valueOf()).valueOf() && new bool(iui__abs_T_int(new int( midy.valueOf() - _v_this.val.win.val.mouse_y.valueOf())).valueOf() < (new int( _v_this.val.height.valueOf() / new int(2).valueOf())).valueOf()).valueOf())).val .valueOf())).valueOf()) {
				/** @type {bool} */
				_v_this.val.is_selected = new bool(new bool(false));
			}
		}
		iui__Window_draw_filled_rect(_v_this.val.win.valueOf(),_v_this.val.x, _v_this.val.y, _v_this.val.width, _v_this.val.height, new int(2), bg, border);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__TextField_draw(_v_this) {
_v_this = new $ref(_v_this)
	try {
		/** @type {gg__Context} */
		const ctx = _v_this.val.win.val.gg;
		iui__TextField_draw_background(_v_this.valueOf(),);
		/** @type {int} */
		const xp = new int(new int( _v_this.val.x.valueOf() + new int(4).valueOf()));
		/** @type {int} */
		const yp = new int(new int( _v_this.val.y.valueOf() + new int(4).valueOf()));
		/** @type {gx__Color} */
		const color = _v_this.val.win.val.theme.text_color;
		/** @type {int} */
		_v_this.val.scroll_i = new int(new int(0));
		if ((new bool(_v_this.val.carrot_left.valueOf() < new int(0).valueOf())).valueOf()) {
			/** @type {int} */
			_v_this.val.carrot_left = new int(new int(0));
		}
		if ((new bool(_v_this.val.carrot_left.valueOf() > _v_this.val.text.len.valueOf())).valueOf()) {
			/** @type {int} */
			_v_this.val.carrot_left = new int(_v_this.val.text.len);
		}
		/** @type {gx__TextCfg} */
		const cfg = (function() {
			let _tmp154 = new gx__TextCfg({});
			_tmp154.color = color;
			return _tmp154;
		})()
		;
		gg__Context_draw_text(ctx.valueOf(),xp, new int( _v_this.val.y.valueOf() + new int(4).valueOf()), _v_this.val.text, cfg);
		/** @type {int} */
		const pipe_width = new int(iui__text_width(_v_this.val.win, new string("|")));
		/** @type {int} */
		const wid = new int(iui__text_width(_v_this.val.win, string_slice(_v_this.val.text,new int(0), _v_this.val.carrot_left)));
		gg__Context_draw_text(ctx.valueOf(),new int( new int( xp.valueOf() + wid.valueOf()).valueOf() - pipe_width.valueOf()), yp, new string("|"), cfg);
		iui__TextField_mouse_down_caret(_v_this.valueOf(),);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__TextField_mouse_down_caret(_v_this) {
_v_this = new $ref(_v_this)
	try {
		if ((!_v_this.val.is_mouse_down.val ).valueOf()) {
			return;
		}
		/** @type {int} */
		const x = new int(((new bool(_v_this.val.rx.valueOf() != new int(0).valueOf())).valueOf() ? _v_this.val.rx : _v_this.val.x));
		/** @type {int} */
		const mx = new int(new int( _v_this.val.win.val.mouse_x.valueOf() - x.valueOf()));
		/** @type {int} */
		const wid_char = new int(iui__text_width(_v_this.val.win, new string(".")));
		for (let i = new int(0); i < new int( _v_this.val.text.len.valueOf() - new int(1).valueOf()); i = new int(i + 1)) {
			try { 
				/** @type {string} */
				const substr = new string(string_slice(_v_this.val.text,new int(0), i));
				/** @type {int} */
				const wid = new int(iui__text_width(_v_this.val.win, substr));
				if ((new bool(iui__abs_T_int(new int( mx.valueOf() - wid.valueOf())).valueOf() <= wid_char.valueOf())).valueOf()) {
					/** @type {int} */
					_v_this.val.carrot_left = new int(i);
					return;
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace iui */
/**
 * @function
 * @returns {iui__Theme}
*/
function iui__get_system_theme() {
	try {
		if (($process.platform == "windows"))
		{
		return iui__theme_default();
		}
		else
		{
		return iui__theme_minty();
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {Array_iui__Theme}
*/
function iui__get_all_themes() {
	try {
		return new array(new array_buffer({arr: [iui__theme_default(), iui__theme_dark(), iui__theme_dark_hc(), iui__theme_black_red(), iui__theme_minty()], len: new int(5), cap: new int(5)}));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} name
 * @returns {iui__Theme}
*/
function iui__theme_by_name(name) {
	try {
		/** @type {Array_iui__Theme} */
		const themes = iui__get_all_themes().filter(it => new bool(it.name.valueOf() == name.valueOf()));
		if ((new bool(themes.len.valueOf() == new int(0).valueOf())).valueOf()) {
			return iui__get_system_theme();
		}
		return themes.arr.get(new int(new int(0).valueOf()));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @constructor
 * @param {{name?: string, text_color?: gx__Color, background?: gx__Color, button_bg_normal?: gx__Color, button_bg_hover?: gx__Color, button_bg_click?: gx__Color, button_border_normal?: gx__Color, button_border_hover?: gx__Color, button_border_click?: gx__Color, menubar_background?: gx__Color, menubar_border?: gx__Color, dropdown_background?: gx__Color, dropdown_border?: gx__Color, textbox_background?: gx__Color, textbox_border?: gx__Color, checkbox_bg?: gx__Color, checkbox_selected?: gx__Color, progressbar_fill?: gx__Color, scroll_track_color?: gx__Color, scroll_bar_color?: gx__Color}} init
*/
function iui__Theme({ name = new string(""), text_color = new gx__Color({}), background = new gx__Color({}), button_bg_normal = new gx__Color({}), button_bg_hover = new gx__Color({}), button_bg_click = new gx__Color({}), button_border_normal = new gx__Color({}), button_border_hover = new gx__Color({}), button_border_click = new gx__Color({}), menubar_background = new gx__Color({}), menubar_border = new gx__Color({}), dropdown_background = new gx__Color({}), dropdown_border = new gx__Color({}), textbox_background = new gx__Color({}), textbox_border = new gx__Color({}), checkbox_bg = new gx__Color({}), checkbox_selected = new gx__Color({}), progressbar_fill = new gx__Color({}), scroll_track_color = new gx__Color({}), scroll_bar_color = new gx__Color({}) }) {
	this.name = name
	this.text_color = text_color
	this.background = background
	this.button_bg_normal = button_bg_normal
	this.button_bg_hover = button_bg_hover
	this.button_bg_click = button_bg_click
	this.button_border_normal = button_border_normal
	this.button_border_hover = button_border_hover
	this.button_border_click = button_border_click
	this.menubar_background = menubar_background
	this.menubar_border = menubar_border
	this.dropdown_background = dropdown_background
	this.dropdown_border = dropdown_border
	this.textbox_background = textbox_background
	this.textbox_border = textbox_border
	this.checkbox_bg = checkbox_bg
	this.checkbox_selected = checkbox_selected
	this.progressbar_fill = progressbar_fill
	this.scroll_track_color = scroll_track_color
	this.scroll_bar_color = scroll_bar_color
};
iui__Theme.prototype = {
	toString() {
		return `iui__Theme { name: "${this["name"].toString()}", text_color: ${this["text_color"].toString()} , background: ${this["background"].toString()} , button_bg_normal: ${this["button_bg_normal"].toString()} , button_bg_hover: ${this["button_bg_hover"].toString()} , button_bg_click: ${this["button_bg_click"].toString()} , button_border_normal: ${this["button_border_normal"].toString()} , button_border_hover: ${this["button_border_hover"].toString()} , button_border_click: ${this["button_border_click"].toString()} , menubar_background: ${this["menubar_background"].toString()} , menubar_border: ${this["menubar_border"].toString()} , dropdown_background: ${this["dropdown_background"].toString()} , dropdown_border: ${this["dropdown_border"].toString()} , textbox_background: ${this["textbox_background"].toString()} , textbox_border: ${this["textbox_border"].toString()} , checkbox_bg: ${this["checkbox_bg"].toString()} , checkbox_selected: ${this["checkbox_selected"].toString()} , progressbar_fill: ${this["progressbar_fill"].toString()} , scroll_track_color: ${this["scroll_track_color"].toString()} , scroll_bar_color: ${this["scroll_bar_color"].toString()} }`
	},
	/** @type {string} */
	name: new string(""),
	/** @type {gx__Color} */
	text_color: new gx__Color({}),
	/** @type {gx__Color} */
	background: new gx__Color({}),
	/** @type {gx__Color} */
	button_bg_normal: new gx__Color({}),
	/** @type {gx__Color} */
	button_bg_hover: new gx__Color({}),
	/** @type {gx__Color} */
	button_bg_click: new gx__Color({}),
	/** @type {gx__Color} */
	button_border_normal: new gx__Color({}),
	/** @type {gx__Color} */
	button_border_hover: new gx__Color({}),
	/** @type {gx__Color} */
	button_border_click: new gx__Color({}),
	/** @type {gx__Color} */
	menubar_background: new gx__Color({}),
	/** @type {gx__Color} */
	menubar_border: new gx__Color({}),
	/** @type {gx__Color} */
	dropdown_background: new gx__Color({}),
	/** @type {gx__Color} */
	dropdown_border: new gx__Color({}),
	/** @type {gx__Color} */
	textbox_background: new gx__Color({}),
	/** @type {gx__Color} */
	textbox_border: new gx__Color({}),
	/** @type {gx__Color} */
	checkbox_bg: new gx__Color({}),
	/** @type {gx__Color} */
	checkbox_selected: new gx__Color({}),
	/** @type {gx__Color} */
	progressbar_fill: new gx__Color({}),
	/** @type {gx__Color} */
	scroll_track_color: new gx__Color({}),
	/** @type {gx__Color} */
	scroll_bar_color: new gx__Color({}),
	$toJS() { return this; }
	};

/**
 * @function
 * @returns {iui__Theme}
*/
function iui__theme_default() {
	try {
		return (function() {
			let _tmp155 = new iui__Theme({});
			_tmp155.name = new string("Default");
			_tmp155.text_color = gx__black;
			_tmp155.background = gx__rgb(new int(248), new int(248), new int(248));
			_tmp155.button_bg_normal = gx__rgb(new int(240), new int(240), new int(240));
			_tmp155.button_bg_hover = gx__rgb(new int(229), new int(241), new int(251));
			_tmp155.button_bg_click = gx__rgb(new int(204), new int(228), new int(247));
			_tmp155.button_border_normal = gx__rgb(new int(190), new int(190), new int(190));
			_tmp155.button_border_hover = gx__rgb(new int(0), new int(120), new int(215));
			_tmp155.button_border_click = gx__rgb(new int(0), new int(84), new int(153));
			_tmp155.menubar_background = gx__rgb(new int(255), new int(255), new int(255));
			_tmp155.menubar_border = gx__rgb(new int(255), new int(255), new int(255));
			_tmp155.dropdown_background = gx__rgb(new int(255), new int(255), new int(255));
			_tmp155.dropdown_border = gx__rgb(new int(224), new int(224), new int(224));
			_tmp155.textbox_background = gx__rgb(new int(255), new int(255), new int(255));
			_tmp155.textbox_border = gx__rgb(new int(215), new int(215), new int(215));
			_tmp155.checkbox_selected = gx__rgb(new int(37), new int(161), new int(218));
			_tmp155.checkbox_bg = gx__rgb(new int(254), new int(254), new int(254));
			_tmp155.progressbar_fill = gx__rgb(new int(37), new int(161), new int(218));
			_tmp155.scroll_track_color = gx__rgb(new int(240), new int(240), new int(240));
			_tmp155.scroll_bar_color = gx__rgb(new int(205), new int(205), new int(205));
			return _tmp155;
		})()
		;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {iui__Theme}
*/
function iui__theme_dark() {
	try {
		return (function() {
			let _tmp156 = new iui__Theme({});
			_tmp156.name = new string("Dark");
			_tmp156.text_color = gx__rgb(new int(245), new int(245), new int(245));
			_tmp156.background = gx__rgb(new int(50), new int(50), new int(50));
			_tmp156.button_bg_normal = gx__rgb(new int(10), new int(10), new int(10));
			_tmp156.button_bg_hover = gx__rgb(new int(70), new int(70), new int(70));
			_tmp156.button_bg_click = gx__rgb(new int(50), new int(50), new int(50));
			_tmp156.button_border_normal = gx__rgb(new int(130), new int(130), new int(130));
			_tmp156.button_border_hover = gx__rgb(new int(0), new int(120), new int(215));
			_tmp156.button_border_click = gx__rgb(new int(0), new int(84), new int(153));
			_tmp156.menubar_background = gx__rgb(new int(30), new int(30), new int(30));
			_tmp156.menubar_border = gx__rgb(new int(30), new int(30), new int(30));
			_tmp156.dropdown_background = gx__rgb(new int(10), new int(10), new int(10));
			_tmp156.dropdown_border = gx__rgb(new int(0), new int(0), new int(0));
			_tmp156.textbox_background = gx__rgb(new int(10), new int(10), new int(10));
			_tmp156.textbox_border = gx__rgb(new int(130), new int(130), new int(130));
			_tmp156.checkbox_selected = gx__rgb(new int(130), new int(130), new int(130));
			_tmp156.checkbox_bg = gx__rgb(new int(5), new int(5), new int(5));
			_tmp156.progressbar_fill = gx__rgb(new int(130), new int(130), new int(130));
			_tmp156.scroll_track_color = gx__rgb(new int(0), new int(0), new int(0));
			_tmp156.scroll_bar_color = gx__rgb(new int(180), new int(180), new int(180));
			return _tmp156;
		})()
		;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {iui__Theme}
*/
function iui__theme_dark_hc() {
	try {
		return (function() {
			let _tmp157 = new iui__Theme({});
			_tmp157.name = new string("Dark High Contrast");
			_tmp157.text_color = gx__rgb(new int(255), new int(255), new int(255));
			_tmp157.background = gx__rgb(new int(0), new int(0), new int(0));
			_tmp157.button_bg_normal = gx__rgb(new int(0), new int(0), new int(0));
			_tmp157.button_bg_hover = gx__rgb(new int(70), new int(70), new int(70));
			_tmp157.button_bg_click = gx__rgb(new int(50), new int(50), new int(50));
			_tmp157.button_border_normal = gx__rgb(new int(220), new int(220), new int(220));
			_tmp157.button_border_hover = gx__rgb(new int(100), new int(220), new int(255));
			_tmp157.button_border_click = gx__rgb(new int(10), new int(94), new int(163));
			_tmp157.menubar_background = gx__rgb(new int(10), new int(10), new int(10));
			_tmp157.menubar_border = gx__rgb(new int(99), new int(99), new int(99));
			_tmp157.dropdown_background = gx__rgb(new int(10), new int(10), new int(10));
			_tmp157.dropdown_border = gx__rgb(new int(0), new int(0), new int(0));
			_tmp157.textbox_background = gx__rgb(new int(0), new int(0), new int(0));
			_tmp157.textbox_border = gx__rgb(new int(200), new int(200), new int(200));
			_tmp157.checkbox_selected = gx__rgb(new int(220), new int(220), new int(220));
			_tmp157.checkbox_bg = gx__rgb(new int(0), new int(0), new int(0));
			_tmp157.scroll_track_color = gx__rgb(new int(0), new int(0), new int(0));
			_tmp157.scroll_bar_color = gx__rgb(new int(205), new int(205), new int(205));
			return _tmp157;
		})()
		;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {iui__Theme}
*/
function iui__theme_black_red() {
	try {
		return (function() {
			let _tmp158 = new iui__Theme({});
			_tmp158.name = new string("Black Red");
			_tmp158.text_color = gx__rgb(new int(255), new int(255), new int(255));
			_tmp158.background = gx__rgb(new int(0), new int(0), new int(0));
			_tmp158.button_bg_normal = gx__rgb(new int(0), new int(0), new int(0));
			_tmp158.button_bg_hover = gx__rgb(new int(70), new int(0), new int(0));
			_tmp158.button_bg_click = gx__rgb(new int(40), new int(0), new int(0));
			_tmp158.button_border_normal = gx__rgb(new int(255), new int(0), new int(0));
			_tmp158.button_border_hover = gx__rgb(new int(230), new int(10), new int(15));
			_tmp158.button_border_click = gx__rgb(new int(150), new int(0), new int(0));
			_tmp158.menubar_background = gx__rgb(new int(10), new int(10), new int(10));
			_tmp158.menubar_border = gx__rgb(new int(160), new int(0), new int(0));
			_tmp158.dropdown_background = gx__rgb(new int(160), new int(0), new int(0));
			_tmp158.dropdown_border = gx__rgb(new int(0), new int(0), new int(0));
			_tmp158.textbox_background = gx__rgb(new int(0), new int(0), new int(0));
			_tmp158.textbox_border = gx__rgb(new int(200), new int(0), new int(0));
			_tmp158.checkbox_selected = gx__rgb(new int(255), new int(0), new int(0));
			_tmp158.checkbox_bg = gx__rgb(new int(0), new int(0), new int(0));
			_tmp158.scroll_track_color = gx__rgb(new int(0), new int(0), new int(0));
			_tmp158.scroll_bar_color = gx__rgb(new int(240), new int(0), new int(0));
			return _tmp158;
		})()
		;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {iui__Theme}
*/
function iui__theme_minty() {
	try {
		return (function() {
			let _tmp159 = new iui__Theme({});
			_tmp159.name = new string("Minty");
			_tmp159.text_color = gx__black;
			_tmp159.background = gx__rgb(new int(240), new int(240), new int(240));
			_tmp159.button_bg_normal = gx__rgb(new int(245), new int(245), new int(245));
			_tmp159.button_bg_hover = gx__rgb(new int(200), new int(225), new int(190));
			_tmp159.button_bg_click = gx__rgb(new int(154), new int(200), new int(124));
			_tmp159.button_border_normal = gx__rgb(new int(207), new int(207), new int(207));
			_tmp159.button_border_hover = gx__rgb(new int(181), new int(203), new int(158));
			_tmp159.button_border_click = gx__rgb(new int(0), new int(153), new int(84));
			_tmp159.menubar_background = gx__rgb(new int(245), new int(245), new int(245));
			_tmp159.menubar_border = gx__rgb(new int(242), new int(242), new int(242));
			_tmp159.dropdown_background = gx__rgb(new int(242), new int(242), new int(242));
			_tmp159.dropdown_border = gx__rgb(new int(204), new int(204), new int(204));
			_tmp159.textbox_background = gx__rgb(new int(255), new int(255), new int(255));
			_tmp159.textbox_border = gx__rgb(new int(215), new int(215), new int(215));
			_tmp159.checkbox_selected = gx__rgb(new int(154), new int(184), new int(124));
			_tmp159.checkbox_bg = gx__rgb(new int(247), new int(247), new int(247));
			_tmp159.scroll_track_color = gx__rgb(new int(238), new int(238), new int(238));
			_tmp159.scroll_bar_color = gx__rgb(new int(181), new int(203), new int(158));
			return _tmp159;
		})()
		;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace iui */
/**
 * @constructor
 * @param {{app?: iui__Window, click_event_fn?: anon_fn_iui__window_iui__tree, childs?: Array_iui__Component, open?: int, min_y?: int, is_hover?: bool}} init
*/
function iui__Tree({ app = new iui__Window({}), click_event_fn = undefined, childs = empty_array(), open = new int(0), min_y = new int(0), is_hover = new bool(false) }) {
	this.app = app
	this.click_event_fn = click_event_fn
	this.childs = childs
	this.open = open
	this.min_y = min_y
	this.is_hover = is_hover
};
iui__Tree.prototype = {
	...iui__Component_A.prototype,
	toString() {
		return `iui__Tree { app: ${this["app"].toString()} , click_event_fn: ${this["click_event_fn"].toString()} , childs: ${this["childs"].toString()} , open: ${this["open"].toString()} , min_y: ${this["min_y"].toString()} , is_hover: ${this["is_hover"].toString()} }`
	},
	/** @type {iui__Window} */
	app: new iui__Window({}),
	/** @type {anon_fn_iui__window_iui__tree} */
	click_event_fn: undefined,
	/** @type {Array_iui__Component} */
	childs: empty_array(),
	/** @type {int} */
	open: new int(0),
	/** @type {int} */
	min_y: new int(0),
	/** @type {bool} */
	is_hover: new bool(false),
	$toJS() { return this; }
	};

/**
 * @function
 * @param {anon_fn_iui__window_iui__tree} myfn
 * @returns {void}
*/
function iui__Tree_set_click(tree, myfn) {
tree = new $ref(tree)
	try {
		/** @type {anon_fn_iui__window_iui__tree} */
		tree.val.click_event_fn = myfn;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Window} app
 * @param {string} text
 * @returns {iui__Tree}
*/
function iui__tree(app, text) {
app = new $ref(app)
	try {
		return (function() {
			let _tmp160 = new iui__Tree({});
			_tmp160.text = text;
			_tmp160.app = app;
			_tmp160.click_event_fn = (function () { 
			return function (a, b) {
				a = new $ref(a)
			}})()
			;
			return _tmp160;
		})()
		;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__Tree_draw(tr) {
tr = new $ref(tr)
	try {
		/** @type {int} */
		let mult = new int(new int(20));
		/** @type {iui__Window} */
		let app = tr.val.app;
		/** @type {gx__Color} */
		let bg = app.val.theme.button_bg_normal;
		/** @type {gx__Color} */
		let bord = bg;
		/** @type {int} */
		const y = new int(new int( tr.val.y.valueOf() - (new int( tr.val.scroll_i.valueOf() * new int(2).valueOf())).valueOf()));
		/** @type {int} */
		let mid = new int((new int( tr.val.x.valueOf() + (new int( tr.val.width.valueOf() / new int(2).valueOf())).valueOf())));
		/** @type {int} */
		let midy = new int((new int( new int( (tr.val.y).valueOf() + new int(3).valueOf()).valueOf() + (new int_literal( new int(20).valueOf() / new int(2).valueOf())).valueOf())));
		if ((new bool(tr.val.y.valueOf() >= tr.val.min_y.valueOf())).valueOf()) {
			iui__Window_draw_bordered_rect(tr.val.app.valueOf(),tr.val.x, new int( tr.val.y.valueOf() + new int(3).valueOf()), new int( tr.val.width.valueOf() - new int(4).valueOf()), tr.val.height, new int(2), bg, bord);
		}
		if ((new bool( (new bool(iui__abs_T_int(new int( mid.valueOf() - app.val.mouse_x.valueOf())).valueOf() < (new int( tr.val.width.valueOf() / new int(2).valueOf())).valueOf())).valueOf() && (new bool(iui__abs_T_int(new int( midy.valueOf() - app.val.mouse_y.valueOf())).valueOf() < (new int_literal( new int(20).valueOf() / new int(2).valueOf())).valueOf())).valueOf())).valueOf()) {
			/** @type {gx__Color} */
			bg = app.val.theme.button_bg_hover;
		}
		/** @type {int} */
		const total_h = new int(new int( tr.val.height.valueOf() + (new int( tr.val.open.valueOf() - new int(20).valueOf())).valueOf()));
		if ((new bool( (new bool(iui__abs_T_int(new int( mid.valueOf() - app.val.mouse_x.valueOf())).valueOf() < (new int( tr.val.width.valueOf() / new int(2).valueOf())).valueOf())).valueOf() && (new bool(iui__abs_T_int(new int( midy.valueOf() - app.val.mouse_y.valueOf())).valueOf() < (new int( total_h.valueOf() / new int(2).valueOf())).valueOf())).valueOf())).valueOf()) {
			/** @type {gx__Color} */
			bg = app.val.theme.button_bg_hover;
			/** @type {bool} */
			tr.val.is_hover = new bool(new bool(true));
		} else {
			/** @type {bool} */
			tr.val.is_hover = new bool(new bool(false));
		}
		if ((new bool( (new bool(iui__abs_T_int(new int( mid.valueOf() - app.val.click_x.valueOf())).valueOf() < (new int( tr.val.width.valueOf() / new int(2).valueOf())).valueOf())).valueOf() && (new bool( new bool( new bool(iui__abs_T_int(new int( midy.valueOf() - app.val.click_y.valueOf())).valueOf() < (new int_literal( new int(20).valueOf() / new int(2).valueOf())).valueOf()).valueOf() && new bool(app.val.bar.val.tik.valueOf() > new int(98).valueOf()).valueOf()).valueOf() && new bool(app.val.click_y.valueOf() > new int(25).valueOf()).valueOf())).valueOf())).valueOf()) {
			/** @type {i64} */
			const now = new i64(time__Time_unix_time_milli(time__now(),));
			if ((new bool(new f64( BigInt(now.valueOf()) - BigInt(tr.val.last_click.valueOf())).valueOf() > new int(100).valueOf())).valueOf()) {
				/** @type {bool} */
				tr.val.is_selected = new bool(!tr.val.is_selected.val );
				iui__Tree_click_event_fn(tr.valueOf(),app, (tr).valueOf());
				/** @type {gx__Color} */
				bg = app.val.theme.button_bg_click;
				/** @type {f64} */
				tr.val.last_click = new f64(time__Time_unix_time_milli(time__now(),));
			}
		}
		if ((tr.val.is_selected).valueOf()) {
			if ((new bool(tr.val.childs.len.valueOf() > new int(0).valueOf())).valueOf()) {
				/** @type {gx__Color} */
				bord = app.val.theme.button_bg_hover;
			} else {
				/** @type {bool} */
				tr.val.is_selected = new bool(new bool(false));
			}
		}
		if ((new bool(y.valueOf() >= tr.val.min_y.valueOf())).valueOf()) {
			iui__Window_draw_bordered_rect(tr.val.app.valueOf(),new int( tr.val.x.valueOf() + new int(4).valueOf()), new int( y.valueOf() + new int(3).valueOf()), new int( tr.val.width.valueOf() - new int(8).valueOf()), new int(20), new int(2), bg, bord);
			if ((tr.val.is_selected).valueOf()) {
				gg__Context_draw_triangle_filled(tr.val.app.val.gg.valueOf(),new int( tr.val.x.valueOf() + new int(5).valueOf()), new int( y.valueOf() + new int(8).valueOf()), new int( tr.val.x.valueOf() + new int(12).valueOf()), new int( y.valueOf() + new int(8).valueOf()), new int( tr.val.x.valueOf() + new int(8).valueOf()), new int( y.valueOf() + new int(14).valueOf()), app.val.theme.text_color);
			} else if ((new bool(tr.val.childs.len.valueOf() > new int(0).valueOf())).valueOf()) {
				gg__Context_draw_triangle_filled(tr.val.app.val.gg.valueOf(),new int( tr.val.x.valueOf() + new int(7).valueOf()), new int( y.valueOf() + new int(6).valueOf()), new int( tr.val.x.valueOf() + new int(12).valueOf()), new int( y.valueOf() + new int(11).valueOf()), new int( tr.val.x.valueOf() + new int(7).valueOf()), new int( y.valueOf() + new int(16).valueOf()), app.val.theme.text_color);
			}
			gg__Context_draw_text(tr.val.app.val.gg.valueOf(),new int( tr.val.x.valueOf() + new int(16).valueOf()), new int( y.valueOf() + new int(4).valueOf()), os__base(tr.val.text), (function() {
				let _tmp161 = new gx__TextCfg({});
				_tmp161.size = tr.val.app.val.font_size;
				_tmp161.color = tr.val.app.val.theme.text_color;
				return _tmp161;
			})()
			);
		}
		/** @type {int} */
		let multx = new int(new int(4));
		if ((tr.val.is_selected).valueOf()) {
			for (const child of tr.val.childs) {
				try { 
					/** @type {int} */
					child.width = new int(new int( tr.val.width.valueOf() - (new int( multx.valueOf() * new int(2).valueOf())).valueOf()));
					iui__draw_with_offset(child, new int( tr.val.x.valueOf() + multx.valueOf()), new int( y.valueOf() + mult.valueOf()));
					if ((child.valueOf() instanceof iui__Tree).valueOf()) {
						/** @type {int} */
						mult.val = Math.floor(mult + new int(new int( child.val.open.valueOf() + new int(4).valueOf())));
					} else {
						/** @type {int} */
						mult.val = Math.floor(mult + new int(child.height));
					}
				} catch (e) {
				 if (e instanceof BreakException) { break; }
				 else if (e instanceof ContinueException) { continue; }
				 else { throw e; } }
			}
			
		}
		/** @type {int} */
		tr.val.open = new int(mult);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace iui */
/** @constant {string} */
const iui__version = new string("0.0.6");

/**
 * @function
 * @param {string} o
 * @returns {void}
*/
function iui__debug(o) {
	try {
		if (false)
		{
		builtin__println (new string( new string("(Debug) ").valueOf() + o.valueOf()));
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @interface iui__Component
 * @typedef iui__Component
 * @property {() => void} draw
 */

function iui__Component (arg) { return new $ref(arg); }
/* [heap] */
/**
 * @constructor
 * @param {{text?: string, x?: int, y?: int, rx?: int, ry?: int, width?: int, height?: int, last_click?: f64, is_selected?: bool, carrot_index?: int, z_index?: int, scroll_i?: int, is_mouse_down?: bool, is_mouse_rele?: bool, draw_event_fn?: anon_fn_iui__window_iui__component, after_draw_event_fn?: anon_fn_iui__window_iui__component, parent?: iui__Component_A, children?: Array_iui__Component, id?: string}} init
*/
function iui__Component_A({ text = new string(""), x = new int(0), y = new int(0), rx = new int(0), ry = new int(0), width = new int(0), height = new int(0), last_click = new f64(0), is_selected = new bool(false), carrot_index = new int(0), z_index = new int(0), scroll_i = new int(0), is_mouse_down = new bool(false), is_mouse_rele = new bool(false), draw_event_fn = iui__blank_draw_event_fn, after_draw_event_fn = iui__blank_draw_event_fn, parent = new int(0), children = empty_array(), id = new string("") }) {
	this.text = text
	this.x = x
	this.y = y
	this.rx = rx
	this.ry = ry
	this.width = width
	this.height = height
	this.last_click = last_click
	this.is_selected = is_selected
	this.carrot_index = carrot_index
	this.z_index = z_index
	this.scroll_i = scroll_i
	this.is_mouse_down = is_mouse_down
	this.is_mouse_rele = is_mouse_rele
	this.draw_event_fn = draw_event_fn
	this.after_draw_event_fn = after_draw_event_fn
	this.parent = parent
	this.children = children
	this.id = id
};
iui__Component_A.prototype = {
	toString() {
		return `iui__Component_A { text: "${this["text"].toString()}", x: ${this["x"].toString()} , y: ${this["y"].toString()} , rx: ${this["rx"].toString()} , ry: ${this["ry"].toString()} , width: ${this["width"].toString()} , height: ${this["height"].toString()} , last_click: ${this["last_click"].toString()} , is_selected: ${this["is_selected"].toString()} , carrot_index: ${this["carrot_index"].toString()} , z_index: ${this["z_index"].toString()} , scroll_i: ${this["scroll_i"].toString()} , is_mouse_down: ${this["is_mouse_down"].toString()} , is_mouse_rele: ${this["is_mouse_rele"].toString()} , draw_event_fn: ${this["draw_event_fn"].toString()} , after_draw_event_fn: ${this["after_draw_event_fn"].toString()} , parent: ${this["parent"].toString()} , children: ${this["children"].toString()} , id: "${this["id"].toString()}"}`
	},
	/** @type {string} */
	text: new string(""),
	/** @type {int} */
	x: new int(0),
	/** @type {int} */
	y: new int(0),
	/** @type {int} */
	rx: new int(0),
	/** @type {int} */
	ry: new int(0),
	/** @type {int} */
	width: new int(0),
	/** @type {int} */
	height: new int(0),
	/** @type {f64} */
	last_click: new f64(0),
	/** @type {bool} */
	is_selected: new bool(false),
	/** @type {int} */
	carrot_index: new int(0),
	/** @type {int} */
	z_index: new int(0),
	/** @type {int} */
	scroll_i: new int(0),
	/** @type {bool} */
	is_mouse_down: new bool(false),
	/** @type {bool} */
	is_mouse_rele: new bool(false),
	/** @type {anon_fn_iui__window_iui__component} */
	draw_event_fn: undefined,
	/** @type {anon_fn_iui__window_iui__component} */
	after_draw_event_fn: undefined,
	/** @type {iui__Component_A} */
	parent: new iui__Component_A({}),
	/** @type {Array_iui__Component} */
	children: empty_array(),
	/** @type {string} */
	id: new string(""),
	$toJS() { return this; }
	};

/**
 * @function
 * @param {iui__Component} com
 * @returns {void}
*/
function iui__Component_A_add_child(_v_this, com) {
_v_this = new $ref(_v_this)
	try {
		array_push(_v_this.val.children,com,false);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Component_A} par
 * @returns {void}
*/
function iui__Component_A_set_parent(com, par) {
com = new $ref(com)
par = new $ref(par)
	try {
		/** @type {iui__Component_A} */
		com.val.parent.val = par.val;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {iui__Component_A}
*/
function iui__Component_A_get_com(com) {
com = new $ref(com)
	try {
		return com;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Window} win
 * @param {iui__Component} tree
 * @returns {void}
*/
function iui__blank_draw_event_fn(win, tree) {
win = new $ref(win)
	try {
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__Component_A_draw(com) {
com = new $ref(com)
	try {
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Component} com
 * @param {int} px
 * @param {int} py
 * @returns {bool}
*/
function iui__point_in_raw(com, px, py) {
	try {
		if ((new bool( new bool(com.rx.valueOf() == new int(0).valueOf()).valueOf() && new bool(com.ry.valueOf() == new int(0).valueOf()).valueOf())).valueOf()) {
			return iui__point_in(com, px, py);
		}
		/** @type {int} */
		const midx = new int(new int( com.rx.valueOf() + (new int( com.width.valueOf() / new int(2).valueOf())).valueOf()));
		/** @type {int} */
		const midy = new int(new int( com.ry.valueOf() + (new int( com.height.valueOf() / new int(2).valueOf())).valueOf()));
		return new bool( (new bool(iui__abs_T_int(new int( midx.valueOf() - px.valueOf())).valueOf() < (new int( com.width.valueOf() / new int(2).valueOf())).valueOf())).valueOf() && (new bool(iui__abs_T_int(new int( midy.valueOf() - py.valueOf())).valueOf() < (new int( com.height.valueOf() / new int(2).valueOf())).valueOf())).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Component} com
 * @param {int} px
 * @param {int} py
 * @returns {bool}
*/
function iui__point_in(com, px, py) {
	try {
		/** @type {int} */
		const midx = new int(new int( com.x.valueOf() + (new int( com.width.valueOf() / new int(2).valueOf())).valueOf()));
		/** @type {int} */
		const midy = new int(new int( com.y.valueOf() + (new int( com.height.valueOf() / new int(2).valueOf())).valueOf()));
		return new bool( (new bool(iui__abs_T_int(new int( midx.valueOf() - px.valueOf())).valueOf() < (new int( com.width.valueOf() / new int(2).valueOf())).valueOf())).valueOf() && (new bool(iui__abs_T_int(new int( midy.valueOf() - py.valueOf())).valueOf() < (new int( com.height.valueOf() / new int(2).valueOf())).valueOf())).valueOf());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Component} com
 * @param {int} offx
 * @param {int} offy
 * @returns {void}
*/
function iui__draw_with_offset(com, offx, offy) {
	try {
		/** @type {int} */
		com.rx = new int(new int( com.x.valueOf() + offx.valueOf()));
		/** @type {int} */
		com.ry = new int(new int( com.y.valueOf() + offy.valueOf()));
		/** @type {int} */
		com.x = new int(new int( com.x.valueOf() + offx.valueOf()));
		/** @type {int} */
		com.y = new int(new int( com.y.valueOf() + offy.valueOf()));
		com.valueOf().draw();
		/** @type {int} */
		com.x = new int(new int( com.x.valueOf() - offx.valueOf()));
		/** @type {int} */
		com.y = new int(new int( com.y.valueOf() - offy.valueOf()));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} x
 * @param {int} y
 * @param {int} width
 * @param {int} height
 * @returns {void}
*/
function iui__Component_A_set_bounds(com, x, y, width, height) {
com = new $ref(com)
	try {
		iui__set_bounds(com, x, y, width, height);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} x
 * @param {int} y
 * @returns {void}
*/
function iui__Component_A_set_pos(com, x, y) {
com = new $ref(com)
	try {
		/** @type {int} */
		com.val.x = new int(x);
		/** @type {int} */
		com.val.y = new int(y);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Component} com
 * @param {int} x
 * @param {int} y
 * @returns {void}
*/
function iui__set_pos(com, x, y) {
	try {
		/** @type {int} */
		com.x = new int(x);
		/** @type {int} */
		com.y = new int(y);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Component} com
 * @param {int} width
 * @param {int} height
 * @returns {void}
*/
function iui__set_size(com, width, height) {
	try {
		/** @type {int} */
		com.width = new int(width);
		/** @type {int} */
		com.height = new int(height);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Component} com
 * @param {int} x
 * @param {int} y
 * @param {int} width
 * @param {int} height
 * @returns {void}
*/
function iui__set_bounds(com, x, y, width, height) {
	try {
		iui__set_pos(com, x, y);
		iui__set_size(com, width, height);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [heap] */
/**
 * @constructor
 * @param {{gg?: gg__Context, font_size?: int, mouse_x?: int, mouse_y?: int, click_x?: int, click_y?: int, theme?: iui__Theme, bar?: iui__Menubar, components?: Array_iui__Component, show_menu_bar?: bool, shift_pressed?: bool, key_down_event?: anon_fn_iui__window_gg__keycode_gg__event, last_update?: i64, frame_time?: int, has_event?: bool, config?: iui__WindowConfig, extra_map?: Map_string_string, id_map?: Map_string_voidptr, debug_draw?: bool}} init
*/
function iui__Window({ gg = new gg__Context({}), font_size = new int(16), mouse_x = new int(0), mouse_y = new int(0), click_x = new int(0), click_y = new int(0), theme = new iui__Theme({}), bar = new iui__Menubar({}), components = empty_array(), show_menu_bar = new bool(true), shift_pressed = new bool(false), key_down_event = (function () { 
return function (win, key, e) {
	win = new $ref(win)
	e = new $ref(e)
}})()
, last_update = new i64(0), frame_time = new int(0), has_event = new bool(true), config = new iui__WindowConfig({}), extra_map = new map(new Map()), id_map = new map(new Map()), debug_draw = new bool(false) }) {
	this.gg = gg
	this.font_size = font_size
	this.mouse_x = mouse_x
	this.mouse_y = mouse_y
	this.click_x = click_x
	this.click_y = click_y
	this.theme = theme
	this.bar = bar
	this.components = components
	this.show_menu_bar = show_menu_bar
	this.shift_pressed = shift_pressed
	this.key_down_event = key_down_event
	this.last_update = last_update
	this.frame_time = frame_time
	this.has_event = has_event
	this.config = config
	this.extra_map = extra_map
	this.id_map = id_map
	this.debug_draw = debug_draw
};
iui__Window.prototype = {
	toString() {
		return `iui__Window { gg: ${this["gg"].toString()} , font_size: ${this["font_size"].toString()} , mouse_x: ${this["mouse_x"].toString()} , mouse_y: ${this["mouse_y"].toString()} , click_x: ${this["click_x"].toString()} , click_y: ${this["click_y"].toString()} , theme: ${this["theme"].toString()} , bar: ${this["bar"].toString()} , components: ${this["components"].toString()} , show_menu_bar: ${this["show_menu_bar"].toString()} , shift_pressed: ${this["shift_pressed"].toString()} , key_down_event: ${this["key_down_event"].toString()} , last_update: ${this["last_update"].toString()} , frame_time: ${this["frame_time"].toString()} , has_event: ${this["has_event"].toString()} , config: ${this["config"].toString()} , extra_map: ${this["extra_map"].toString()} , id_map: ${this["id_map"].toString()} , debug_draw: ${this["debug_draw"].toString()} }`
	},
	/** @type {gg__Context} */
	gg: new gg__Context({}),
	/** @type {int} */
	font_size: new int(0),
	/** @type {int} */
	mouse_x: new int(0),
	/** @type {int} */
	mouse_y: new int(0),
	/** @type {int} */
	click_x: new int(0),
	/** @type {int} */
	click_y: new int(0),
	/** @type {iui__Theme} */
	theme: new iui__Theme({}),
	/** @type {iui__Menubar} */
	bar: new iui__Menubar({}),
	/** @type {Array_iui__Component} */
	components: empty_array(),
	/** @type {bool} */
	show_menu_bar: new bool(false),
	/** @type {bool} */
	shift_pressed: new bool(false),
	/** @type {anon_fn_iui__window_gg__keycode_gg__event} */
	key_down_event: undefined,
	/** @type {i64} */
	last_update: new i64(0),
	/** @type {int} */
	frame_time: new int(0),
	/** @type {bool} */
	has_event: new bool(false),
	/** @type {iui__WindowConfig} */
	config: new iui__WindowConfig({}),
	/** @type {Map_string_string} */
	extra_map: new map(new Map()),
	/** @type {Map_string_voidptr} */
	id_map: new map(new Map()),
	/** @type {bool} */
	debug_draw: new bool(false),
	$toJS() { return this; }
	};

/**
 * @function
 * @param {iui__Window} win
 * @param {string} id
 * @returns {void}
*/
function iui__Component_A_set_id(com, win, id) {
com = new $ref(com)
win = new $ref(win)
	try {
		/** @type {string} */
		com.val.id = new string(id);
		/** @type {voidptr} */
		win.val.id_map.length++;
		win.val.id_map.map[id.$toJS()] = com;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} id
 * @returns {voidptr}
*/
function iui__Window_get_from_id(win, id) {
win = new $ref(win)
	try {
		return win.val.id_map.get(id.$toJS());
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Component} com
 * @returns {void}
*/
function iui__Window_add_child(win, com) {
win = new $ref(win)
	try {
		array_push(win.val.components,com,false);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Theme} theme
 * @param {string} title
 * @param {int} width
 * @param {int} height
 * @returns {iui__Window}
*/
function iui__window(theme, title, width, height) {
	try {
		return iui__window_with_config(theme, title, width, height, new $ref((function() {
			let _tmp162 = new iui__WindowConfig({});
			_tmp162.font_path = os__font__default();
			_tmp162.ui_mode = new bool(true);
			_tmp162.user_data = new int(0);
			return _tmp162;
		})()
		));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [heap] */
/**
 * @constructor
 * @param {{font_path?: string, ui_mode?: bool, user_data?: voidptr}} init
*/
function iui__WindowConfig({ font_path = os__font__default(), ui_mode = new bool(false), user_data = new voidptr(null) }) {
	this.font_path = font_path
	this.ui_mode = ui_mode
	this.user_data = user_data
};
iui__WindowConfig.prototype = {
	toString() {
		return `iui__WindowConfig { font_path: "${this["font_path"].toString()}", ui_mode: ${this["ui_mode"].toString()} , user_data: ${this["user_data"].toString()} }`
	},
	/** @type {string} */
	font_path: new string(""),
	/** @type {bool} */
	ui_mode: new bool(false),
	/** @type {voidptr} */
	user_data: new voidptr(null),
	$toJS() { return this; }
	};

/**
 * @function
 * @param {iui__Theme} theme
 * @param {string} title
 * @param {int} width
 * @param {int} height
 * @param {iui__WindowConfig} config
 * @returns {iui__Window}
*/
function iui__window_with_config(theme, title, width, height, config) {
config = new $ref(config)
	try {
		/** @type {iui__Window} */
		let app = new $ref((function() {
			let _tmp163 = new iui__Window({});
			_tmp163.gg = new int(0);
			_tmp163.theme = theme;
			_tmp163.bar = new int(0);
			_tmp163.config = config;
			return _tmp163;
		})()
		);
		iui__blank_draw_event_fn(app, new $ref(new iui__Component_A({})));
		/** @type {gg__Context} */
		app.val.gg.val = gg__new_context((function() {
			let _tmp164 = new gg__Config({});
			_tmp164.bg_color = app.val.theme.background;
			_tmp164.width = width;
			_tmp164.height = height;
			_tmp164.create_window = new bool(true);
			_tmp164.window_title = title;
			_tmp164.frame_fn = iui__frame;
			_tmp164.event_fn = iui__on_event;
			_tmp164.user_data = app;
			_tmp164.font_path = config.val.font_path;
			_tmp164.font_size = app.val.font_size;
			_tmp164.ui_mode = config.val.ui_mode;
			return _tmp164;
		})()
		).val;
		return app;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Theme} theme
 * @returns {void}
*/
function iui__Window_set_theme(win, theme) {
win = new $ref(win)
	try {
		/** @type {iui__Theme} */
		win.val.theme = theme;
		if ((new bool(win.val.bar.valueOf().valueOf() != new voidptr(new int(0)).valueOf())).valueOf()) {
			/** @type {iui__Theme} */
			win.val.bar.val.theme = theme;
		}
		gg__Context_set_bg_color(win.val.gg.valueOf(),theme.background);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Window} app
 * @returns {void}
*/
function iui__frame(app) {
app = new $ref(app)
	try {
		gg__Context_begin(app.val.gg.valueOf(),);
		iui__Window_draw(app.valueOf(),);
		gg__Context_end(app.val.gg.valueOf(),);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__Window_display(app) {
app = new $ref(app)
	try {
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} x
 * @param {int} y
 * @param {int} width
 * @param {int} height
 * @param {int} a
 * @param {gx__Color} bg
 * @param {gx__Color} bord
 * @returns {void}
*/
function iui__Window_draw_bordered_rect(app, x, y, width, height, a, bg, bord) {
app = new $ref(app)
	try {
		gg__Context_draw_rounded_rect_filled(app.val.gg.valueOf(),x, y, width, height, a, bg);
		gg__Context_draw_rounded_rect_empty(app.val.gg.valueOf(),x, y, width, height, a, bord);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {int} x
 * @param {int} y
 * @param {int} width
 * @param {int} height
 * @param {int} a
 * @param {gx__Color} bg
 * @param {gx__Color} bord
 * @returns {void}
*/
function iui__Window_draw_filled_rect(app, x, y, width, height, a, bg, bord) {
app = new $ref(app)
	try {
		gg__Context_draw_rect_filled(app.val.gg.valueOf(),x, y, width, height, bg);
		gg__Context_draw_rect_empty(app.val.gg.valueOf(),x, y, width, height, bord);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__Window_draw(app) {
app = new $ref(app)
	try {
		if ((!app.val.config.val.ui_mode.val ).valueOf()) {
			/** @type {int} */
			const sleep = new int((new int( new int(50).valueOf() - app.val.frame_time.valueOf())));
			/** @type {int} */
			let sleep_ = new int(new int(0));
			if ((!app.val.has_event.val ).valueOf()) {
				while (+new bool(sleep_.valueOf() < sleep.valueOf())) {
					try { 
						time__sleep(new int_literal( BigInt(new int(10).valueOf()) * BigInt(time__millisecond.valueOf())));
						/** @type {int} */
						sleep_.val = Math.floor(sleep_ + new int(new int(10)));
					} catch (e) {
					 if (e instanceof BreakException) { break; }
					 else if (e instanceof ContinueException) { continue; }
					 else { throw e; } }
				}
				
			} else {
				time__sleep(new int_literal( BigInt(new int(5).valueOf()) * BigInt(time__millisecond.valueOf())));
			}
		}
		/** @type {i64} */
		const now = new i64(time__Time_unix_time_milli(time__now(),));
		v_sort(app.val.components,compare_iui__Component_by_z_index);
		/** @type {bool} */
		let bar_drawn = new bool(new bool(false));
		for (const com of app.val.components) {
			try { 
				iui__Component_draw_event_fn(com.valueOf(),app, new $ref(com));
				if ((new bool( new bool( new bool(com.z_index.valueOf() > new int(100).valueOf()).valueOf() && app.val.show_menu_bar.valueOf()).valueOf() && !bar_drawn.val .valueOf())).valueOf()) {
					/** @type {iui__Menubar} */
					let bar = iui__Window_get_bar(app.valueOf(),);
					iui__Menubar_draw(bar.valueOf(),);
					/** @type {bool} */
					bar_drawn = new bool(new bool(true));
				}
				com.valueOf().draw();
				iui__Component_after_draw_event_fn(com.valueOf(),app, new $ref(com));
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		if ((new bool( app.val.show_menu_bar.valueOf() && !bar_drawn.val .valueOf())).valueOf()) {
			/** @type {iui__Menubar} */
			let bar = iui__Window_get_bar(app.valueOf(),);
			if ((new bool(new iui__Menubar( bar.valueOf().valueOf() != new int(0).valueOf().valueOf()))).valueOf()) {
				iui__Menubar_draw(bar.valueOf(),);
			}
		}
		/** @type {i64} */
		const end = new i64(time__Time_unix_time_milli(time__now(),));
		if ((new bool(new i64( BigInt(end.valueOf()) - BigInt(app.val.last_update.valueOf())).valueOf() > new int(1000).valueOf())).valueOf()) {
			/** @type {i64} */
			app.val.last_update = new i64(end);
		}
		/** @type {int} */
		app.val.frame_time = new int(new int(new i64( BigInt(end.valueOf()) - BigInt(now.valueOf()))));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {gg__Event} e
 * @param {iui__Textbox} a
 * @returns {void}
*/
function iui__text_box_scroll(e, a) {
e = new $ref(e)
a = new $ref(a)
	try {
		if ((a.val.is_selected).valueOf()) {
			/** @type {int} */
			const scroll_y = new int((new int( new int(e.val.scroll_y).valueOf() / new int(2).valueOf())));
			if ((new bool(iui__abs_T_f32(e.val.scroll_y).valueOf() != e.val.scroll_y.valueOf())).valueOf()) {
				/** @type {int} */
				a.val.scroll_i.val = Math.floor(a.val.scroll_i + new int(-scroll_y.val ));
			} else if ((new bool(a.val.scroll_i.valueOf() > new int(0).valueOf())).valueOf()) {
				/** @type {int} */
				a.val.scroll_i.val = Math.floor(a.val.scroll_i - new int(scroll_y));
			}
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {gg__Event} e
 * @param {iui__TextField} a
 * @returns {void}
*/
function iui__rune_box_scroll(e, a) {
e = new $ref(e)
a = new $ref(a)
	try {
		if ((a.val.is_selected).valueOf()) {
			/** @type {int} */
			const scroll_y = new int((new int( new int(e.val.scroll_y).valueOf() / new int(2).valueOf())));
			if ((new bool(iui__abs_T_f32(e.val.scroll_y).valueOf() != e.val.scroll_y.valueOf())).valueOf()) {
				/** @type {int} */
				a.val.scroll_i.val = Math.floor(a.val.scroll_i + new int(-scroll_y.val ));
			} else if ((new bool(a.val.scroll_i.valueOf() > new int(0).valueOf())).valueOf()) {
				/** @type {int} */
				a.val.scroll_i.val = Math.floor(a.val.scroll_i - new int(scroll_y));
			}
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {gg__Event} e
 * @param {iui__TextEdit} a
 * @returns {void}
*/
function iui__text_edit_scroll(e, a) {
e = new $ref(e)
a = new $ref(a)
	try {
		if ((a.val.is_selected).valueOf()) {
			/** @type {int} */
			const scroll_y = new int((new int( new int(e.val.scroll_y).valueOf() / new int(2).valueOf())));
			if ((new bool(iui__abs_T_f32(e.val.scroll_y).valueOf() != e.val.scroll_y.valueOf())).valueOf()) {
				/** @type {int} */
				a.val.scroll_i.val = Math.floor(a.val.scroll_i + new int(-scroll_y.val ));
			} else if ((new bool(a.val.scroll_i.valueOf() > new int(0).valueOf())).valueOf()) {
				/** @type {int} */
				a.val.scroll_i.val = Math.floor(a.val.scroll_i - new int(scroll_y));
			}
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Window} win
 * @param {string} text
 * @returns {int}
*/
function iui__text_width(win, text) {
	try {
		return gg__Context_text_width(win.gg.valueOf(),text);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Window} win
 * @param {string} text
 * @returns {int}
*/
function iui__text_height(win, text) {
	try {
		return gg__Context_text_height(win.gg.valueOf(),text);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {int} a
 * @returns {int}
*/
function iui__abs_T_int(a) {
	try {
		return ((new bool(a.valueOf() > new int(0).valueOf())).valueOf() ? a : -a.val );
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/* [inline] */
/**
 * @function
 * @param {f32} a
 * @returns {f32}
*/
function iui__abs_T_f32(a) {
	try {
		return ((new bool(a.valueOf() > new int(0).valueOf())).valueOf() ? a : -a.val );
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {string} url
 * @returns {void}
*/
function iui__open_url(url) {
	try {
		/** @type {string} */
		let url_ = new string(url);
		if ((!string_starts_with(url,new string("http")).val ).valueOf()) {
			/** @type {string} */
			url_ = new string(new string( new string("https://").valueOf() + url.valueOf()));
		}
		if (($process.platform == "windows"))
		{
		os__execute(new string(`cmd.exe /c "start ${url_}"`));
		}
		else if (($process.platform == "darwin"))
		{
		os__execute(new string(`open "${url_}"`));
		}
		else if (($process.platform == "linux"))
		{
		os__execute(new string(`xdg-open "${url_}"`));
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace iui */
/**
 * @function
 * @param {gg__Event} e
 * @param {iui__Window} app
 * @returns {void}
*/
function iui__on_event(e, app) {
e = new $ref(e)
app = new $ref(app)
	try {
		if ((new bool(e.val.typ.valueOf() == gg__DOMEventType.mouse_leave.valueOf())).valueOf()) {
			/** @type {bool} */
			app.val.has_event = new bool(new bool(false));
		} else {
			/** @type {bool} */
			app.val.has_event = new bool(new bool(true));
		}
		if ((new bool(e.val.typ.valueOf() == gg__DOMEventType.mouse_move.valueOf())).valueOf()) {
			/** @type {int} */
			app.val.mouse_x = new int(app.val.gg.val.mouse_pos_x);
			/** @type {int} */
			app.val.mouse_y = new int(app.val.gg.val.mouse_pos_y);
		}
		if ((new bool(e.val.typ.valueOf() == gg__DOMEventType.mouse_down.valueOf())).valueOf()) {
			iui__on_mouse_down_event(e, app);
		}
		if ((new bool(e.val.typ.valueOf() == gg__DOMEventType.mouse_up.valueOf())).valueOf()) {
			iui__on_mouse_up_event(e, app);
		}
		if ((new bool(e.val.typ.valueOf() == gg__DOMEventType.key_down.valueOf())).valueOf()) {
			iui__Window_key_down(app.valueOf(),e.val.key_code, e);
		}
		if ((new bool(e.val.typ.valueOf() == gg__DOMEventType.key_up.valueOf())).valueOf()) {
			/** @type {string} */
			const letter = new string(gg__KeyCode_str(e.val.key_code));
			if ((new bool( new bool(letter.valueOf() == new string("left_shift").valueOf()).valueOf() || new bool(letter.valueOf() == new string("right_shift").valueOf()).valueOf())).valueOf()) {
				/** @type {bool} */
				app.val.shift_pressed = new bool(new bool(false));
			}
		}
		if ((new bool(e.val.typ.valueOf() == gg__DOMEventType.mouse_scroll.valueOf())).valueOf()) {
			iui__on_scroll_event(e, app);
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {gg__Event} e
 * @param {iui__Window} app
 * @returns {void}
*/
function iui__on_mouse_down_event(e, app) {
e = new $ref(e)
app = new $ref(app)
	try {
		/** @type {int} */
		app.val.click_x = new int(app.val.gg.val.mouse_pos_x);
		/** @type {int} */
		app.val.click_y = new int(app.val.gg.val.mouse_pos_y);
v_sort(app.val.components,compare_iui__Component_by_z_index_reverse);
		/** @type {bool} */
		let found = new bool(new bool(false));
		for (const com of app.val.components) {
			try { 
				if ((new bool( iui__point_in(com, app.val.click_x, app.val.click_y).valueOf() && !found.val .valueOf())).valueOf()) {
					if ((com.valueOf() instanceof iui__Tabbox).valueOf()) {
						let _tmp165 = com.val.kids;
						for (var _tmp166 in _tmp165.map) {
							let val = _tmp165.map[_tmp166];
							let  = _tmp166;
							try { 
								for (const comm of val.valueOf()) {
									try { 
										if ((new bool( iui__point_in(comm, new int( app.val.click_x.valueOf() - com.val.x.valueOf()), (new int( new int( app.val.click_y.valueOf() - com.val.y.valueOf()).valueOf() - new int(20).valueOf()))).valueOf() && !found.val .valueOf())).valueOf()) {
											/** @type {bool} */
											comm.is_mouse_down = new bool(new bool(true));
										}
									} catch (e) {
									 if (e instanceof BreakException) { break; }
									 else if (e instanceof ContinueException) { continue; }
									 else { throw e; } }
								}
								
							} catch (e) {
							 if (e instanceof BreakException) { break; }
							 else if (e instanceof ContinueException) { continue; }
							 else { throw e; } } 
						}
						
					}
					/** @type {bool} */
					found = new bool(new bool(true));
					if ((com.valueOf() instanceof iui__Modal).valueOf()) {
						/** @type {int} */
						let xo = new int(com.val.xs);
						/** @type {int} */
						let yo = new int(new int( new int( com.val.y.valueOf() + com.val.top_off.valueOf()).valueOf() + new int(26).valueOf()));
						for (const child of com.val.children) {
							try { 
								if ((iui__point_in(child, new int( app.val.click_x.valueOf() - xo.valueOf()), (new int( app.val.click_y.valueOf() - yo.valueOf())))).valueOf()) {
									/** @type {bool} */
									child.is_mouse_down = new bool(new bool(true));
									if ((child.valueOf() instanceof iui__Tabbox).valueOf()) {
										/** @type {Array_iui__Component} */
										let val = child.val.kids.get(child.val.active_tab.$toJS());
										for (const comm of val) {
											try { 
												if ((iui__point_in_raw(comm, app.val.click_x, app.val.click_y)).valueOf()) {
													/** @type {bool} */
													comm.is_mouse_down = new bool(new bool(true));
												}
											} catch (e) {
											 if (e instanceof BreakException) { break; }
											 else if (e instanceof ContinueException) { continue; }
											 else { throw e; } }
										}
										
									}
								}
							} catch (e) {
							 if (e instanceof BreakException) { break; }
							 else if (e instanceof ContinueException) { continue; }
							 else { throw e; } }
						}
						
					}
					/** @type {bool} */
					com.is_mouse_down = new bool(new bool(true));
				} else {
					if ((com.valueOf() instanceof iui__Tabbox).valueOf()) {
						let _tmp167 = com.val.kids;
						for (var _tmp168 in _tmp167.map) {
							let val = _tmp167.map[_tmp168];
							let  = _tmp168;
							try { 
								for (const comm of val.valueOf()) {
									try { 
										if ((iui__point_in(comm, new int( app.val.click_x.valueOf() - com.val.x.valueOf()), (new int( new int( app.val.click_y.valueOf() - com.val.y.valueOf()).valueOf() - new int(20).valueOf())))).valueOf()) {
											/** @type {bool} */
											comm.is_mouse_down = new bool(new bool(false));
										}
									} catch (e) {
									 if (e instanceof BreakException) { break; }
									 else if (e instanceof ContinueException) { continue; }
									 else { throw e; } }
								}
								
							} catch (e) {
							 if (e instanceof BreakException) { break; }
							 else if (e instanceof ContinueException) { continue; }
							 else { throw e; } } 
						}
						
					}
					if ((com.valueOf() instanceof iui__Modal).valueOf()) {
						for (const child of com.val.children) {
							try { 
								/** @type {bool} */
								child.is_mouse_down = new bool(new bool(false));
								if ((child.valueOf() instanceof iui__Tabbox).valueOf()) {
									/** @type {Array_iui__Component} */
									let val = child.val.kids.get(child.val.active_tab.$toJS());
									for (const comm of val) {
										try { 
											/** @type {bool} */
											comm.is_mouse_down = new bool(new bool(false));
										} catch (e) {
										 if (e instanceof BreakException) { break; }
										 else if (e instanceof ContinueException) { continue; }
										 else { throw e; } }
									}
									
								}
							} catch (e) {
							 if (e instanceof BreakException) { break; }
							 else if (e instanceof ContinueException) { continue; }
							 else { throw e; } }
						}
						
					}
					/** @type {bool} */
					com.is_mouse_down = new bool(new bool(false));
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {gg__Event} e
 * @param {iui__Window} app
 * @returns {void}
*/
function iui__on_mouse_up_event(e, app) {
e = new $ref(e)
app = new $ref(app)
	try {
		/** @type {int} */
		app.val.click_x = new int(new int(-1));
		/** @type {int} */
		app.val.click_y = new int(new int(-1));
		/** @type {int} */
		const mx = new int(app.val.gg.val.mouse_pos_x);
		/** @type {int} */
		const my = new int(app.val.gg.val.mouse_pos_y);
		/** @type {bool} */
		let found = new bool(new bool(false));
		v_sort(app.val.components,compare_iui__Component_by_z_index_reverse);
		for (const com of app.val.components) {
			try { 
				if ((new bool( iui__point_in(com, mx, my).valueOf() && !found.val .valueOf())).valueOf()) {
					/** @type {bool} */
					com.is_mouse_down = new bool(new bool(false));
					/** @type {bool} */
					com.is_mouse_rele = new bool(new bool(true));
					if ((com.valueOf() instanceof iui__Tabbox).valueOf()) {
						let _tmp169 = com.val.kids;
						for (var _tmp170 in _tmp169.map) {
							let val = _tmp169.map[_tmp170];
							let  = _tmp170;
							try { 
								for (const comm of val.valueOf()) {
									try { 
										if ((iui__point_in(comm, new int( mx.valueOf() - com.val.x.valueOf()), (new int( new int( my.valueOf() - com.val.y.valueOf()).valueOf() - new int(20).valueOf())))).valueOf()) {
											/** @type {bool} */
											comm.is_mouse_down = new bool(new bool(false));
											/** @type {bool} */
											comm.is_mouse_rele = new bool(new bool(true));
										}
									} catch (e) {
									 if (e instanceof BreakException) { break; }
									 else if (e instanceof ContinueException) { continue; }
									 else { throw e; } }
								}
								
							} catch (e) {
							 if (e instanceof BreakException) { break; }
							 else if (e instanceof ContinueException) { continue; }
							 else { throw e; } } 
						}
						
					}
					if ((com.valueOf() instanceof iui__Modal).valueOf()) {
						for (const child of com.val.children) {
							try { 
								if ((iui__point_in_raw(child, mx, my)).valueOf()) {
									/** @type {bool} */
									child.is_mouse_down = new bool(new bool(false));
									/** @type {bool} */
									child.is_mouse_rele = new bool(new bool(true));
									if ((child.valueOf() instanceof iui__Tabbox).valueOf()) {
										/** @type {Array_iui__Component} */
										let val = child.val.kids.get(child.val.active_tab.$toJS());
										for (const comm of val) {
											try { 
												if ((iui__point_in_raw(comm, mx, my)).valueOf()) {
													/** @type {bool} */
													comm.is_mouse_down = new bool(new bool(false));
													/** @type {bool} */
													comm.is_mouse_rele = new bool(new bool(true));
												}
											} catch (e) {
											 if (e instanceof BreakException) { break; }
											 else if (e instanceof ContinueException) { continue; }
											 else { throw e; } }
										}
										
									}
								}
							} catch (e) {
							 if (e instanceof BreakException) { break; }
							 else if (e instanceof ContinueException) { continue; }
							 else { throw e; } }
						}
						
					}
					for (const child of com.children) {
						try { 
							if ((iui__point_in_raw(child, mx, my)).valueOf()) {
								/** @type {bool} */
								child.is_mouse_down = new bool(new bool(false));
								/** @type {bool} */
								child.is_mouse_rele = new bool(new bool(true));
							}
						} catch (e) {
						 if (e instanceof BreakException) { break; }
						 else if (e instanceof ContinueException) { continue; }
						 else { throw e; } }
					}
					
					/** @type {bool} */
					found = new bool(new bool(true));
				} else {
					for (const child of com.children) {
						try { 
							/** @type {bool} */
							child.is_mouse_down = new bool(new bool(false));
						} catch (e) {
						 if (e instanceof BreakException) { break; }
						 else if (e instanceof ContinueException) { continue; }
						 else { throw e; } }
					}
					
					/** @type {bool} */
					com.is_mouse_down = new bool(new bool(false));
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {gg__Event} e
 * @param {iui__Window} app
 * @returns {void}
*/
function iui__on_scroll_event(e, app) {
e = new $ref(e)
app = new $ref(app)
	try {
		v_sort(app.val.components,compare_iui__Component_by_z_index_reverse);
		for (const a of app.val.components) {
			try { 
				if ((a.valueOf() instanceof iui__Tabbox).valueOf()) {
					let _tmp171 = a.val.kids;
					for (var _tmp172 in _tmp171.map) {
						let val = _tmp171.map[_tmp172];
						let  = _tmp172;
						try { 
							for (const comm of val.valueOf()) {
								try { 
									if ((comm.valueOf() instanceof iui__Textbox).valueOf()) {
										iui__text_box_scroll(e, comm);
									}
									if ((comm.valueOf() instanceof iui__TextField).valueOf()) {
										iui__rune_box_scroll(e, comm);
									}
									if ((comm.valueOf() instanceof iui__TextEdit).valueOf()) {
										if ((comm.val.is_selected).valueOf()) {
											iui__text_edit_scroll(e, comm);
										}
										continue;
									}
									/** @type {int} */
									const scroll_y = new int(new int(e.val.scroll_y));
									if ((new bool(iui__abs_T_f32(e.val.scroll_y).valueOf() != e.val.scroll_y.valueOf())).valueOf()) {
										/** @type {int} */
										comm.scroll_i.val = Math.floor(comm.scroll_i + new int(-scroll_y.val ));
									} else if ((new bool(comm.scroll_i.valueOf() > new int(0).valueOf())).valueOf()) {
										/** @type {int} */
										comm.scroll_i.val = Math.floor(comm.scroll_i - new int(scroll_y));
									}
									if ((new bool(comm.scroll_i.valueOf() < new int(0).valueOf())).valueOf()) {
										/** @type {int} */
										comm.scroll_i = new int(new int(0));
									}
								} catch (e) {
								 if (e instanceof BreakException) { break; }
								 else if (e instanceof ContinueException) { continue; }
								 else { throw e; } }
							}
							
						} catch (e) {
						 if (e instanceof BreakException) { break; }
						 else if (e instanceof ContinueException) { continue; }
						 else { throw e; } } 
					}
					
					continue;
				}
				if ((a.valueOf() instanceof iui__Modal).valueOf()) {
					for (const child of a.val.children) {
						try { 
							if ((child.valueOf() instanceof iui__Tree).valueOf()) {
								if ((child.val.is_hover).valueOf()) {
									/** @type {int} */
									const scroll_y = new int(new int(e.val.scroll_y));
									/** @type {int} */
									child.val.scroll_i.val = Math.floor(child.val.scroll_i + new int(-scroll_y.val ));
									return;
								}
								continue;
							}
						} catch (e) {
						 if (e instanceof BreakException) { break; }
						 else if (e instanceof ContinueException) { continue; }
						 else { throw e; } }
					}
					
					/** @type {int} */
					const scroll_y = new int((new int( new int(e.val.scroll_y).valueOf() / new int(2).valueOf())));
					if ((new bool(iui__abs_T_f32(e.val.scroll_y).valueOf() != e.val.scroll_y.valueOf())).valueOf()) {
						/** @type {int} */
						a.val.scroll_i.val = Math.floor(a.val.scroll_i + new int(-scroll_y.val ));
					} else if ((new bool(a.val.scroll_i.valueOf() > new int(0).valueOf())).valueOf()) {
						/** @type {int} */
						a.val.scroll_i.val = Math.floor(a.val.scroll_i - new int(scroll_y));
					}
					if ((new bool(a.val.scroll_i.valueOf() < new int(0).valueOf())).valueOf()) {
						/** @type {int} */
						a.val.scroll_i = new int(new int(0));
					}
					return;
				}
				if ((a.valueOf() instanceof iui__Tree).valueOf()) {
					if ((a.val.is_hover).valueOf()) {
						/** @type {int} */
						const scroll_y = new int(new int(e.val.scroll_y));
						if ((new bool(a.val.open.valueOf() < a.val.height.valueOf())).valueOf()) {
							return;
						}
						if ((new bool(iui__abs_T_f32(e.val.scroll_y).valueOf() != e.val.scroll_y.valueOf())).valueOf()) {
							/** @type {int} */
							a.val.scroll_i.val = Math.floor(a.val.scroll_i + new int(-scroll_y.val ));
						} else if ((new bool(a.val.scroll_i.valueOf() > new int(0).valueOf())).valueOf()) {
							/** @type {int} */
							a.val.scroll_i.val = Math.floor(a.val.scroll_i - new int(scroll_y));
						}
						if ((new bool(a.val.scroll_i.valueOf() < new int(0).valueOf())).valueOf()) {
							/** @type {int} */
							a.val.scroll_i = new int(new int(0));
						}
						if ((new bool((new int( a.val.scroll_i.valueOf() * new int(2).valueOf())).valueOf() > new int( a.val.open.valueOf() - (new int( a.val.height.valueOf() / new int(2).valueOf())).valueOf()).valueOf())).valueOf()) {
							/** @type {int} */
							a.val.scroll_i = new int(new int( (new int( a.val.open.valueOf() - (new int( a.val.height.valueOf() / new int(2).valueOf())).valueOf())).valueOf() / new int(2).valueOf()));
						}
						return;
					}
					continue;
				}
				if ((a.valueOf() instanceof iui__Textbox).valueOf()) {
					iui__text_box_scroll(e, a);
					continue;
				}
				if ((a.valueOf() instanceof iui__TextField).valueOf()) {
					iui__rune_box_scroll(e, a);
				}
				if ((a.valueOf() instanceof iui__TextEdit).valueOf()) {
					if ((!a.val.is_selected.val ).valueOf()) {
						continue;
					}
				}
				/** @type {int} */
				const scroll_y = new int(new int(e.val.scroll_y));
				if ((new bool(iui__abs_T_f32(e.val.scroll_y).valueOf() != e.val.scroll_y.valueOf())).valueOf()) {
					/** @type {int} */
					a.scroll_i.val = Math.floor(a.scroll_i + new int(-scroll_y.val ));
				} else if ((new bool(a.scroll_i.valueOf() > new int(0).valueOf())).valueOf()) {
					/** @type {int} */
					a.scroll_i.val = Math.floor(a.scroll_i - new int(scroll_y));
				}
				if ((new bool(a.scroll_i.valueOf() < new int(0).valueOf())).valueOf()) {
					/** @type {int} */
					a.scroll_i = new int(new int(0));
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {gg__Event} e
 * @param {iui__Window} app
 * @returns {bool}
*/
function iui__Component_on_mouse_down_event_(com, e, app) {
e = new $ref(e)
app = new $ref(app)
	try {
		/** @type {int} */
		app.val.click_x = new int(app.val.gg.val.mouse_pos_x);
		/** @type {int} */
		app.val.click_y = new int(app.val.gg.val.mouse_pos_y);
		v_sort(app.val.components,compare_iui__Component_by_z_index_reverse);
		/** @type {bool} */
		let found = new bool(new bool(false));
		if ((new bool( iui__point_in_raw(com, app.val.click_x, app.val.click_y).valueOf() && !found.val .valueOf())).valueOf()) {
			if ((com.valueOf() instanceof iui__Tabbox).valueOf()) {
				let _tmp173 = com.val.kids;
				for (var _tmp174 in _tmp173.map) {
					let val = _tmp173.map[_tmp174];
					let  = _tmp174;
					try { 
						for (const comm of val.valueOf()) {
							try { 
								if ((new bool( iui__point_in_raw(comm, app.val.click_x, app.val.click_y).valueOf() && !found.val .valueOf())).valueOf()) {
									/** @type {bool} */
									comm.is_mouse_down = new bool(new bool(true));
								}
							} catch (e) {
							 if (e instanceof BreakException) { break; }
							 else if (e instanceof ContinueException) { continue; }
							 else { throw e; } }
						}
						
					} catch (e) {
					 if (e instanceof BreakException) { break; }
					 else if (e instanceof ContinueException) { continue; }
					 else { throw e; } } 
				}
				
			}
			for (const child of com.children) {
				try { 
					iui__Component_on_mouse_down_event_(child.valueOf(),e, app);
				} catch (e) {
				 if (e instanceof BreakException) { break; }
				 else if (e instanceof ContinueException) { continue; }
				 else { throw e; } }
			}
			
			/** @type {bool} */
			found = new bool(new bool(true));
			if ((com.valueOf() instanceof iui__Modal).valueOf()) {
				for (const child of com.val.children) {
					try { 
						if ((iui__point_in_raw(child, app.val.click_x, app.val.click_y)).valueOf()) {
							/** @type {bool} */
							child.is_mouse_down = new bool(new bool(true));
							if ((child.valueOf() instanceof iui__Tabbox).valueOf()) {
								/** @type {Array_iui__Component} */
								let val = child.val.kids.get(child.val.active_tab.$toJS());
								for (const comm of val) {
									try { 
										if ((iui__point_in_raw(comm, app.val.click_x, app.val.click_y)).valueOf()) {
											/** @type {bool} */
											comm.is_mouse_down = new bool(new bool(true));
										}
									} catch (e) {
									 if (e instanceof BreakException) { break; }
									 else if (e instanceof ContinueException) { continue; }
									 else { throw e; } }
								}
								
							}
						}
					} catch (e) {
					 if (e instanceof BreakException) { break; }
					 else if (e instanceof ContinueException) { continue; }
					 else { throw e; } }
				}
				
			}
			/** @type {bool} */
			com.is_mouse_down = new bool(new bool(true));
		} else {
			if ((com.valueOf() instanceof iui__Tabbox).valueOf()) {
				let _tmp175 = com.val.kids;
				for (var _tmp176 in _tmp175.map) {
					let val = _tmp175.map[_tmp176];
					let  = _tmp176;
					try { 
						for (const comm of val.valueOf()) {
							try { 
								if ((iui__point_in_raw(comm, app.val.click_x, app.val.click_y)).valueOf()) {
									/** @type {bool} */
									comm.is_mouse_down = new bool(new bool(false));
								}
							} catch (e) {
							 if (e instanceof BreakException) { break; }
							 else if (e instanceof ContinueException) { continue; }
							 else { throw e; } }
						}
						
					} catch (e) {
					 if (e instanceof BreakException) { break; }
					 else if (e instanceof ContinueException) { continue; }
					 else { throw e; } } 
				}
				
			}
			if ((com.valueOf() instanceof iui__Modal).valueOf()) {
				for (const child of com.val.children) {
					try { 
						/** @type {bool} */
						child.is_mouse_down = new bool(new bool(false));
						if ((child.valueOf() instanceof iui__Tabbox).valueOf()) {
							/** @type {Array_iui__Component} */
							let val = child.val.kids.get(child.val.active_tab.$toJS());
							for (const comm of val) {
								try { 
									/** @type {bool} */
									comm.is_mouse_down = new bool(new bool(false));
								} catch (e) {
								 if (e instanceof BreakException) { break; }
								 else if (e instanceof ContinueException) { continue; }
								 else { throw e; } }
							}
							
						}
					} catch (e) {
					 if (e instanceof BreakException) { break; }
					 else if (e instanceof ContinueException) { continue; }
					 else { throw e; } }
				}
				
			}
			/** @type {bool} */
			com.is_mouse_down = new bool(new bool(false));
		}
		return found;
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace iui */
/**
 * @constructor
 * @param {{win?: iui__Window, click_event_fn?: anon_fn_voidptr_voidptr, needs_pack?: bool, overflow?: bool, update_width?: bool}} init
*/
function iui__VBox({ win = new iui__Window({}), click_event_fn = undefined, needs_pack = new bool(false), overflow = new bool(true), update_width = new bool(true) }) {
	this.win = win
	this.click_event_fn = click_event_fn
	this.needs_pack = needs_pack
	this.overflow = overflow
	this.update_width = update_width
};
iui__VBox.prototype = {
	...iui__Component_A.prototype,
	toString() {
		return `iui__VBox { win: ${this["win"].toString()} , click_event_fn: ${this["click_event_fn"].toString()} , needs_pack: ${this["needs_pack"].toString()} , overflow: ${this["overflow"].toString()} , update_width: ${this["update_width"].toString()} }`
	},
	/** @type {iui__Window} */
	win: new iui__Window({}),
	/** @type {anon_fn_voidptr_voidptr} */
	click_event_fn: undefined,
	/** @type {bool} */
	needs_pack: new bool(false),
	/** @type {bool} */
	overflow: new bool(false),
	/** @type {bool} */
	update_width: new bool(false),
	$toJS() { return this; }
	};

/**
 * @function
 * @param {iui__Window} win
 * @returns {iui__VBox}
*/
function iui__vbox(win) {
win = new $ref(win)
	try {
		return new $ref((function() {
			let _tmp177 = new iui__VBox({});
			_tmp177.win = win;
			_tmp177.click_event_fn = (function () { 
			return function (a, b) {
			}})()
			;
			return _tmp177;
		})()
		);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__VBox_pack(_v_this) {
_v_this = new $ref(_v_this)
	try {
		/** @type {bool} */
		_v_this.val.needs_pack = new bool(new bool(true));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @returns {void}
*/
function iui__VBox_draw(_v_this) {
_v_this = new $ref(_v_this)
	try {
		/** @type {int} */
		let o_x = new int(new int(0));
		/** @type {int} */
		let o_y = new int(new int(0));
		/** @type {int} */
		let width = new int(new int(0));
		/** @type {int} */
		const max_scroll = new int(new int( _v_this.val.children.len.valueOf() - new int(1).valueOf()));
		if ((new bool(_v_this.val.scroll_i.valueOf() > max_scroll.valueOf())).valueOf()) {
			/** @type {int} */
			_v_this.val.scroll_i = new int(max_scroll);
		}
		for (let i = _v_this.val.scroll_i; i < _v_this.val.children.len; i = new int(i + 1)) {
			try { 
				if ((new bool(i.valueOf() < new int(0).valueOf())).valueOf()) {
					continue;
				}
				/** @type {iui__Component} */
				let child = _v_this.val.children.arr.get(new int(i.valueOf()));
				iui__Component_draw_event_fn(child,_v_this.val.win, new $ref(child));
				/** @type {int} */
				const ypos = new int(new int( _v_this.val.y.valueOf() + o_y.valueOf()));
				if ((new bool(ypos.valueOf() < _v_this.val.y.valueOf())).valueOf()) {
					/** @type {int} */
					o_y.val = Math.floor(o_y + new int(child.height));
					continue;
				}
				if ((new bool( !_v_this.val.overflow.val .valueOf() && new bool(ypos.valueOf() > new int( _v_this.val.y.valueOf() + _v_this.val.height.valueOf()).valueOf()).valueOf())).valueOf()) {
					continue;
				}
				iui__draw_with_offset(child, new int( _v_this.val.x.valueOf() + o_x.valueOf()), ypos);
				if ((new bool(new iui__Menubar( _v_this.val.win.val.bar.valueOf().valueOf() != new int(0).valueOf().valueOf()))).valueOf()) {
					if ((new bool(_v_this.val.win.val.bar.val.tik.valueOf() < new int(99).valueOf())).valueOf()) {
						/** @type {bool} */
						_v_this.val.is_mouse_down = new bool(new bool(false));
						/** @type {bool} */
						_v_this.val.is_mouse_rele = new bool(new bool(false));
					}
				}
				if ((_v_this.val.is_mouse_down).valueOf()) {
					if ((iui__point_in_raw(child, _v_this.val.win.val.click_x, _v_this.val.win.val.click_y)).valueOf()) {
						/** @type {bool} */
						child.is_mouse_down = new bool(new bool(true));
					} else {
						/** @type {bool} */
						child.is_mouse_down = new bool(new bool(false));
					}
				} else {
					/** @type {bool} */
					child.is_mouse_down = new bool(new bool(false));
				}
				if ((_v_this.val.is_mouse_rele).valueOf()) {
					if ((iui__point_in_raw(child, _v_this.val.win.val.mouse_x, _v_this.val.win.val.mouse_y)).valueOf()) {
						/** @type {bool} */
						_v_this.val.is_mouse_rele = new bool(new bool(false));
						/** @type {bool} */
						child.is_mouse_rele = new bool(new bool(true));
					} else {
						/** @type {bool} */
						child.is_mouse_down = new bool(new bool(false));
						/** @type {bool} */
						child.is_mouse_rele = new bool(new bool(false));
					}
				} else {
					/** @type {bool} */
					child.is_mouse_rele = new bool(new bool(false));
				}
				/** @type {int} */
				o_y.val = Math.floor(o_y + new int(child.height));
				if ((new bool(width.valueOf() < (new int( child.width.valueOf() + child.x.valueOf())).valueOf())).valueOf()) {
					/** @type {int} */
					width = new int((new int( child.width.valueOf() + child.x.valueOf())));
				}
				/** @type {gg__Size} */
				const size = gg__screen_size();
				if ((new bool(o_y.valueOf() > size.height.valueOf())).valueOf()) {
					break;
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		if ((new bool(o_y.valueOf() != _v_this.val.height.valueOf())).valueOf()) {
			/** @type {int} */
			_v_this.val.height = new int(new int( o_y.valueOf() + (_v_this.val.children.len).valueOf()));
		}
		if ((new bool( new bool(width.valueOf() != _v_this.val.width.valueOf()).valueOf() && _v_this.val.update_width.valueOf())).valueOf()) {
			/** @type {int} */
			_v_this.val.width = new int(width);
		}
		/** @type {bool} */
		_v_this.val.is_mouse_rele = new bool(new bool(false));
		if ((_v_this.val.win.val.debug_draw).valueOf()) {
			gg__Context_draw_rect_empty(_v_this.val.win.val.gg.valueOf(),_v_this.val.x, _v_this.val.y, _v_this.val.width, _v_this.val.height, gx__orange);
		}
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/** @namespace main */
/* [console] */
/* program entry point */
async function js_main() {
	try {
		/** @type {iui__Window} */
		let window = iui__window(iui__get_system_theme(), new string("My Window"), new int(520), new int(500));
		/** @type {iui__Menubar} */
		window.val.bar.val = iui__menubar(window, window.val.theme).val;
		iui__Menubar_add_child(window.val.bar.valueOf(),iui__menuitem(new string("File")));
		iui__Menubar_add_child(window.val.bar.valueOf(),iui__menuitem(new string("Edit")));
		/** @type {iui__MenuItem} */
		let help = iui__menuitem(new string("Help"));
		/** @type {iui__MenuItem} */
		let theme_menu = iui__menuitem(new string("Themes"));
		/** @type {iui__MenuItem} */
		let about = iui__menuitem(new string("About iUI"));
		for (let i = new int(new int(0)); +new bool(i.valueOf() < new int(3).valueOf()); i.val ++) {
			try { 
				let item = iui__menuitem(new string( new string("Item ").valueOf() + int_str(i).valueOf())); iui__MenuItem_add_child(help.valueOf(),item);
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		/** @type {Array_iui__Theme} */
		const themes = iui__get_all_themes();
		for (const theme of themes) {
			try { 
				/** @type {iui__MenuItem} */
				const item = iui__menu_item((function() {
					let _tmp178 = new iui__MenuItemConfig({});
					_tmp178.text = theme.name;
					_tmp178.click_event_fn = main__theme_click;
					return _tmp178;
				})()
				);
				iui__MenuItem_add_child(theme_menu.valueOf(),item);
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		iui__MenuItem_add_child(help.valueOf(),about);
		iui__Menubar_add_child(window.val.bar.valueOf(),help);
		iui__Menubar_add_child(window.val.bar.valueOf(),theme_menu);
		/** @type {iui__Button} */
		let btn = iui__button(window, new string("A Button"));
		iui__Button_set_click(btn,main__btn_click);
		iui__Component_A_set_bounds(btn,new int(30), new int(40), new int(100), new int(25));
		iui__Button_set_click(btn,main__on_click);
		iui__Window_add_child(window.valueOf(),btn);
		/** @type {iui__Button} */
		let btn2 = iui__button(window, new string("This is a Button"));
		iui__Component_A_set_pos(btn2,new int(30), new int(70));
		iui__Button_pack(btn2,);
		iui__Window_add_child(window.valueOf(),btn2);
		/** @type {iui__Textbox} */
		let tbox = iui__textbox(window, new string("This is a Textbox.\nIt has an multiline mode that\ncan support\nmultiple lines\nIt also can scroll and stuff"));
		for (let i = new int(new int(0)); +new bool(i.valueOf() < new int(6).valueOf()); i.val ++) {
			try { 
				tbox.val.text.str = tbox.val.text + new string(new string( new string("\nExtra line #").valueOf() + int_str(i).valueOf())); } catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		iui__Component_A_set_bounds(tbox.valueOf(),new int(30), new int(110), new int(270), new int(100));
		iui__Window_add_child(window.valueOf(),tbox);
		/** @type {iui__Checkbox} */
		let cbox = iui__checkbox(window, new string("Check me!"));
		iui__Component_A_set_bounds(cbox,new int(170), new int(40), new int(90), new int(25));
		/** @type {iui__Checkbox} */
		let cbox2 = iui__checkbox(window, new string("Check me!"));
		iui__Component_A_set_bounds(cbox2,new int(170), new int(70), new int(90), new int(25));
		/** @type {bool} */
		cbox2.is_selected = new bool(new bool(true));
		iui__Window_add_child(window.valueOf(),cbox);
		iui__Window_add_child(window.valueOf(),cbox2);
		/** @type {iui__Select} */
		let sel = iui__selector(window, new string("Selectbox"));
		iui__Component_A_set_bounds(sel.valueOf(),new int(30), new int(230), new int(100), new int(25));
		for (let i = new int(new int(0)); +new bool(i.valueOf() < new int(4).valueOf()); i.val ++) {
			try { 
				array_push(sel.val.items,new string( int_str((new int( new int(25).valueOf() * (new int( i.valueOf() + new int(1).valueOf())).valueOf()))).valueOf() + new string("%").valueOf()),false);
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
		iui__Select_set_change(sel.valueOf(),main__sel_change);
		iui__Window_add_child(window.valueOf(),sel);
		/** @type {iui__Progressbar} */
		let pb = iui__progressbar(window, new int(30));
		iui__Component_A_set_bounds(pb.valueOf(),new int(140), new int(230), new int(100), new int(20));
		iui__Window_add_child(window.valueOf(),pb);
		/** @type {iui__Progressbar} */
		let pb2 = iui__progressbar(window, new int(75));
		iui__Component_A_set_bounds(pb2.valueOf(),new int(250), new int(230), new int(100), new int(20));
		iui__Window_add_child(window.valueOf(),pb2);
		/** @type {iui__Tree} */
		let tree = iui__tree(window, new string("Beverages"));
		iui__Component_A_set_bounds(tree,new int(355), new int(220), new int(150), new int(200));
		/** @type {iui__Tree} */
		let subtree = iui__tree(window, new string("Water"));
		iui__Component_A_set_bounds(subtree,new int(4), new int(4), new int(100), new int(25));
		array_push(tree.childs,subtree,false);
		/** @type {iui__Tree} */
		let subtree2 = iui__tree(window, new string("Coke"));
		iui__Component_A_set_bounds(subtree2,new int(4), new int(4), new int(100), new int(25));
		array_push(tree.childs,subtree2,false);
		/** @type {iui__Tree} */
		let subtree3 = iui__tree(window, new string("Tea"));
		iui__Component_A_set_bounds(subtree3,new int(4), new int(4), new int(100), new int(25));
		array_push(tree.childs,subtree3,false);
		/** @type {iui__Tree} */
		let subtree4 = iui__tree(window, new string("Black Tea"));
		iui__Component_A_set_bounds(subtree4,new int(4), new int(4), new int(100), new int(25));
		array_push(subtree3.childs,subtree4,false);
		/** @type {iui__Tree} */
		let subtree5 = iui__tree(window, new string("Green Tea"));
		iui__Component_A_set_bounds(subtree5,new int(4), new int(4), new int(100), new int(25));
		array_push(subtree3.childs,subtree5,false);
		iui__Window_add_child(window.valueOf(),tree);
		/** @type {iui__Tabbox} */
		let tb = iui__tabbox(window);
		iui__Component_A_set_bounds(tb.valueOf(),new int(310), new int(38), new int(200), new int(172));
		/** @type {iui__Button} */
		let tbtn = iui__button(window, new string("In Tab A"));
		iui__Component_A_set_pos(tbtn,new int(10), new int(10));
		iui__Button_pack(tbtn,);
		iui__Tabbox_add_child(tb.valueOf(),new string("Tab A"), tbtn);
		/** @type {iui__Label} */
		let tbtn1 = iui__label(window, new string("Now in Tab B"), new iui__LabelConfig({}));
		iui__Component_A_set_pos(tbtn1,new int(10), new int(10));
		iui__Label_pack(tbtn1,);
		iui__Tabbox_add_child(tb.valueOf(),new string("Tab B"), tbtn1);
		iui__Window_add_child(window.valueOf(),tb);
		/** @type {iui__TextArea} */
		let code_box = iui__textarea(window, new array(new array_buffer({arr: [new string(new string("module main")), new string(new string("")), new string(new string("fn main() {")), new string(new string("\tmut val := 0")), new string(new string("}"))], len: new int(5), cap: new int(5)})));
		iui__Component_A_set_bounds(code_box.valueOf(),new int(30), new int(270), new int(320), new int(120));
		iui__Window_add_child(window.valueOf(),code_box);
		/** @type {gg__Image} */
		let v_img = gg__Context_create_image(window.val.gg.valueOf(),os__resource_abs_path(new string("v.png")));
		/** @type {iui__Image} */
		let img = iui__image(window, v_img);
		iui__Component_A_set_bounds(img.valueOf(),new int(30), new int(400), new int(50), new int(50));
		iui__Window_add_child(window.valueOf(),img);
		/** @type {iui__HBox} */
		let hbox = iui__hbox(window);
		/** @type {iui__Button} */
		let btn_ = iui__button(window, new string("Button in HBox"));
		iui__Component_A_set_bounds(btn_,new int(0), new int(0), new int(120), new int(30));
		/** @type {iui__Button} */
		let btn3 = iui__button(window, new string("Button 2"));
		iui__Component_A_set_bounds(btn3,new int(0), new int(0), new int(80), new int(30));
		iui__Component_A_add_child(hbox.valueOf(),btn_);
		iui__Component_A_add_child(hbox.valueOf(),btn3);
		iui__Component_A_set_pos(hbox.valueOf(),new int(100), new int(400));
		iui__Component_A_set_bounds(hbox.valueOf(),new int(100), new int(400), new int(250), new int(100));
		iui__Window_add_child(window.valueOf(),hbox);
		gg__Context_run(window.val.gg.valueOf(),);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Progressbar} pb
 * @returns {void}
*/
function main__test(pb) {
pb = new $ref(pb)
	try {
		while (+new bool(true)) {
			try { 
				/** @type {f32} */
				let val = new f32(string_f32(pb.val.text,));
				if ((new bool(val.valueOf() < new int(100).valueOf())).valueOf()) {
					val.val ++;
				} else {
					/** @type {f32} */
					val = new f32(new int(5));
				}
				/** @type {string} */
				pb.val.text = new string(string_replace(f32_str(val),new string("."), new string("")));
				time__sleep(new int_literal( BigInt(new int(80).valueOf()) * BigInt(time__millisecond.valueOf())));
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Window} win
 * @param {iui__Button} com
 * @returns {void}
*/
function main__on_click(win, com) {
win = new $ref(win)
	try {
		iui__debug(new string("on_click"));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Window} win
 * @param {iui__MenuItem} com
 * @returns {void}
*/
function main__theme_click(win, com) {
win = new $ref(win)
	try {
		/** @type {string} */
		const text = new string(com.text);
		/** @type {iui__Theme} */
		const theme = iui__theme_by_name(text);
		iui__Window_set_theme(win.valueOf(),theme);
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Window} win
 * @param {iui__Select} com
 * @param {string} old_val
 * @param {string} new_val
 * @returns {void}
*/
function main__sel_change(win, com, old_val, new_val) {
win = new $ref(win)
	try {
		iui__debug(new string( new string( new string( new string("OLD: ").valueOf() + old_val.valueOf()).valueOf() + new string(", NEW: ").valueOf()).valueOf() + new_val.valueOf()));
		/** @type {string} */
		let a = new string(string_replace(new_val,new string("%"), new string("")));
		for (const kid of win.val.components) {
			try { 
				if ((kid.valueOf() instanceof iui__Progressbar).valueOf()) {
					/** @type {string} */
					kid.text = new string(a);
				}
			} catch (e) {
			 if (e instanceof BreakException) { break; }
			 else if (e instanceof ContinueException) { continue; }
			 else { throw e; } }
		}
		
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

/**
 * @function
 * @param {iui__Window} win
 * @param {iui__Button} com
 * @returns {void}
*/
function main__btn_click(win, com) {
win = new $ref(win)
	try {
		iui__debug(new string("btn click"));
	} catch (e) { 
		if (e instanceof ReturnException) { return e.val; } 
		throw e;
	}
}

None__.prototype.msg = function() {
	return IError_msg(this)
}
None__.prototype.code = function() {
	return IError_code(this)
}
None__.prototype.str = function() {
	return None___str(this)
}
Error.prototype.msg = function() {
	return Error_msg(this)
}
Error.prototype.code = function() {
	return Error_code(this)
}
Error.prototype.str = function() {
	return IError_str(this)
}
MessageError.prototype.msg = function() {
	return MessageError_msg(this)
}
MessageError.prototype.code = function() {
	return MessageError_code(this)
}
MessageError.prototype.str = function() {
	return IError_str(this)
}
time__TimeParseError.prototype.msg = function() {
	return time__TimeParseError_msg(this)
}
time__TimeParseError.prototype.code = function() {
	return IError_code(this)
}
time__TimeParseError.prototype.str = function() {
	return IError_str(this)
}
os__ExecutableNotFoundError.prototype.msg = function() {
	return os__ExecutableNotFoundError_msg(this)
}
os__ExecutableNotFoundError.prototype.code = function() {
	return IError_code(this)
}
os__ExecutableNotFoundError.prototype.str = function() {
	return IError_str(this)
}
iui__Progressbar.prototype.draw = function() {
	return iui__Progressbar_draw(this)
}
iui__Progressbar.prototype.on_mouse_down_event_ = function(e,app) {
	return iui__Component_on_mouse_down_event_(this,e,app)
}
iui__Button.prototype.draw = function() {
	return iui__Button_draw(this)
}
iui__Button.prototype.on_mouse_down_event_ = function(e,app) {
	return iui__Component_on_mouse_down_event_(this,e,app)
}
iui__MenuItem.prototype.draw = function() {
	return iui__Component_draw(this)
}
iui__MenuItem.prototype.on_mouse_down_event_ = function(e,app) {
	return iui__Component_on_mouse_down_event_(this,e,app)
}
iui__Select.prototype.draw = function() {
	return iui__Select_draw(this)
}
iui__Select.prototype.on_mouse_down_event_ = function(e,app) {
	return iui__Component_on_mouse_down_event_(this,e,app)
}
iui__Component_A.prototype.draw = function() {
	return iui__Component_A_draw(this)
}
iui__Component_A.prototype.on_mouse_down_event_ = function(e,app) {
	return iui__Component_on_mouse_down_event_(this,e,app)
}
iui__VBox.prototype.draw = function() {
	return iui__VBox_draw(this)
}
iui__VBox.prototype.on_mouse_down_event_ = function(e,app) {
	return iui__Component_on_mouse_down_event_(this,e,app)
}
iui__Box.prototype.draw = function() {
	return iui__Box_draw(this)
}
iui__Box.prototype.on_mouse_down_event_ = function(e,app) {
	return iui__Component_on_mouse_down_event_(this,e,app)
}
iui__HBox.prototype.draw = function() {
	return iui__HBox_draw(this)
}
iui__HBox.prototype.on_mouse_down_event_ = function(e,app) {
	return iui__Component_on_mouse_down_event_(this,e,app)
}
iui__Checkbox.prototype.draw = function() {
	return iui__Checkbox_draw(this)
}
iui__Checkbox.prototype.on_mouse_down_event_ = function(e,app) {
	return iui__Component_on_mouse_down_event_(this,e,app)
}
iui__Hyperlink.prototype.draw = function() {
	return iui__Hyperlink_draw(this)
}
iui__Hyperlink.prototype.on_mouse_down_event_ = function(e,app) {
	return iui__Component_on_mouse_down_event_(this,e,app)
}
iui__Image.prototype.draw = function() {
	return iui__Image_draw(this)
}
iui__Image.prototype.on_mouse_down_event_ = function(e,app) {
	return iui__Component_on_mouse_down_event_(this,e,app)
}
iui__Label.prototype.draw = function() {
	return iui__Label_draw(this)
}
iui__Label.prototype.on_mouse_down_event_ = function(e,app) {
	return iui__Component_on_mouse_down_event_(this,e,app)
}
iui__Menubar.prototype.draw = function() {
	return iui__Menubar_draw(this)
}
iui__Menubar.prototype.on_mouse_down_event_ = function(e,app) {
	return iui__Component_on_mouse_down_event_(this,e,app)
}
iui__Modal.prototype.draw = function() {
	return iui__Modal_draw(this)
}
iui__Modal.prototype.on_mouse_down_event_ = function(e,app) {
	return iui__Component_on_mouse_down_event_(this,e,app)
}
iui__Slider.prototype.draw = function() {
	return iui__Slider_draw(this)
}
iui__Slider.prototype.on_mouse_down_event_ = function(e,app) {
	return iui__Component_on_mouse_down_event_(this,e,app)
}
iui__Tabbox.prototype.draw = function() {
	return iui__Tabbox_draw(this)
}
iui__Tabbox.prototype.on_mouse_down_event_ = function(e,app) {
	return iui__Component_on_mouse_down_event_(this,e,app)
}
iui__Table.prototype.draw = function() {
	return iui__Table_draw(this)
}
iui__Table.prototype.on_mouse_down_event_ = function(e,app) {
	return iui__Component_on_mouse_down_event_(this,e,app)
}
iui__TextArea.prototype.draw = function() {
	return iui__TextArea_draw(this)
}
iui__TextArea.prototype.on_mouse_down_event_ = function(e,app) {
	return iui__Component_on_mouse_down_event_(this,e,app)
}
iui__Textbox.prototype.draw = function() {
	return iui__Textbox_draw(this)
}
iui__Textbox.prototype.on_mouse_down_event_ = function(e,app) {
	return iui__Component_on_mouse_down_event_(this,e,app)
}
iui__TextField.prototype.draw = function() {
	return iui__TextField_draw(this)
}
iui__TextField.prototype.on_mouse_down_event_ = function(e,app) {
	return iui__Component_on_mouse_down_event_(this,e,app)
}
iui__TextEdit.prototype.draw = function() {
	return iui__TextEdit_draw(this)
}
iui__TextEdit.prototype.on_mouse_down_event_ = function(e,app) {
	return iui__Component_on_mouse_down_event_(this,e,app)
}
iui__Tree.prototype.draw = function() {
	return iui__Tree_draw(this)
}
iui__Tree.prototype.on_mouse_down_event_ = function(e,app) {
	return iui__Component_on_mouse_down_event_(this,e,app)
}
// Initializations for module strings
// Initializations for module builtin
none__ = new IError(new $ref(new None__({})));
// Initializations for module time
time__month_days = new array(new array_buffer({arr: [new int(new int(31)), new int(new int(28)), new int(new int(31)), new int(new int(30)), new int(new int(31)), new int(new int(30)), new int(new int(31)), new int(new int(31)), new int(new int(30)), new int(new int(31)), new int(new int(30)), new int(new int(31))], len: new int(12), cap: new int(12)}));
time__absolute_zero_year = new i64(BigInt(-292277022399n));
time__seconds_per_hour = new int_literal( new int(60).valueOf() * time__seconds_per_minute.valueOf());
time__seconds_per_day = new int_literal( new int(24).valueOf() * time__seconds_per_hour.valueOf());
time__seconds_per_week = new int_literal( new int(7).valueOf() * time__seconds_per_day.valueOf());
time__days_before = new array(new array_buffer({arr: [new int(new int(0)), new int(new int(31)), new int(new int(59)), new int(new int(90)), new int(new int(120)), new int(new int(151)), new int(new int(181)), new int(new int(212)), new int(new int(243)), new int(new int(273)), new int(new int(304)), new int(new int(334)), new int(new int(365))], len: new int(13), cap: new int(13)}));
time__long_days = new array(new array_buffer({arr: [new string(new string("Monday")), new string(new string("Tuesday")), new string(new string("Wednesday")), new string(new string("Thursday")), new string(new string("Friday")), new string(new string("Saturday")), new string(new string("Sunday"))], len: new int(7), cap: new int(7)}));
time__nanosecond = new time__Duration(new int(1));
time__microsecond = new time__Duration(new int_literal( BigInt(new int(1000).valueOf()) * BigInt(time__nanosecond.valueOf())));
time__millisecond = new time__Duration(new int_literal( BigInt(new int(1000).valueOf()) * BigInt(time__microsecond.valueOf())));
time__second = new time__Duration(new int_literal( BigInt(new int(1000).valueOf()) * BigInt(time__millisecond.valueOf())));
time__minute = new time__Duration(new int_literal( BigInt(new int(60).valueOf()) * BigInt(time__second.valueOf())));
time__hour = new time__Duration(new int_literal( BigInt(new int(60).valueOf()) * BigInt(time__minute.valueOf())));
time__infinite = new time__Duration(new i64(BigInt(9223372036854775807n)));
// Initializations for module os
os__path_delimiter = os__get_path_delimiter();
os__path_separator = os__get_path_separator();
os__args = new array(new array_buffer({arr: [], len: new int(0), cap: new int(0)}));
os__wd_at_startup = os__getwd();
os__init();
// Initializations for module gx
gx__black = (function() {
	let _tmp179 = new gx__Color({});
	_tmp179.r = new int(0);
	_tmp179.g = new int(0);
	_tmp179.b = new int(0);
	return _tmp179;
})()
;
gx__gray = (function() {
	let _tmp180 = new gx__Color({});
	_tmp180.r = new int(128);
	_tmp180.g = new int(128);
	_tmp180.b = new int(128);
	return _tmp180;
})()
;
gx__white = (function() {
	let _tmp181 = new gx__Color({});
	_tmp181.r = new int(255);
	_tmp181.g = new int(255);
	_tmp181.b = new int(255);
	return _tmp181;
})()
;
gx__red = (function() {
	let _tmp182 = new gx__Color({});
	_tmp182.r = new int(255);
	_tmp182.g = new int(0);
	_tmp182.b = new int(0);
	return _tmp182;
})()
;
gx__green = (function() {
	let _tmp183 = new gx__Color({});
	_tmp183.r = new int(0);
	_tmp183.g = new int(255);
	_tmp183.b = new int(0);
	return _tmp183;
})()
;
gx__blue = (function() {
	let _tmp184 = new gx__Color({});
	_tmp184.r = new int(0);
	_tmp184.g = new int(0);
	_tmp184.b = new int(255);
	return _tmp184;
})()
;
gx__yellow = (function() {
	let _tmp185 = new gx__Color({});
	_tmp185.r = new int(255);
	_tmp185.g = new int(255);
	_tmp185.b = new int(0);
	return _tmp185;
})()
;
gx__magenta = (function() {
	let _tmp186 = new gx__Color({});
	_tmp186.r = new int(255);
	_tmp186.g = new int(0);
	_tmp186.b = new int(255);
	return _tmp186;
})()
;
gx__cyan = (function() {
	let _tmp187 = new gx__Color({});
	_tmp187.r = new int(0);
	_tmp187.g = new int(255);
	_tmp187.b = new int(255);
	return _tmp187;
})()
;
gx__orange = (function() {
	let _tmp188 = new gx__Color({});
	_tmp188.r = new int(255);
	_tmp188.g = new int(165);
	_tmp188.b = new int(0);
	return _tmp188;
})()
;
gx__purple = (function() {
	let _tmp189 = new gx__Color({});
	_tmp189.r = new int(128);
	_tmp189.g = new int(0);
	_tmp189.b = new int(128);
	return _tmp189;
})()
;
gx__indigo = (function() {
	let _tmp190 = new gx__Color({});
	_tmp190.r = new int(75);
	_tmp190.g = new int(0);
	_tmp190.b = new int(130);
	return _tmp190;
})()
;
gx__pink = (function() {
	let _tmp191 = new gx__Color({});
	_tmp191.r = new int(255);
	_tmp191.g = new int(192);
	_tmp191.b = new int(203);
	return _tmp191;
})()
;
gx__violet = (function() {
	let _tmp192 = new gx__Color({});
	_tmp192.r = new int(238);
	_tmp192.g = new int(130);
	_tmp192.b = new int(238);
	return _tmp192;
})()
;
gx__dark_blue = (function() {
	let _tmp193 = new gx__Color({});
	_tmp193.r = new int(0);
	_tmp193.g = new int(0);
	_tmp193.b = new int(139);
	return _tmp193;
})()
;
gx__dark_gray = (function() {
	let _tmp194 = new gx__Color({});
	_tmp194.r = new int(169);
	_tmp194.g = new int(169);
	_tmp194.b = new int(169);
	return _tmp194;
})()
;
gx__dark_green = (function() {
	let _tmp195 = new gx__Color({});
	_tmp195.r = new int(0);
	_tmp195.g = new int(100);
	_tmp195.b = new int(0);
	return _tmp195;
})()
;
gx__dark_red = (function() {
	let _tmp196 = new gx__Color({});
	_tmp196.r = new int(139);
	_tmp196.g = new int(0);
	_tmp196.b = new int(0);
	return _tmp196;
})()
;
gx__light_blue = (function() {
	let _tmp197 = new gx__Color({});
	_tmp197.r = new int(173);
	_tmp197.g = new int(216);
	_tmp197.b = new int(230);
	return _tmp197;
})()
;
gx__light_gray = (function() {
	let _tmp198 = new gx__Color({});
	_tmp198.r = new int(211);
	_tmp198.g = new int(211);
	_tmp198.b = new int(211);
	return _tmp198;
})()
;
gx__light_green = (function() {
	let _tmp199 = new gx__Color({});
	_tmp199.r = new int(144);
	_tmp199.g = new int(238);
	_tmp199.b = new int(144);
	return _tmp199;
})()
;
gx__light_red = (function() {
	let _tmp200 = new gx__Color({});
	_tmp200.r = new int(255);
	_tmp200.g = new int(204);
	_tmp200.b = new int(203);
	return _tmp200;
})()
;
gx__string_colors = new map(
	{
		[new string("blue").$toJS()]: gx__blue,
		[new string("red").$toJS()]: gx__red,
		[new string("green").$toJS()]: gx__green,
		[new string("yellow").$toJS()]: gx__yellow,
		[new string("orange").$toJS()]: gx__orange,
		[new string("purple").$toJS()]: gx__purple,
		[new string("black").$toJS()]: gx__black,
		[new string("gray").$toJS()]: gx__gray,
		[new string("indigo").$toJS()]: gx__indigo,
		[new string("pink").$toJS()]: gx__pink,
		[new string("violet").$toJS()]: gx__violet,
		[new string("white").$toJS()]: gx__white,
		[new string("dark_blue").$toJS()]: gx__dark_blue,
		[new string("dark_gray").$toJS()]: gx__dark_gray,
		[new string("dark_green").$toJS()]: gx__dark_green,
		[new string("dark_red").$toJS()]: gx__dark_red,
		[new string("light_blue").$toJS()]: gx__light_blue,
		[new string("light_gray").$toJS()]: gx__light_gray,
		[new string("light_green").$toJS()]: gx__light_green,
		[new string("light_red").$toJS()]: gx__light_red
	});
gx__align_left = gx__HorizontalAlign.left;
gx__align_right = gx__HorizontalAlign.right;
// Initializations for module js.dom
js__dom__document = new Document();
js__dom__init();
// Initializations for module v.util.version
// Initializations for module math.internal
// Initializations for module gg
gg__size = (function() {
	let _tmp201 = new gg__Size({});
	_tmp201.width = new int(0);
	_tmp201.height = new int(0);
	return _tmp201;
})()
;
// Initializations for module math
math__uvnan = new u64(BigInt(0x7FF8000000000001n));
math__uvinf = new u64(BigInt(0x7FF0000000000000n));
math__uvneginf = new u64(BigInt(0xFFF0000000000000n));
math__uvone = new u64(BigInt(0x3FF0000000000000n));
math__shift = new int_literal( new int_literal( new int(64).valueOf() - new int(11).valueOf()).valueOf() - new int(1).valueOf());
math__normalize_smallest_mask = new u64(new u64( BigInt(new u64(BigInt(1n)).valueOf()) << BigInt(new int(52).valueOf())));
math__sign_mask = new u64(BigInt(0x8000000000000000n));
math__frac_mask = new u64(new u64( BigInt((new u64( BigInt(new u64(BigInt(1n)).valueOf()) << BigInt(new u64(math__shift).valueOf()))).valueOf()) - BigInt(new u64(BigInt(1n)).valueOf())));
math__pi_2 = new float_literal( math__pi.valueOf() / new f32(2.0).valueOf());
math__pi_4 = new float_literal( math__pi.valueOf() / new f32(4.0).valueOf());
math__log2_e = new float_literal( new f32(1.0).valueOf() / math__ln2.valueOf());
math__log10_e = new float_literal( new f32(1.0).valueOf() / math__ln10.valueOf());
math__min_i64 = new i64(new int_literal( new int(-9223372036854775807).valueOf() - new int(1).valueOf()));
math__max_i64 = new i64(BigInt(9223372036854775807n));
math__max_u32 = new int(4294967295);
math__max_u64 = new u64(BigInt(18446744073709551615n));
math__f64_max_exp = new f64(new int(1024));
math__f64_min_exp = new f64(new int(-1021));
math__bernoulli = new array(new array_buffer({arr: [new f64(new float_literal( new f32(1.0).valueOf() / (new float_literal( new float_literal( new f32(6.0).valueOf() * new f32(2.0).valueOf()).valueOf() * new f32(1.0).valueOf())).valueOf())), new f64(new float_literal( new f32(-1.0).valueOf() / (new float_literal( new float_literal( new f32(30.0).valueOf() * new f32(4.0).valueOf()).valueOf() * new f32(3.0).valueOf())).valueOf())), new f64(new float_literal( new f32(1.0).valueOf() / (new float_literal( new float_literal( new f32(42.0).valueOf() * new f32(6.0).valueOf()).valueOf() * new f32(5.0).valueOf())).valueOf())), new f64(new float_literal( new f32(-1.0).valueOf() / (new float_literal( new float_literal( new f32(30.0).valueOf() * new f32(8.0).valueOf()).valueOf() * new f32(7.0).valueOf())).valueOf())), new f64(new float_literal( new f32(5.0).valueOf() / (new float_literal( new float_literal( new f32(66.0).valueOf() * new f32(10.0).valueOf()).valueOf() * new f32(9.0).valueOf())).valueOf())), new f64(new float_literal( new f32(-691.0).valueOf() / (new float_literal( new float_literal( new f32(2730.0).valueOf() * new f32(12.0).valueOf()).valueOf() * new f32(11.0).valueOf())).valueOf())), new f64(new float_literal( new f32(7.0).valueOf() / (new float_literal( new float_literal( new f32(6.0).valueOf() * new f32(14.0).valueOf()).valueOf() * new f32(13.0).valueOf())).valueOf())), new f64(new float_literal( new f32(-3617.0).valueOf() / (new float_literal( new float_literal( new f32(510.0).valueOf() * new f32(16.0).valueOf()).valueOf() * new f32(15.0).valueOf())).valueOf())), new f64(new float_literal( new f32(43867.0).valueOf() / (new float_literal( new float_literal( new f32(796.0).valueOf() * new f32(18.0).valueOf()).valueOf() * new f32(17.0).valueOf())).valueOf())), new f64(new float_literal( new f32(-174611.0).valueOf() / (new float_literal( new float_literal( new f32(330.0).valueOf() * new f32(20.0).valueOf()).valueOf() * new f32(19.0).valueOf())).valueOf()))], len: new int(10), cap: new int(10)}));
math__factorials_table = new array(new array_buffer({arr: [new f64(new f32(1.000000000000000000000e+0)), new f64(new f32(1.000000000000000000000e+0)), new f64(new f32(2.000000000000000000000e+0)), new f64(new f32(6.000000000000000000000e+0)), new f64(new f32(2.400000000000000000000e+1)), new f64(new f32(1.200000000000000000000e+2)), new f64(new f32(7.200000000000000000000e+2)), new f64(new f32(5.040000000000000000000e+3)), new f64(new f32(4.032000000000000000000e+4)), new f64(new f32(3.628800000000000000000e+5)), new f64(new f32(3.628800000000000000000e+6)), new f64(new f32(3.991680000000000000000e+7)), new f64(new f32(4.790016000000000000000e+8)), new f64(new f32(6.227020800000000000000e+9)), new f64(new f32(8.717829120000000000000e+10)), new f64(new f32(1.307674368000000000000e+12)), new f64(new f32(2.092278988800000000000e+13)), new f64(new f32(3.556874280960000000000e+14)), new f64(new f32(6.402373705728000000000e+15)), new f64(new f32(1.216451004088320000000e+17)), new f64(new f32(2.432902008176640000000e+18)), new f64(new f32(5.109094217170944000000e+19)), new f64(new f32(1.124000727777607680000e+21)), new f64(new f32(2.585201673888497664000e+22)), new f64(new f32(6.204484017332394393600e+23)), new f64(new f32(1.551121004333098598400e+25)), new f64(new f32(4.032914611266056355840e+26)), new f64(new f32(1.088886945041835216077e+28)), new f64(new f32(3.048883446117138605015e+29)), new f64(new f32(8.841761993739701954544e+30)), new f64(new f32(2.652528598121910586363e+32)), new f64(new f32(8.222838654177922817726e+33)), new f64(new f32(2.631308369336935301672e+35)), new f64(new f32(8.683317618811886495518e+36)), new f64(new f32(2.952327990396041408476e+38)), new f64(new f32(1.033314796638614492967e+40)), new f64(new f32(3.719933267899012174680e+41)), new f64(new f32(1.376375309122634504632e+43)), new f64(new f32(5.230226174666011117600e+44)), new f64(new f32(2.039788208119744335864e+46)), new f64(new f32(8.159152832478977343456e+47)), new f64(new f32(3.345252661316380710817e+49)), new f64(new f32(1.405006117752879898543e+51)), new f64(new f32(6.041526306337383563736e+52)), new f64(new f32(2.658271574788448768044e+54)), new f64(new f32(1.196222208654801945620e+56)), new f64(new f32(5.502622159812088949850e+57)), new f64(new f32(2.586232415111681806430e+59)), new f64(new f32(1.241391559253607267086e+61)), new f64(new f32(6.082818640342675608723e+62)), new f64(new f32(3.041409320171337804361e+64)), new f64(new f32(1.551118753287382280224e+66)), new f64(new f32(8.065817517094387857166e+67)), new f64(new f32(4.274883284060025564298e+69)), new f64(new f32(2.308436973392413804721e+71)), new f64(new f32(1.269640335365827592597e+73)), new f64(new f32(7.109985878048634518540e+74)), new f64(new f32(4.052691950487721675568e+76)), new f64(new f32(2.350561331282878571829e+78)), new f64(new f32(1.386831185456898357379e+80)), new f64(new f32(8.320987112741390144276e+81)), new f64(new f32(5.075802138772247988009e+83)), new f64(new f32(3.146997326038793752565e+85)), new f64(new f32(1.982608315404440064116e+87)), new f64(new f32(1.268869321858841641034e+89)), new f64(new f32(8.247650592082470666723e+90)), new f64(new f32(5.443449390774430640037e+92)), new f64(new f32(3.647111091818868528825e+94)), new f64(new f32(2.480035542436830599601e+96)), new f64(new f32(1.711224524281413113725e+98)), new f64(new f32(1.197857166996989179607e+100)), new f64(new f32(8.504785885678623175212e+101)), new f64(new f32(6.123445837688608686152e+103)), new f64(new f32(4.470115461512684340891e+105)), new f64(new f32(3.307885441519386412260e+107)), new f64(new f32(2.480914081139539809195e+109)), new f64(new f32(1.885494701666050254988e+111)), new f64(new f32(1.451830920282858696341e+113)), new f64(new f32(1.132428117820629783146e+115)), new f64(new f32(8.946182130782975286851e+116)), new f64(new f32(7.156945704626380229481e+118)), new f64(new f32(5.797126020747367985880e+120)), new f64(new f32(4.753643337012841748421e+122)), new f64(new f32(3.945523969720658651190e+124)), new f64(new f32(3.314240134565353266999e+126)), new f64(new f32(2.817104114380550276949e+128)), new f64(new f32(2.422709538367273238177e+130)), new f64(new f32(2.107757298379527717214e+132)), new f64(new f32(1.854826422573984391148e+134)), new f64(new f32(1.650795516090846108122e+136)), new f64(new f32(1.485715964481761497310e+138)), new f64(new f32(1.352001527678402962552e+140)), new f64(new f32(1.243841405464130725548e+142)), new f64(new f32(1.156772507081641574759e+144)), new f64(new f32(1.087366156656743080274e+146)), new f64(new f32(1.032997848823905926260e+148)), new f64(new f32(9.916779348709496892096e+149)), new f64(new f32(9.619275968248211985333e+151)), new f64(new f32(9.426890448883247745626e+153)), new f64(new f32(9.332621544394415268170e+155)), new f64(new f32(9.332621544394415268170e+157)), new f64(new f32(9.425947759838359420852e+159)), new f64(new f32(9.614466715035126609269e+161)), new f64(new f32(9.902900716486180407547e+163)), new f64(new f32(1.029901674514562762385e+166)), new f64(new f32(1.081396758240290900504e+168)), new f64(new f32(1.146280563734708354534e+170)), new f64(new f32(1.226520203196137939352e+172)), new f64(new f32(1.324641819451828974500e+174)), new f64(new f32(1.443859583202493582205e+176)), new f64(new f32(1.588245541522742940425e+178)), new f64(new f32(1.762952551090244663872e+180)), new f64(new f32(1.974506857221074023537e+182)), new f64(new f32(2.231192748659813646597e+184)), new f64(new f32(2.543559733472187557120e+186)), new f64(new f32(2.925093693493015690688e+188)), new f64(new f32(3.393108684451898201198e+190)), new f64(new f32(3.969937160808720895402e+192)), new f64(new f32(4.684525849754290656574e+194)), new f64(new f32(5.574585761207605881323e+196)), new f64(new f32(6.689502913449127057588e+198)), new f64(new f32(8.094298525273443739682e+200)), new f64(new f32(9.875044200833601362412e+202)), new f64(new f32(1.214630436702532967577e+205)), new f64(new f32(1.506141741511140879795e+207)), new f64(new f32(1.882677176888926099744e+209)), new f64(new f32(2.372173242880046885677e+211)), new f64(new f32(3.012660018457659544810e+213)), new f64(new f32(3.856204823625804217357e+215)), new f64(new f32(4.974504222477287440390e+217)), new f64(new f32(6.466855489220473672507e+219)), new f64(new f32(8.471580690878820510985e+221)), new f64(new f32(1.118248651196004307450e+224)), new f64(new f32(1.487270706090685728908e+226)), new f64(new f32(1.992942746161518876737e+228)), new f64(new f32(2.690472707318050483595e+230)), new f64(new f32(3.659042881952548657690e+232)), new f64(new f32(5.012888748274991661035e+234)), new f64(new f32(6.917786472619488492228e+236)), new f64(new f32(9.615723196941089004197e+238)), new f64(new f32(1.346201247571752460588e+241)), new f64(new f32(1.898143759076170969429e+243)), new f64(new f32(2.695364137888162776589e+245)), new f64(new f32(3.854370717180072770522e+247)), new f64(new f32(5.550293832739304789551e+249)), new f64(new f32(8.047926057471991944849e+251)), new f64(new f32(1.174997204390910823948e+254)), new f64(new f32(1.727245890454638911203e+256)), new f64(new f32(2.556323917872865588581e+258)), new f64(new f32(3.808922637630569726986e+260)), new f64(new f32(5.713383956445854590479e+262)), new f64(new f32(8.627209774233240431623e+264)), new f64(new f32(1.311335885683452545607e+267)), new f64(new f32(2.006343905095682394778e+269)), new f64(new f32(3.089769613847350887959e+271)), new f64(new f32(4.789142901463393876336e+273)), new f64(new f32(7.471062926282894447084e+275)), new f64(new f32(1.172956879426414428192e+278)), new f64(new f32(1.853271869493734796544e+280)), new f64(new f32(2.946702272495038326504e+282)), new f64(new f32(4.714723635992061322407e+284)), new f64(new f32(7.590705053947218729075e+286)), new f64(new f32(1.229694218739449434110e+289)), new f64(new f32(2.004401576545302577600e+291)), new f64(new f32(3.287218585534296227263e+293)), new f64(new f32(5.423910666131588774984e+295)), new f64(new f32(9.003691705778437366474e+297)), new f64(new f32(1.503616514864999040201e+300)), new f64(new f32(2.526075744973198387538e+302)), new f64(new f32(4.269068009004705274939e+304)), new f64(new f32(7.257415615307998967397e+306))], len: new int(171), cap: new int(171)}));
math__log_factorials_table = new array(new array_buffer({arr: [new f64(new f32(0.000000000000000000000e+0)), new f64(new f32(0.000000000000000000000e+0)), new f64(new f32(6.931471805599453094172e-1)), new f64(new f32(1.791759469228055000812e+0)), new f64(new f32(3.178053830347945619647e+0)), new f64(new f32(4.787491742782045994248e+0)), new f64(new f32(6.579251212010100995060e+0)), new f64(new f32(8.525161361065414300166e+0)), new f64(new f32(1.060460290274525022842e+1)), new f64(new f32(1.280182748008146961121e+1)), new f64(new f32(1.510441257307551529523e+1)), new f64(new f32(1.750230784587388583929e+1)), new f64(new f32(1.998721449566188614952e+1)), new f64(new f32(2.255216385312342288557e+1)), new f64(new f32(2.519122118273868150009e+1)), new f64(new f32(2.789927138384089156609e+1)), new f64(new f32(3.067186010608067280376e+1)), new f64(new f32(3.350507345013688888401e+1)), new f64(new f32(3.639544520803305357622e+1)), new f64(new f32(3.933988418719949403622e+1)), new f64(new f32(4.233561646075348502966e+1)), new f64(new f32(4.538013889847690802616e+1)), new f64(new f32(4.847118135183522387964e+1)), new f64(new f32(5.160667556776437357045e+1)), new f64(new f32(5.478472939811231919009e+1)), new f64(new f32(5.800360522298051993929e+1)), new f64(new f32(6.126170176100200198477e+1)), new f64(new f32(6.455753862700633105895e+1)), new f64(new f32(6.788974313718153498289e+1)), new f64(new f32(7.125703896716800901007e+1)), new f64(new f32(7.465823634883016438549e+1)), new f64(new f32(7.809222355331531063142e+1)), new f64(new f32(8.155795945611503717850e+1)), new f64(new f32(8.505446701758151741396e+1)), new f64(new f32(8.858082754219767880363e+1)), new f64(new f32(9.213617560368709248333e+1)), new f64(new f32(9.571969454214320248496e+1)), new f64(new f32(9.933061245478742692933e+1)), new f64(new f32(1.029681986145138126988e+2)), new f64(new f32(1.066317602606434591262e+2)), new f64(new f32(1.103206397147573954291e+2)), new f64(new f32(1.140342117814617032329e+2)), new f64(new f32(1.177718813997450715388e+2)), new f64(new f32(1.215330815154386339623e+2)), new f64(new f32(1.253172711493568951252e+2)), new f64(new f32(1.291239336391272148826e+2)), new f64(new f32(1.329525750356163098828e+2)), new f64(new f32(1.368027226373263684696e+2)), new f64(new f32(1.406739236482342593987e+2)), new f64(new f32(1.445657439463448860089e+2)), new f64(new f32(1.484777669517730320675e+2)), new f64(new f32(1.524095925844973578392e+2)), new f64(new f32(1.563608363030787851941e+2)), new f64(new f32(1.603311282166309070282e+2)), new f64(new f32(1.643201122631951814118e+2)), new f64(new f32(1.683274454484276523305e+2)), new f64(new f32(1.723527971391628015638e+2)), new f64(new f32(1.763958484069973517152e+2)), new f64(new f32(1.804562914175437710518e+2)), new f64(new f32(1.845338288614494905025e+2)), new f64(new f32(1.886281734236715911873e+2)), new f64(new f32(1.927390472878449024360e+2)), new f64(new f32(1.968661816728899939914e+2)), new f64(new f32(2.010093163992815266793e+2)), new f64(new f32(2.051681994826411985358e+2)), new f64(new f32(2.093425867525368356464e+2)), new f64(new f32(2.135322414945632611913e+2)), new f64(new f32(2.177369341139542272510e+2)), new f64(new f32(2.219564418191303339501e+2)), new f64(new f32(2.261905483237275933323e+2)), new f64(new f32(2.304390435657769523214e+2)), new f64(new f32(2.347017234428182677427e+2)), new f64(new f32(2.389783895618343230538e+2)), new f64(new f32(2.432688490029827141829e+2)), new f64(new f32(2.475729140961868839366e+2)), new f64(new f32(2.518904022097231943772e+2)), new f64(new f32(2.562211355500095254561e+2)), new f64(new f32(2.605649409718632093053e+2)), new f64(new f32(2.649216497985528010421e+2)), new f64(new f32(2.692910976510198225363e+2)), new f64(new f32(2.736731242856937041486e+2)), new f64(new f32(2.780675734403661429141e+2)), new f64(new f32(2.824742926876303960274e+2)), new f64(new f32(2.868931332954269939509e+2)), new f64(new f32(2.913239500942703075662e+2)), new f64(new f32(2.957666013507606240211e+2)), new f64(new f32(3.002209486470141317540e+2)), new f64(new f32(3.046868567656687154726e+2)), new f64(new f32(3.091641935801469219449e+2)), new f64(new f32(3.136528299498790617832e+2)), new f64(new f32(3.181526396202093268500e+2)), new f64(new f32(3.226634991267261768912e+2)), new f64(new f32(3.271852877037752172008e+2)), new f64(new f32(3.317178871969284731381e+2)), new f64(new f32(3.362611819791984770344e+2)), new f64(new f32(3.408150588707990178690e+2)), new f64(new f32(3.453794070622668541074e+2)), new f64(new f32(3.499541180407702369296e+2)), new f64(new f32(3.545390855194408088492e+2)), new f64(new f32(3.591342053695753987760e+2)), new f64(new f32(3.637393755555634901441e+2)), new f64(new f32(3.683544960724047495950e+2)), new f64(new f32(3.729794688856890206760e+2)), new f64(new f32(3.776141978739186564468e+2)), new f64(new f32(3.822585887730600291111e+2)), new f64(new f32(3.869125491232175524822e+2)), new f64(new f32(3.915759882173296196258e+2)), new f64(new f32(3.962488170517915257991e+2)), new f64(new f32(4.009309482789157454921e+2)), new f64(new f32(4.056222961611448891925e+2)), new f64(new f32(4.103227765269373054205e+2)), new f64(new f32(4.150323067282496395563e+2)), new f64(new f32(4.197508055995447340991e+2)), new f64(new f32(4.244781934182570746677e+2)), new f64(new f32(4.292143918666515701285e+2)), new f64(new f32(4.339593239950148201939e+2)), new f64(new f32(4.387129141861211848399e+2)), new f64(new f32(4.434750881209189409588e+2)), new f64(new f32(4.482457727453846057188e+2)), new f64(new f32(4.530248962384961351041e+2)), new f64(new f32(4.578123879812781810984e+2)), new f64(new f32(4.626081785268749221865e+2)), new f64(new f32(4.674121995716081787447e+2)), new f64(new f32(4.722243839269805962399e+2)), new f64(new f32(4.770446654925856331047e+2)), new f64(new f32(4.818729792298879342285e+2)), new f64(new f32(4.867092611368394122258e+2)), new f64(new f32(4.915534482232980034989e+2)), new f64(new f32(4.964054784872176206648e+2)), new f64(new f32(5.012652908915792927797e+2)), new f64(new f32(5.061328253420348751997e+2)), new f64(new f32(5.110080226652360267439e+2)), new f64(new f32(5.158908245878223975982e+2)), new f64(new f32(5.207811737160441513633e+2)), new f64(new f32(5.256790135159950627324e+2)), new f64(new f32(5.305842882944334921812e+2)), new f64(new f32(5.354969431801695441897e+2)), new f64(new f32(5.404169241059976691050e+2)), new f64(new f32(5.453441777911548737966e+2)), new f64(new f32(5.502786517242855655538e+2)), new f64(new f32(5.552202941468948698523e+2)), new f64(new f32(5.601690540372730381305e+2)), new f64(new f32(5.651248810948742988613e+2)), new f64(new f32(5.700877257251342061414e+2)), new f64(new f32(5.750575390247102067619e+2)), new f64(new f32(5.800342727671307811636e+2)), new f64(new f32(5.850178793888391176022e+2)), new f64(new f32(5.900083119756178539038e+2)), new f64(new f32(5.950055242493819689670e+2)), new f64(new f32(6.000094705553274281080e+2)), new f64(new f32(6.050201058494236838580e+2)), new f64(new f32(6.100373856862386081868e+2)), new f64(new f32(6.150612662070848845750e+2)), new f64(new f32(6.200917041284773200381e+2)), new f64(new f32(6.251286567308909491967e+2)), new f64(new f32(6.301720818478101958172e+2)), new f64(new f32(6.352219378550597328635e+2)), new f64(new f32(6.402781836604080409209e+2)), new f64(new f32(6.453407786934350077245e+2)), new f64(new f32(6.504096828956552392500e+2)), new f64(new f32(6.554848567108890661717e+2)), new f64(new f32(6.605662610758735291676e+2)), new f64(new f32(6.656538574111059132426e+2)), new f64(new f32(6.707476076119126755767e+2)), new f64(new f32(6.758474740397368739994e+2)), new f64(new f32(6.809534195136374546094e+2)), new f64(new f32(6.860654073019939978423e+2)), new f64(new f32(6.911834011144107529496e+2)), new f64(new f32(6.963073650938140118743e+2)), new f64(new f32(7.014372638087370853465e+2)), new f64(new f32(7.065730622457873471107e+2)), new f64(new f32(7.117147258022900069535e+2))], len: new int(172), cap: new int(172)}));
math__gamma_p = new array(new array_buffer({arr: [new f64(new f32(1.60119522476751861407e-04)), new f64(new f32(1.19135147006586384913e-03)), new f64(new f32(1.04213797561761569935e-02)), new f64(new f32(4.76367800457137231464e-02)), new f64(new f32(2.07448227648435975150e-01)), new f64(new f32(4.94214826801497100753e-01)), new f64(new f32(9.99999999999999996796e-01))], len: new int(7), cap: new int(7)}));
math__gamma_q = new array(new array_buffer({arr: [new f64(new f32(-2.31581873324120129819e-05)), new f64(new f32(5.39605580493303397842e-04)), new f64(new f32(-4.45641913851797240494e-03)), new f64(new f32(1.18139785222060435552e-02)), new f64(new f32(3.58236398605498653373e-02)), new f64(new f32(-2.34591795718243348568e-01)), new f64(new f32(7.14304917030273074085e-02)), new f64(new f32(1.00000000000000000320e+00))], len: new int(8), cap: new int(8)}));
math__gamma_s = new array(new array_buffer({arr: [new f64(new f32(7.87311395793093628397e-04)), new f64(new f32(-2.29549961613378126380e-04)), new f64(new f32(-2.68132617805781232825e-03)), new f64(new f32(3.47222221605458667310e-03)), new f64(new f32(8.33333333333482257126e-02))], len: new int(5), cap: new int(5)}));
math__lgamma_a = new array(new array_buffer({arr: [new f64(new f32(7.72156649015328655494e-02)), new f64(new f32(3.22467033424113591611e-01)), new f64(new f32(6.73523010531292681824e-02)), new f64(new f32(2.05808084325167332806e-02)), new f64(new f32(7.38555086081402883957e-03)), new f64(new f32(2.89051383673415629091e-03)), new f64(new f32(1.19270763183362067845e-03)), new f64(new f32(5.10069792153511336608e-04)), new f64(new f32(2.20862790713908385557e-04)), new f64(new f32(1.08011567247583939954e-04)), new f64(new f32(2.52144565451257326939e-05)), new f64(new f32(4.48640949618915160150e-05))], len: new int(12), cap: new int(12)}));
math__lgamma_r = new array(new array_buffer({arr: [new f64(new f32(1.0)), new f64(new f32(1.39200533467621045958e+00)), new f64(new f32(7.21935547567138069525e-01)), new f64(new f32(1.71933865632803078993e-01)), new f64(new f32(1.86459191715652901344e-02)), new f64(new f32(7.77942496381893596434e-04)), new f64(new f32(7.32668430744625636189e-06))], len: new int(7), cap: new int(7)}));
math__lgamma_s = new array(new array_buffer({arr: [new f64(new f32(-7.72156649015328655494e-02)), new f64(new f32(2.14982415960608852501e-01)), new f64(new f32(3.25778796408930981787e-01)), new f64(new f32(1.46350472652464452805e-01)), new f64(new f32(2.66422703033638609560e-02)), new f64(new f32(1.84028451407337715652e-03)), new f64(new f32(3.19475326584100867617e-05))], len: new int(7), cap: new int(7)}));
math__lgamma_t = new array(new array_buffer({arr: [new f64(new f32(4.83836122723810047042e-01)), new f64(new f32(-1.47587722994593911752e-01)), new f64(new f32(6.46249402391333854778e-02)), new f64(new f32(-3.27885410759859649565e-02)), new f64(new f32(1.79706750811820387126e-02)), new f64(new f32(-1.03142241298341437450e-02)), new f64(new f32(6.10053870246291332635e-03)), new f64(new f32(-3.68452016781138256760e-03)), new f64(new f32(2.25964780900612472250e-03)), new f64(new f32(-1.40346469989232843813e-03)), new f64(new f32(8.81081882437654011382e-04)), new f64(new f32(-5.38595305356740546715e-04)), new f64(new f32(3.15632070903625950361e-04)), new f64(new f32(-3.12754168375120860518e-04)), new f64(new f32(3.35529192635519073543e-04))], len: new int(15), cap: new int(15)}));
math__lgamma_u = new array(new array_buffer({arr: [new f64(new f32(-7.72156649015328655494e-02)), new f64(new f32(6.32827064025093366517e-01)), new f64(new f32(1.45492250137234768737e+00)), new f64(new f32(9.77717527963372745603e-01)), new f64(new f32(2.28963728064692451092e-01)), new f64(new f32(1.33810918536787660377e-02))], len: new int(6), cap: new int(6)}));
math__lgamma_v = new array(new array_buffer({arr: [new f64(new f32(1.0)), new f64(new f32(2.45597793713041134822e+00)), new f64(new f32(2.12848976379893395361e+00)), new f64(new f32(7.69285150456672783825e-01)), new f64(new f32(1.04222645593369134254e-01)), new f64(new f32(3.21709242282423911810e-03))], len: new int(6), cap: new int(6)}));
math__lgamma_w = new array(new array_buffer({arr: [new f64(new f32(4.18938533204672725052e-01)), new f64(new f32(8.33333333333329678849e-02)), new f64(new f32(-2.77777777728775536470e-03)), new f64(new f32(7.93650558643019558500e-04)), new f64(new f32(-5.95187557450339963135e-04)), new f64(new f32(8.36339918996282139126e-04)), new f64(new f32(-1.63092934096575273989e-03))], len: new int(7), cap: new int(7)}));
math__pow10tab = new array(new array_buffer({arr: [new f64(new f32(1e+00)), new f64(new f32(1e+01)), new f64(new f32(1e+02)), new f64(new f32(1e+03)), new f64(new f32(1e+04)), new f64(new f32(1e+05)), new f64(new f32(1e+06)), new f64(new f32(1e+07)), new f64(new f32(1e+08)), new f64(new f32(1e+09)), new f64(new f32(1e+10)), new f64(new f32(1e+11)), new f64(new f32(1e+12)), new f64(new f32(1e+13)), new f64(new f32(1e+14)), new f64(new f32(1e+15)), new f64(new f32(1e+16)), new f64(new f32(1e+17)), new f64(new f32(1e+18)), new f64(new f32(1e+19)), new f64(new f32(1e+20)), new f64(new f32(1e+21)), new f64(new f32(1e+22)), new f64(new f32(1e+23)), new f64(new f32(1e+24)), new f64(new f32(1e+25)), new f64(new f32(1e+26)), new f64(new f32(1e+27)), new f64(new f32(1e+28)), new f64(new f32(1e+29)), new f64(new f32(1e+30)), new f64(new f32(1e+31))], len: new int(32), cap: new int(32)}));
math__pow10postab32 = new array(new array_buffer({arr: [new f64(new f32(1e+00)), new f64(new f32(1e+32)), new f64(new f32(1e+64)), new f64(new f32(1e+96)), new f64(new f32(1e+128)), new f64(new f32(1e+160)), new f64(new f32(1e+192)), new f64(new f32(1e+224)), new f64(new f32(1e+256)), new f64(new f32(1e+288))], len: new int(10), cap: new int(10)}));
math__pow10negtab32 = new array(new array_buffer({arr: [new f64(new f32(1e-00)), new f64(new f32(1e-32)), new f64(new f32(1e-64)), new f64(new f32(1e-96)), new f64(new f32(1e-128)), new f64(new f32(1e-160)), new f64(new f32(1e-192)), new f64(new f32(1e-224)), new f64(new f32(1e-256)), new f64(new f32(1e-288)), new f64(new f32(1e-320))], len: new int(11), cap: new int(11)}));
math__sin_data = new array(new array_buffer({arr: [new f64(new f32(-0.3295190160663511504173)), new f64(new f32(0.0025374284671667991990)), new f64(new f32(0.0006261928782647355874)), new f64(new f32(-4.6495547521854042157541e-06)), new f64(new f32(-5.6917531549379706526677e-07)), new f64(new f32(3.7283335140973803627866e-09)), new f64(new f32(3.0267376484747473727186e-10)), new f64(new f32(-1.7400875016436622322022e-12)), new f64(new f32(-1.0554678305790849834462e-13)), new f64(new f32(5.3701981409132410797062e-16)), new f64(new f32(2.5984137983099020336115e-17)), new f64(new f32(-1.1821555255364833468288e-19))], len: new int(12), cap: new int(12)}));
math__sin_cs = (function() {
	let _tmp202 = new math__ChebSeries({});
	_tmp202.c = math__sin_data;
	_tmp202.order = new int(11);
	_tmp202.a = new int(-1);
	_tmp202.b = new int(1);
	return _tmp202;
})()
;
math__cos_data = new array(new array_buffer({arr: [new f64(new f32(0.165391825637921473505668118136)), new f64(new f32(-0.00084852883845000173671196530195)), new f64(new f32(-0.000210086507222940730213625768083)), new f64(new f32(1.16582269619760204299639757584e-6)), new f64(new f32(1.43319375856259870334412701165e-7)), new f64(new f32(-7.4770883429007141617951330184e-10)), new f64(new f32(-6.0969994944584252706997438007e-11)), new f64(new f32(2.90748249201909353949854872638e-13)), new f64(new f32(1.77126739876261435667156490461e-14)), new f64(new f32(-7.6896421502815579078577263149e-17)), new f64(new f32(-3.7363121133079412079201377318e-18))], len: new int(11), cap: new int(11)}));
math__cos_cs = (function() {
	let _tmp203 = new math__ChebSeries({});
	_tmp203.c = math__cos_data;
	_tmp203.order = new int(10);
	_tmp203.a = new int(-1);
	_tmp203.b = new int(1);
	return _tmp203;
})()
;
math__tan_p = new array(new array_buffer({arr: [new f64(new f32(-1.30936939181383777646e+4)), new f64(new f32(1.15351664838587416140e+6)), new f64(new f32(-1.79565251976484877988e+7))], len: new int(3), cap: new int(3)}));
math__tan_q = new array(new array_buffer({arr: [new f64(new f32(1.00000000000000000000e+0)), new f64(new f32(1.36812963470692954678e+4)), new f64(new f32(-1.32089234440210967447e+6)), new f64(new f32(2.50083801823357915839e+7)), new f64(new f32(-5.38695755929454629881e+7))], len: new int(5), cap: new int(5)}));
math__tanh_p = new array(new array_buffer({arr: [new f64(new f32(-9.64399179425052238628e-1)), new f64(new f32(-9.92877231001918586564e+1)), new f64(new f32(-1.61468768441708447952e+3))], len: new int(3), cap: new int(3)}));
math__tanh_q = new array(new array_buffer({arr: [new f64(new f32(1.12811678491632931402e+2)), new f64(new f32(2.23548839060100448583e+3)), new f64(new f32(4.84406305325125486048e+3))], len: new int(3), cap: new int(3)}));
// Initializations for module os.font
// Initializations for module iui
iui__keys = new array(new array_buffer({arr: [new string(new string("import")), new string(new string("fn")), new string(new string("mut")), new string(new string("0")), new string(new string("1")), new string(new string("2")), new string(new string("3")), new string(new string("4")), new string(new string("5")), new string(new string("6")), new string(new string("7")), new string(new string("8")), new string(new string("9")), new string(new string("// ")), new string(new string("\t")), new string(new string("'")), new string(new string("(")), new string(new string(")")), new string(new string(" as ")), new string(new string("/*")), new string(new string("*/"))], len: new int(21), cap: new int(21)}));
iui__numbers = new array(new array_buffer({arr: [new string(new string("0")), new string(new string("1")), new string(new string("2")), new string(new string("3")), new string(new string("4")), new string(new string("5")), new string(new string("6")), new string(new string("7")), new string(new string("8")), new string(new string("9"))], len: new int(10), cap: new int(10)}));
iui__blue_keys = new array(new array_buffer({arr: [new string(new string("import")), new string(new string("mut")), new string(new string("fn")), new string(new string("(")), new string(new string(")")), new string(new string(" as "))], len: new int(6), cap: new int(6)}));
iui__code_blue = gx__rgb(new int(90), new int(150), new int(230));
iui__code_num = gx__rgb(new int(240), new int(200), new int(0));
iui__code_pur = gx__rgb(new int(200), new int(100), new int(200));
iui__blue_words = new array(new array_buffer({arr: [new string(new string("mut")), new string(new string("pub")), new string(new string("fn")), new string(new string("true")), new string(new string("false")), new string(new string("import")), new string(new string("module")), new string(new string("struct"))], len: new int(8), cap: new int(8)}));
iui__pur_words = new array(new array_buffer({arr: [new string(new string("if")), new string(new string("return")), new string(new string("else")), new string(new string("for"))], len: new int(4), cap: new int(4)}));
// Initializations for module main
loadRoutine().then(_ => js_main());